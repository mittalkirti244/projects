{
  "version": 3,
  "sources": ["../../types/src/index.ts", "../../types/src/common/page.ts", "../../types/src/common/types.ts", "../../types/src/common/Application.ts", "../../types/src/common/webapp/manifest/Manifest.ts", "../../types/src/common/webapp/manifest/sapUi5.ts", "../../types/src/apiTypes.ts", "../../types/src/v2/index.ts", "../../types/src/v2/controls/Card.ts", "../../types/src/v2/controls/FilterBar.ts", "../../types/src/v2/controls/Table.ts", "../../types/src/v2/controls/AnalyticalListPageChart.ts", "../../types/src/v2/controls/ObjectPageSection.ts", "../../types/src/v2/controls/ObjectPageTable.ts", "../../types/src/v2/webapp/manifest/sapUiPageV2.ts", "../../types/src/v2/webapp/manifest/sapUi5.ts", "../../types/src/v2/overviewPage.ts", "../../types/src/v4/index.ts", "../../types/src/v4/controls/Table.ts", "../../types/src/v4/controls/ToolBar.ts", "../../types/src/v4/controls/ObjectPageHeaderSection.ts", "../../types/src/v4/controls/ObjectPageLayout.ts", "../../types/src/v4/controls/ObjectPageSection.ts", "../../types/src/v4/webapp/manifest/sapUiPageV4.ts", "../../types/src/v4/webapp/manifest/sapUi5.ts", "../../types/src/v4/webapp/manifest/ManifestSettings.ts", "../../types/src/v4/pages/ObjectPageConfigV4.ts", "../../types/src/v4/pages/ListReportConfigV4.ts", "../../types/src/apiTypes.ts", "../../types/src/v2/index.ts", "../../types/src/v2/controls/Card.ts", "../../types/src/v2/controls/FilterBar.ts", "../../types/src/v2/controls/Table.ts", "../../types/src/v2/controls/AnalyticalListPageChart.ts", "../../types/src/v2/controls/ObjectPageSection.ts", "../../types/src/v2/controls/ObjectPageTable.ts", "../../types/src/v2/webapp/manifest/sapUiPageV2.ts", "../../types/src/v2/webapp/manifest/sapUi5.ts", "../../types/src/v2/overviewPage.ts", "../../types/src/v4/index.ts", "../../types/src/v4/controls/Table.ts", "../../types/src/v4/controls/ToolBar.ts", "../../types/src/v4/controls/ObjectPageHeaderSection.ts", "../../types/src/v4/controls/ObjectPageLayout.ts", "../../types/src/v4/controls/ObjectPageSection.ts", "../../types/src/v4/webapp/manifest/sapUiPageV4.ts", "../../types/src/v4/webapp/manifest/sapUi5.ts", "../../types/src/v4/webapp/manifest/ManifestSettings.ts", "../../types/src/v4/pages/ObjectPageConfigV4.ts", "../../types/src/v4/pages/ListReportConfigV4.ts", "../../types/src/index.ts", "../../../node_modules/deepmerge/dist/cjs.js", "../../../node_modules/@sap-ux/annotation-converter/src/utils.ts", "../../../node_modules/@sap-ux/annotation-converter/src/converter.ts", "../../../node_modules/@sap-ux/annotation-converter/src/writeback.ts", "../../../node_modules/@sap-ux/annotation-converter/src/index.ts", "../../../node_modules/sax/lib/sax.js", "../../../node_modules/xml-js/lib/array-helper.js", "../../../node_modules/xml-js/lib/options-helper.js", "../../../node_modules/xml-js/lib/xml2js.js", "../../../node_modules/xml-js/lib/xml2json.js", "../../../node_modules/xml-js/lib/js2xml.js", "../../../node_modules/xml-js/lib/json2xml.js", "../../../node_modules/xml-js/lib/index.js", "../../../node_modules/@sap-ux/edmx-parser/src/utils.ts", "../../../node_modules/@sap-ux/edmx-parser/src/v2annotationsSupport.ts", "../../../node_modules/@sap-ux/edmx-parser/src/parser.ts", "../../../node_modules/@sap-ux/edmx-parser/src/merger.ts", "../../../node_modules/@sap-ux/edmx-parser/src/index.ts", "../../../node_modules/@ui5/flexibility-utils/src/changeUtils.js", "../../../node_modules/@ui5/flexibility-utils/index.js", "../../../node_modules/ejs/lib/utils.js", "../../../node_modules/ejs/lib/ejs.js", "../../../node_modules/lodash.unset/index.js", "../../../node_modules/uri-js/src/index.ts", "../../../node_modules/uri-js/src/schemes/urn-uuid.ts", "../../../node_modules/uri-js/src/schemes/urn.ts", "../../../node_modules/uri-js/src/schemes/mailto.ts", "../../../node_modules/uri-js/src/schemes/wss.ts", "../../../node_modules/uri-js/src/schemes/ws.ts", "../../../node_modules/uri-js/src/schemes/https.ts", "../../../node_modules/uri-js/src/schemes/http.ts", "../../../node_modules/uri-js/src/uri.ts", "../../../node_modules/uri-js/node_modules/punycode/punycode.es6.js", "../../../node_modules/uri-js/src/regexps-iri.ts", "../../../node_modules/uri-js/src/regexps-uri.ts", "../../../node_modules/uri-js/src/util.ts", "../../../node_modules/fast-deep-equal/index.js", "../../../node_modules/ajv/lib/compile/ucs2length.js", "../../../node_modules/ajv/lib/compile/util.js", "../../../node_modules/ajv/lib/compile/schema_obj.js", "../../../node_modules/json-schema-traverse/index.js", "../../../node_modules/ajv/lib/compile/resolve.js", "../../../node_modules/ajv/lib/compile/error_classes.js", "../../../node_modules/fast-json-stable-stringify/index.js", "../../../node_modules/ajv/lib/dotjs/validate.js", "../../../node_modules/ajv/lib/compile/index.js", "../../../node_modules/ajv/lib/cache.js", "../../../node_modules/ajv/lib/compile/formats.js", "../../../node_modules/ajv/lib/dotjs/ref.js", "../../../node_modules/ajv/lib/dotjs/allOf.js", "../../../node_modules/ajv/lib/dotjs/anyOf.js", "../../../node_modules/ajv/lib/dotjs/comment.js", "../../../node_modules/ajv/lib/dotjs/const.js", "../../../node_modules/ajv/lib/dotjs/contains.js", "../../../node_modules/ajv/lib/dotjs/dependencies.js", "../../../node_modules/ajv/lib/dotjs/enum.js", "../../../node_modules/ajv/lib/dotjs/format.js", "../../../node_modules/ajv/lib/dotjs/if.js", "../../../node_modules/ajv/lib/dotjs/items.js", "../../../node_modules/ajv/lib/dotjs/_limit.js", "../../../node_modules/ajv/lib/dotjs/_limitItems.js", "../../../node_modules/ajv/lib/dotjs/_limitLength.js", "../../../node_modules/ajv/lib/dotjs/_limitProperties.js", "../../../node_modules/ajv/lib/dotjs/multipleOf.js", "../../../node_modules/ajv/lib/dotjs/not.js", "../../../node_modules/ajv/lib/dotjs/oneOf.js", "../../../node_modules/ajv/lib/dotjs/pattern.js", "../../../node_modules/ajv/lib/dotjs/properties.js", "../../../node_modules/ajv/lib/dotjs/propertyNames.js", "../../../node_modules/ajv/lib/dotjs/required.js", "../../../node_modules/ajv/lib/dotjs/uniqueItems.js", "../../../node_modules/ajv/lib/dotjs/index.js", "../../../node_modules/ajv/lib/compile/rules.js", "../../../node_modules/ajv/lib/data.js", "../../../node_modules/ajv/lib/compile/async.js", "../../../node_modules/ajv/lib/dotjs/custom.js", "../../../node_modules/ajv/lib/definition_schema.js", "../../../node_modules/ajv/lib/keyword.js", "../../../node_modules/ajv/lib/ajv.js", "../src/index.ts", "../src/api.ts", "../src/sync/common/utils.ts", "../../../node_modules/@babel/runtime/helpers/esm/typeof.js", "../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../node_modules/@babel/runtime/helpers/esm/objectSpread.js", "../../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js", "../../../node_modules/@babel/runtime/helpers/esm/createClass.js", "../../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js", "../../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js", "../../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js", "../../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js", "../../../node_modules/@babel/runtime/helpers/esm/inherits.js", "../../../node_modules/i18next/dist/esm/i18next.js", "../src/extensionLogger.ts", "../src/sync/v2/generate/objectPage.ts", "../src/sync/common/decoration/control.ts", "../../../node_modules/reflect-metadata/Reflect.js", "../src/sync/common/decoration/decorators.ts", "../src/sync/common/flexUtils.ts", "../src/sync/common/decoration/flex.ts", "../src/sync/common/import/utils.ts", "../src/sync/common/generate/objectPage.ts", "../src/sync/v4/utils/StableIdHelper.ts", "../src/sync/common/generate/utils.ts", "../src/sync/common/importProject.ts", "../src/sync/v2/import/app/appProvider.ts", "../src/sync/common/appProvider.ts", "../src/sync/v2/import/common/index.ts", "../src/sync/v2/import/controls/table.ts", "../src/sync/v2/export/manifest.ts", "../src/sync/v2/export/controls/index.ts", "../src/sync/v2/application.ts", "../src/sync/v2/export/controls/Card.ts", "../src/sync/v2/export/controls/Field.ts", "../src/sync/v2/export/controls/FilterBar.ts", "../src/sync/v2/export/controls/FormAction.ts", "../src/sync/v2/export/controls/Fragment.ts", "../src/sync/v2/export/view-controller-generator.ts", "../src/sync/v2/export/controls/Table.ts", "../src/sync/v2/export/controls/Action.ts", "../src/sync/v2/export/controls/TableColumn.ts", "../src/sync/v2/export/controls/ToolBar.ts", "../src/sync/v2/export/controls/AnalyticalListPageChart.ts", "../src/sync/v2/export/controls/AnalyticalListPageKPI.ts", "../src/sync/v2/export/controls/ObjectPageHeader.ts", "../src/sync/v2/export/controls/ObjectPageHeaderAction.ts", "../src/sync/v2/export/controls/ObjectPageFooterAction.ts", "../src/sync/v2/export/controls/ObjectPageLayout.ts", "../src/sync/v2/export/controls/ObjectPageCustomSection.ts", "../src/sync/v2/export/controls/ObjectPageSectionsV2.ts", "../src/sync/v2/export/controls/ObjectPageChart.ts", "../src/sync/v2/export/controls/ObjectPageTable.ts", "../src/sync/v2/export/controls/ObjectPageToolBarAction.ts", "../src/sync/v2/types.ts", "../src/sync/v2/import/pages/listReport.ts", "../src/i18n/i18n.ts", "../src/sync/i18n.ts", "../src/sync/v2/import/utils.ts", "../src/sync/v2/export/pages/index.ts", "../src/sync/v2/export/pages/AnalyticalListPage.ts", "../src/sync/v2/export/pages/ListReport.ts", "../src/sync/v2/export/pages/ObjectPage.ts", "../src/sync/v2/export/pages/OverviewPage.ts", "../src/sync/common/decoration/factory.ts", "../src/sync/v2/export/factory.ts", "../src/sync/v2/import/pages/analyticalListPage.ts", "../src/sync/v2/import/pages/objectPage.ts", "../src/sync/v2/import/app/ovpProvider.ts", "../src/sync/v2/import/pages/overviewPage.ts", "../src/sync/v2/export/export.ts", "../src/sync/v4/utils/utils.ts", "../src/sync/v4/generate/listReport.ts", "../src/sync/v4/generate/objectPage.ts", "../src/sync/v4/generate/freestylePage.ts", "../src/sync/v4/generate/generate.ts", "../src/sync/v4/application.ts", "../src/sync/v4/sync-rules/controllerExtensions.ts", "../src/sync/v4/import/pages/listReport.ts", "../src/sync/v4/import/utils.ts", "../src/sync/v4/export/controls/index.ts", "../src/sync/v4/export/controls/Table.ts", "../src/sync/v4/export/controls/TableColumn.ts", "../src/sync/v4/export/controls/ToolBar.ts", "../src/sync/v4/export/controls/ToolBarAction.ts", "../src/sync/v4/export/controls/ObjectPageToolBarAction.ts", "../src/sync/v4/export/controls/ObjectPageForm.ts", "../src/sync/v4/export/controls/ObjectPageFormAction.ts", "../src/sync/v4/export/controls/FilterBar.ts", "../src/sync/v4/export/controls/ObjectPageTableColumn.ts", "../src/sync/v4/export/controls/ObjectPageHeader.ts", "../src/sync/v4/export/controls/ObjectPageHeaderSection.ts", "../src/sync/v4/export/controls/ObjectPageLayout.ts", "../src/sync/v4/export/controls/ObjectPageTable.ts", "../src/sync/v4/export/controls/ObjectPageCustomSection.ts", "../src/sync/v4/export/pages/index.ts", "../src/sync/v4/export/pages/ListReport.ts", "../src/sync/v4/export/pages/ObjectPage.ts", "../src/sync/v4/export/pages/FreestylePage.ts", "../src/sync/v4/export/factory.ts", "../src/sync/v4/import/pages/objectPage.ts", "../src/sync/v4/import/app/baseAppProvider.ts", "../src/sync/v4/import/app/appProvider.ts", "../src/sync/v4/import/app/freestyleProvider.ts", "../src/specification/schemaAccess.ts", "../src/sync/v2/generate/utils.ts", "../src/sync/v2/generate/listReport.ts", "../src/sync/v2/generate/analyticalListReport.ts", "../src/sync/v2/generate/overviewPage.ts", "../src/sync/v2/generate/generate.ts", "../src/sync/v2/export/exportPage.ts", "../src/sync/v4/export/exportCustomColumn.ts", "../src/sync/v4/export/utils.ts", "../src/sync/v4/export/manifest.ts", "../src/sync/v4/export/flexibleColumnLayout.ts", "../src/sync/v4/export/export.ts", "../src/project.ts"],
  "sourcesContent": ["export * from './common';\nexport * from './apiTypes';\nexport * as v2 from './v2';\nexport * as v4 from './v4';\n", "import type { FlexibleColumnLayoutType, ManifestSettingsType } from './types';\n\nexport enum PageType {\n    ObjectPage = 'ObjectPage',\n    ListReport = 'ListReport',\n    OverviewPage = 'OverviewPage',\n    CustomPage = 'CustomPage',\n    AnalyticalListPage = 'AnalyticalListPage'\n}\n\nexport enum PageTypeV4 {\n    ObjectPage = 'ObjectPage',\n    ListReport = 'ListReport',\n    CustomPage = 'CustomPage',\n    FPMCustomPage = 'FPMCustomPage',\n    AnalyticalListPage = 'AnalyticalListPage'\n}\n\nexport const PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP: Map<PageType, string> = new Map([\n    [PageType.ListReport, 'sap.suite.ui.generic.template.ListReport.view.ListReport'],\n    [PageType.AnalyticalListPage, 'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage'],\n    [PageType.ObjectPage, 'sap.suite.ui.generic.template.ObjectPage.view.Details']\n]);\n\nexport interface PageConfig {\n    $schema?: string;\n}\n\nexport interface CustomPageConfig extends PageConfig {\n    $filePath?: string;\n}\n\nexport interface PageBase {\n    name?: string;\n    entitySet?: string;\n    navigationProperty?: string;\n    config?: PageConfig;\n    navigation?: { [property: string]: string | object };\n    variantManagement?: string;\n    defaultLayoutType?: FlexibleColumnLayoutType;\n}\n\nexport enum FioriElementsVersion {\n    v2 = 'v2',\n    v4 = 'v4'\n}\nexport enum OdataVersion {\n    v2 = 'v2',\n    v4 = 'v4'\n}\nexport interface Target {\n    fioriElements: FioriElementsVersion;\n    odata: OdataVersion;\n}\n\nexport interface PagesBase {\n    [key: string]: PageBase;\n}\nexport interface SapUiGenericAppPageSettings {\n    [key: string]: ManifestSettingsType;\n}\n\nexport interface SapUiGenericApp {\n    pages: SapUiGenericAppPage[] | SapUiGenericAppPageMap;\n    _version?: string;\n    settings?: object;\n}\n\nexport interface SapUiGenericAppPage {\n    entitySet: string;\n    navigationProperty?: string;\n    component: {\n        name: string;\n        settings?: SapUiGenericAppPageSettings;\n    };\n    pages?: SapUiGenericAppPage[] | { [pageId: string]: SapUiGenericAppPage };\n}\n\nexport interface SapUiGenericAppPageMap {\n    [key: string]: SapUiGenericAppPage;\n}\n\nexport interface SapUiGenericApp {\n    pages: SapUiGenericAppPage[] | SapUiGenericAppPageMap;\n    _version?: string;\n    settings?: object;\n}\n", "import type { AnnotationTerm, EntityType } from '@sap-ux/vocabularies-types';\nimport type { CollectionFacet, ReferenceFacet, ReferenceURLFacet } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type { Manifest } from './webapp/manifest';\n\nexport enum FlexibleColumnLayoutType {\n    OneColumn = 'OneColumn',\n    TwoColumnsBeginExpanded = 'TwoColumnsBeginExpanded',\n    TwoColumnsMidExpanded = 'TwoColumnsMidExpanded',\n    MidColumnFullScreen = 'MidColumnFullScreen',\n    ThreeColumnsMidExpanded = 'ThreeColumnsMidExpanded',\n    ThreeColumnsEndExpanded = 'ThreeColumnsEndExpanded',\n    ThreeColumnsMidExpandedEndHidden = 'ThreeColumnsMidExpandedEndHidden',\n    ThreeColumnsBeginExpandedEndHidden = 'ThreeColumnsBeginExpandedEndHidden',\n    EndColumnFullScreen = 'EndColumnFullScreen'\n}\n\nexport const enum FlexChangeLayer {\n    Vendor = 'VENDOR',\n    Customer = 'CUSTOMER_BASE'\n}\n\nexport type ManifestSettingsType = boolean | number | string | object;\n\n/**\n * Type for all available schema types, e.g. Application, ListReport, ObjectPage, ...\n */\nexport enum SchemaType {\n    Application = 'Application',\n    ObjectPage = 'ObjectPage',\n    ListReport = 'ListReport',\n    OverviewPage = 'OverviewPage',\n    AnalyticalListPage = 'AnalyticalListPage',\n    FreestylePage = 'FreestylePage'\n}\n\nexport enum ExportArtifacts {\n    flex = 'flex',\n    manifest = 'manifest'\n}\n\nexport enum ALPViewType {\n    Primary = 'primary',\n    Secondary = 'secondary'\n}\n\nexport enum SectionType {\n    Section = 'Section',\n    SubSection = 'SubSection',\n    HeaderSection = 'HeaderSection'\n}\n\nexport enum ArtifactType {\n    Manifest = 'Manifest',\n    FlexChange = 'FlexChange',\n    Annotation = 'Annotation',\n    Fragment = 'Fragment'\n}\n\nexport enum ControlType {\n    Table = 'sap.m.Table',\n    TableColumn = 'sap.m.Column',\n    SmartTable = 'sap.ui.comp.smarttable.SmartTable',\n    SmartFilterBar = 'sap.ui.comp.smartfilterbar.SmartFilterBar',\n    SmartChart = 'sap.ui.comp.smartchart.SmartChart',\n    Group = 'sap.ui.comp.smartform.Group',\n    GroupElement = 'sap.ui.comp.smartform.GroupElement',\n    Button = 'sap.m.Button',\n    ToolbarButton = 'sap.m.OverflowToolbarButton',\n    Avatar = 'sap.f.Avatar',\n    ObjectPageDynamicHeaderTitle = 'sap.uxap.ObjectPageDynamicHeaderTitle',\n    ObjectPageGridProperties = 'sap.ui.layout.GridData',\n    ObjectPageHeader = 'sap.uxap.ObjectPageHeader',\n    ObjectPageLayout = 'sap.uxap.ObjectPageLayout',\n    HeaderAction = 'sap.uxap.ObjectPageHeaderActionButton',\n    DynamicPage = 'sap.f.DynamicPage',\n    Form = 'sap.ui.layout.form',\n    Chart = 'sap.suite.ui.microchart',\n    Section = 'sap.uxap.ObjectPageSection',\n    SubSection = 'sap.uxap.ObjectPageSubSection'\n}\n\nexport interface ChangeContent {\n    property: string;\n    newValue?: ManifestSettingsType;\n    newBinding?: string | object;\n}\n\nexport enum Visualization {\n    LineItem = 'LineItem',\n    Chart = 'Chart'\n}\n\nexport type anyFacetType =\n    | AnnotationTerm<CollectionFacet>\n    | AnnotationTerm<ReferenceFacet>\n    | AnnotationTerm<ReferenceURLFacet>;\n\nexport enum DirName {\n    Sapux = 'src',\n    Schemas = '.schemas',\n    Pages = 'pages',\n    Webapp = 'webapp',\n    Temp = '.tmp',\n    Changes = 'changes',\n    LocalService = 'localService',\n    Controller = 'controller',\n    View = 'view',\n    Fragment = 'fragment',\n    Ext = 'ext',\n    VSCode = '.vscode'\n}\nexport enum FileName {\n    App = 'app.json'\n}\nexport const FacetTitlePrefix = 'Facet ID: ';\nexport const ActionTitlePrefix = 'Action ID: ';\n\nexport interface FileData {\n    dataSourceUri: string;\n    fileContent: string;\n}\n\nexport interface ExportResults {\n    flexChanges: string[];\n    manifest: Manifest;\n    fragments: FileData[];\n}\n\n/**\n * Taken over from https://github.com/sap-staging/ui5-flexibility-utils/blob/origin/master/src/changeUtils.js\n */\nexport interface ChangeDefinition {\n    controlId: string; // ID of the control containing all prefixes excluding the application ID prefix\n    controlType: string; // This is NOT in the API so far, but we need it\n    type: string; // Change type, i.e. <code>propertyChange</code>\n    content: ChangeContent; // Content of the change needed by the corresponding change handler\n    isCustomer: boolean; // Flag indicating whether the project is related to a customer project\n    sapui5Version: string; // SAPUI5 version for which the change is created\n    creatingTool: string; // Name of the tool calling this function for support reasons\n    id: string; // UID of the change;\n    reference: string; // Reference to the application;\n    appVersion: string; // Version of the application;\n    creation: string; // String with the creation timestamp;\n}\n/**\n * Taken over from https://github.com/sap-staging/ui5-flexibility-utils/blob/origin/master/src/changeUtils.js\n */\nexport interface ChangeDefinitionInCreation {\n    controlId: string; // ID of the control containing all prefixes excluding the application ID prefix\n    controlType: string; // This is NOT in the API so far, but we need it\n    type?: string; // Change type, i.e. <code>propertyChange</code>\n    content: ChangeContent; // Content of the change needed by the corresponding change handler\n    isCustomer?: boolean; // Flag indicating whether the project is related to a customer project\n    sapui5Version?: string; // SAPUI5 version for which the change is created\n    creatingTool?: string; // Name of the tool calling this function (this is needed for support reasons)\n}\n\nexport type CreateFlexChange = (change: ChangeDefinitionInCreation, manifest: Manifest) => string;\nexport type exportFlexValue = (flexChange: ChangeDefinitionInCreation, configObject: object, key: string) => void;\nexport type importFlexValue = (flexChange: ChangeDefinitionInCreation, configObject: object, key: string) => void;\n\nexport type ControlTypeFunction = () => ControlType;\nexport type ControlIdFunction = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType?: ControlTypeFunction,\n    title?: string\n) => string;\n\nexport interface FlexAdapter {\n    controlId: ControlIdFunction;\n    controlType: ControlTypeFunction;\n    createFlexChange: CreateFlexChange;\n    exportFlexValue?: exportFlexValue;\n    importFlexValue?: importFlexValue;\n}\n\nexport type ManifestPath = (pageKeys?: string[], manifest?: Manifest, ...pathParts) => string;\n\nexport type ExportHandlerFunction = (\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey?: string,\n    ...pathParts: string[]\n) => unknown;\n\nexport interface ManifestConverter {\n    path: ManifestPath;\n    key?: string;\n    import?:\n        | ((manifestSection: unknown, sectionId?: string, propertyKey?: string, breadcrumbs?: string[]) => unknown)\n        | boolean;\n    export?: ExportHandlerFunction | boolean;\n    delete?:\n        | ((\n              manifestSection: unknown,\n              configObject: unknown,\n              key: string,\n              manifestKey: string,\n              syncRuleKey?: string,\n              config?: object\n          ) => unknown)\n        | boolean;\n}\n\nexport interface SyncRule {\n    flex?: FlexAdapter;\n    manifest?: ManifestConverter;\n    generate?: (schema: object, definition: object, propertyName: string) => unknown;\n}\n\nexport interface Content {\n    property: string;\n    oldValue?: ManifestSettingsType;\n    newValue: ManifestSettingsType;\n}\nexport interface Selector {\n    id: string;\n    type: string;\n    idIsLocal?: boolean;\n}\n\nexport interface PageLayoutInformation {\n    id: string;\n    pageId: string;\n}\n\nexport interface FakeLRepSettings {\n    isKeyUser: boolean;\n    isAtoAvailable: boolean;\n    isProductiveSystem: boolean;\n}\n\nexport interface ValidityInformation {\n    since: string;\n    deprecated?: Deprecated;\n}\n\nexport interface DeprecatedProperties {\n    [key: string]: ValidityInformation;\n}\n\nexport interface Deprecated {\n    since: string;\n    text?: string;\n}\n\nexport enum FacetBase {\n    LineItem = 'LineItem',\n    CollectionFacet = 'CollectionFacet',\n    Chart = 'Chart',\n    Form = 'Form',\n    Identification = 'Identification',\n    DataPoint = 'DataPoint',\n    Address = 'Address',\n    Contact = 'Contact',\n    PresentationVariant = 'PresentationVariant',\n    Unknown = ''\n}\n\nexport interface FacetConfig {\n    base: FacetBase;\n    lineItem?: string[];\n    Label?: string;\n    ID?: string;\n    entityType?: EntityType;\n    annotationPath?: string;\n    target?: object;\n    facets?: FacetConfigs;\n}\n\nexport interface SubSectionConfig {\n    base: FacetBase;\n    Label?: string;\n    ID?: string;\n    facets: FacetConfigs;\n    annotationPath?: string;\n    entityType?: EntityType;\n    target?: object;\n}\n\nexport interface FacetConfigs {\n    [key: string]: FacetConfig | SubSectionConfig;\n}\n\nexport interface File {\n    dataSourceUri: string;\n    fileContent: string;\n}\n\nexport interface Files {\n    [name: string]: object;\n}\n\nexport interface FacetSection {\n    key: string;\n    label?: string;\n    ID?: string;\n    custom?: boolean;\n    entityType?: EntityType;\n}\n\nexport interface SchemaFilePath {\n    filename: string;\n    path: string;\n}\n\nexport interface ObjectPageSectionData {\n    target: string;\n    key?: string;\n}\n\nexport const BindingPropertyRegexAsString = \"^{[A-Za-z0-9{}&$!@#%? _|,<>'()[\\\\]\\\\/:=.]+}$\";\n\nexport enum ViewTemplateType {\n    ResponsiveTableColumnsExtension = 'ResponsiveTableColumnsExtension',\n    AnalyticalTableColumnsExtension = 'AnalyticalTableColumnsExtension',\n    TreeTableColumnsExtension = 'TreeTableColumnsExtension',\n    GridTableColumnsExtension = 'GridTableColumnsExtension',\n    ResponsiveTableCellsExtension = 'ResponsiveTableCellsExtension'\n}\n\n//Definitions for elements in app schema\nexport enum DefinitionName {\n    Action = 'Action',\n    Actions = 'Actions',\n    ActionsLR = 'Actions<LineItems>',\n    ALPChart = 'ALPChart',\n    ALPChartView = 'ALPChartView',\n    ALPTable = 'ALPTable',\n    ALPTableView = 'ALPTableView',\n    AnalyticalListPageFilterBar = 'AnalyticalListPageFilterBar',\n    AnnotationPathAsObject = 'AnnotationPathAsObject',\n    ChartToolBarAction = 'ChartToolBarAction',\n    CommonHeaderFacetSettings = 'CommonHeaderFacetSettings',\n    CustomAction = 'CustomAction',\n    CustomActionOP = 'CustomActionOP',\n    CustomColumn = 'TableCustomColumn',\n    CustomColumnOP = 'TableCustomColumnOP',\n    CustomColumns = 'TableCustomColumns',\n    CustomSections = 'CustomSections',\n    FieldPath = 'FieldPath',\n    Field = 'Field',\n    Fields = 'Fields',\n    Fields4Dialog = 'Fields4Dialog',\n    FilterBar = 'FilterBar',\n    Footer = 'Footer',\n    FooterAction = 'FooterAction',\n    FooterActions = 'FooterActions',\n    FooterActionsLR = 'FooterActions<LineItems>',\n    Form = 'Form',\n    FormAction = 'FormAction',\n    FormCustomActionOP = 'FormCustomActionOP',\n    SectionActions = 'SectionActions',\n    GenericActions = 'GenericActions',\n    GenericColumnsOP = 'GenericColumnsOP',\n    GenericFooter = 'GenericFooter',\n    GenericSections = 'GenericSections',\n    HeaderActions = 'HeaderActions',\n    HeaderSections = 'HeaderSections',\n    LineItems = 'LineItems',\n    LineItemsOfView = 'LineItemsOfView',\n    ListReportFilterBar = 'ListReportFilterBar',\n    LRTableView = 'LRTableView',\n    LRChartView = 'LRChartView',\n    MultiEditV2 = 'MultiEdit',\n    MultiTableModeV4 = 'MultiTableModeV4',\n    ObjectPageChart = 'ObjectPageChart',\n    ObjectPageCustomSectionFragment = 'ObjectPageCustomSectionFragment',\n    ObjectPageForm = 'ObjectPageForm',\n    ObjectPageFooter = 'ObjectPageFooter',\n    ObjectPageFooterAction = 'ObjectPageFooterAction',\n    ObjectPageFooterActions = 'ObjectPageFooterActions',\n    ObjectPageHeader = 'ObjectPageHeader',\n    ObjectPageHeaderSectionForm = 'ObjectPageHeaderSectionForm',\n    ObjectPageHeaderSectionChart = 'ObjectPageHeaderSectionChart',\n    ObjectPageHeaderSectionDataPoint = 'ObjectPageHeaderSectionDataPoint',\n    ObjectPageHeaderSectionContact = 'ObjectPageHeaderSectionContact',\n    ObjectPageHeaderSectionAddress = 'ObjectPageHeaderSectionAddress',\n    ObjectPageLayout = 'ObjectPageLayout',\n    ObjectPagePresentationVariant = 'ObjectPagePresentationVariant',\n    ObjectPageSectionAddress = 'ObjectPageSectionAddress',\n    ObjectPageSectionChart = 'ObjectPageSectionChart',\n    ObjectPageSectionContact = 'ObjectPageSectionContact',\n    ObjectPageSectionDataPoint = 'ObjectPageSectionDataPoint',\n    ObjectPageSectionForm = 'ObjectPageSectionForm',\n    ObjectPageSectionPresentationVariant = 'ObjectPageSectionPresentationVariant',\n    ObjectPageSectionTableV4 = 'ObjectPageSectionTableV4',\n    ObjectPageSubSections = 'ObjectPageSubSections',\n    ObjectPageTable = 'ObjectPageTable',\n    ObjectPageTableColumn = 'ObjectPageTableColumn',\n    ObjectPageToolBar = 'ObjectPageToolBar',\n    ObjectPageToolBarAction = 'ObjectPageToolBarAction',\n    ObjectPageToolBarActions = 'ObjectPageToolBarActions',\n    Position = 'Position',\n    PositionOP = 'PositionOP',\n    QuickVariant = 'QuickVariant',\n    QuickVariantSelectionOP = 'QuickVariantSelectionOP',\n    QuickVariantSelectionV4OP = 'QuickVariantSelectionV4OP',\n    RelatedFacetKeys = 'RelatedFacetKeys',\n    Sections = 'Sections',\n    SelectionFields = 'SelectionFields',\n    Table = 'Table',\n    TableSPV = 'TableSPV',\n    TableColumn = 'TableColumn',\n    TableViewExtension = 'TableViewExtension',\n    ToolBarAction = 'ToolBarAction',\n    ToolBarLR = 'ToolBar<LineItems>',\n    ToolBar = 'ToolBar',\n    ViewTableColumn = 'ViewTableColumn',\n    ViewCustomColumn = 'ViewTableCustomColumn',\n    ViewCustomAction = 'ViewTableCustomAction',\n    ViewChartToolBar = 'ViewChartToolBar',\n    ViewToolBarAction = 'ViewToolBarAction',\n    ViewPosition = 'ViewPosition',\n    ViewCustomActionPosition = 'ViewCustomActionPosition',\n    CustomActionPosition = 'CustomActionPosition',\n    CustomActionPositionOP = 'CustomActionPositionOP'\n}\n\nexport enum PropertyName {\n    actions = 'actions',\n    annotationPath = 'annotationPath',\n    chart = 'chart',\n    defaultPath = 'defaultPath',\n    defaultTemplateAnnotationPath = 'defaultTemplateAnnotationPath',\n    sections = 'sections',\n    table = 'table',\n    views = 'views'\n}\n\nexport enum SchemaTag {\n    annotationPath = 'annotationPath',\n    annotationType = 'annotationType',\n    artifactType = 'artifactType',\n    controlType = 'controlType',\n    dataType = 'dataType',\n    fullyQualifiedName = 'fullyQualifiedName',\n    hidden = 'hidden',\n    isViewNode = 'isViewNode',\n    key = 'key',\n    target = 'target',\n    propertyIndex = 'propertyIndex'\n}\n\nexport const METADATAPATH = 'webapp/localService/metadata.xml';\nexport const MANIFESTPATH = 'webapp/manifest.json';\nexport const VOCWITHSLASH = '/@com.sap.vocabularies';\nexport const VOCWITHCOLONS = '::@com.sap.vocabularies';\nexport const UIVOCABULARY = 'com.sap.vocabularies.UI.v1';\nexport const UIVOCABULARYDOT = 'com.sap.vocabularies.UI.v1.';\nexport const UIVOCABULARYALPHADOT = '@com.sap.vocabularies.UI.v1.';\nexport const QUICKVARPATH = '/quickVariantSelection';\nexport const QUICKVARPATHX = '/quickVariantSelectionX';\nexport const DATESETTINGSPATH = '/filterSettings/dateSettings';\nexport const FRAGMENTNAMEPART = '.fragment.';\n", "import type { Target } from './page';\nimport type { Pages as PagesV2, AppSettings as AppSettingsV2 } from '../v2';\nimport type { Pages as PagesV4, AppSettings as AppSettingsV4 } from '../v4';\nimport type { FlexibleColumnLayoutType } from './types';\n\nexport enum DraftDiscardEnabledSettings {\n    restricted = 'restricted'\n}\nexport interface DraftDiscardConfirmationSettings {\n    /**\n     * Allows applications to turn off the discard draft confirmation popup in various scenarios\n     */\n    enabled: DraftDiscardEnabledSettings;\n}\n\nexport enum TableColumnVerticalAlignment {\n    Top = 'Top',\n    Middle = 'Middle',\n    Bottom = 'Bottom'\n}\n\nexport enum StatePreservationMode {\n    persistence = 'persistence',\n    discovery = 'discovery'\n}\n\nexport interface Application {\n    $schema?: string;\n    id?: string;\n    pages?: PagesV2 | PagesV4;\n    home?: string;\n    target?: Target;\n    settings?: AppSettingsV2 | AppSettingsV4;\n}\n\nexport enum FlexibleColumnLayoutAggregations {\n    BeginColumnPages = 'beginColumnPages',\n    MidColumnPages = 'midColumnPages',\n    EndColumnPages = 'endColumnPages'\n}\n\nexport interface FlexibleColumnLayout {\n    defaultTwoColumnLayoutType?: FlexibleColumnLayoutType;\n    defaultThreeColumnLayoutType?: FlexibleColumnLayoutType;\n}\n\nexport interface CommonAppSettings {\n    /**\n     * To change the application header, in your project artifacts, change the i18n property file\n     * for your app under webapp/i18n/i18n.properties ->appTitle. Then, refer to the title as\n     * {{appTitle}} in the sap.app section of the manifest file.\n     * @i18nClassification TIT: Title of the application\n     */\n    title?: string;\n    /**\n     * To change the application header, in your project artifacts, change the i18n property file\n     * for your app under webapp/i18n/i18n.properties ->appDescription. Then, refer to the description\n     * as {{appDescription}} in the sap.app section of the manifest file.\n     * @i18nClassification TIT: Description of the application\n     */\n    description?: string;\n    /**\n     * To enable key user adaptation for the application, set the flexEnabled property to \"true\".\n     */\n    flexEnabled?: boolean;\n}\n", "import type { SapUiAppV2 } from '../../../v2/webapp/manifest/sapUiPageV2';\nimport type { SapUi5 as SapUi5V2 } from '../../../v2/webapp/manifest/sapUi5';\nimport type { SapUi as SapUiV2 } from '../../../v2/webapp/manifest/sapUi';\nimport type { SapOvp } from './sapOvp';\nimport type { SapUi5V4 } from '../../../v4/webapp/manifest/sapUi5';\nimport type { ManifestSettingsType } from '../../types';\n\nexport enum DataSourceType {\n    OData = 'OData',\n    ODataAnnotation = 'ODataAnnotation'\n}\n\nexport type ODataVersionType = '2.0' | '4.0';\n\nexport interface Inbound {\n    signature?: {\n        parameters: {};\n        additionalParameters: 'allowed';\n    };\n    semanticObject?: string;\n    action?: string;\n    title?: string;\n    subTitle?: string;\n    icon?: '';\n}\n\nexport interface CrossNavigation {\n    inbounds?: {\n        [key: string]: Inbound;\n    };\n}\n\nexport interface SapAppSourceTemplate {\n    id: string;\n    version?: string;\n    toolsId?: string;\n}\n\nexport interface SapApp {\n    id?: string;\n    title?: string;\n    type?: string;\n    description?: string;\n    dataSources?: SapAppDataSources | SapAppDataSourcesWithOptions;\n    offline?: boolean;\n    resources?: string;\n    sourceTemplate?: SapAppSourceTemplate;\n    crossNavigation?: CrossNavigation;\n}\n\nexport interface SapAppDataSources {\n    [key: string]: SapAppDataSource;\n    mainService: SapAppDataSource;\n}\n\nexport interface SapAppDataSource {\n    uri: string;\n    type: DataSourceType;\n    settings: SapAppDataSourceSettings;\n}\n\nexport interface SapAppDataSourceWithOptions extends SapAppDataSource {\n    isLocal: boolean;\n    order: number;\n    isActive: boolean;\n}\n\nexport interface SapAppDataSourcesWithOptions {\n    [key: string]: SapAppDataSourceWithOptions;\n}\n\nexport interface SapAppDataSourceSettings {\n    [key: string]: ManifestSettingsType;\n    annotations?: string[];\n    localUri?: string;\n    odataVersion?: ODataVersionType;\n}\n\nexport enum ManifestSection {\n    ui = 'sap.ui',\n    app = 'sap.app',\n    generic = 'sap.ui.generic.app',\n    ovp = 'sap.ovp',\n    ui5 = 'sap.ui5'\n}\n\nexport const GENERICAPPSETTINGS = `${ManifestSection.generic}/settings`;\n\nexport interface Manifest {\n    _version?: string;\n    'sap.ui'?: SapUiV2;\n    'sap.app'?: SapApp;\n    'sap.ui.generic.app'?: SapUiAppV2;\n    'sap.ovp'?: SapOvp;\n    'sap.ui5'?: SapUi5V2 | SapUi5V4;\n}\n", "import type { FlexibleColumnLayoutAggregations } from '../../Application';\nimport type { FlexibleColumnLayoutType } from '../../types';\n\nexport const FIORI_FCL_ROOT_VIEW_NAME = 'sap.fe.templates.RootContainer.view.Fcl';\n\nexport const FIORI_FCL_ROOT_ID = 'appRootView';\n\nexport enum ViewTypes {\n    XML = 'XML',\n    HTML = 'HTML',\n    JSON = 'JSON'\n    /** Deprecated as of version 1.90\n     * JS\n     * */\n}\n\nexport interface SapUi5RootView {\n    viewName: typeof FIORI_FCL_ROOT_VIEW_NAME | string;\n    type: ViewTypes;\n    id: typeof FIORI_FCL_ROOT_ID | string;\n    async?: boolean;\n}\n\nexport interface SapUi5OdataModel {\n    preload?: boolean;\n    dataSource: string;\n    settings?: {\n        bundleUrl?: string;\n        bundleName?: string;\n    };\n}\n\nexport interface SapUi5ResourceModel {\n    type: string;\n    uri?: string;\n}\n\nexport type SapUi5RoutingRouteTarget = string | string[];\n\nexport interface SapUi5RoutingRoute {\n    name: string;\n    pattern: string;\n    target: SapUi5RoutingRouteTarget;\n    layout?: FlexibleColumnLayoutType;\n}\n\nexport const SAPUI5_VIEW_CLASS = 'sap.ui.core.mvc.View';\nexport const SAPUI5_FRAGMENT_CLASS = 'sap.ui.core.Fragment';\n\nexport interface SapUi5ViewPath {\n    key: string;\n    annotationPath?: string;\n    entitySet?: string;\n    label?: string;\n    template?: string;\n    keepPreviousPersonalization?: boolean;\n    visible?: string;\n}\n\nexport interface SapUi5RoutingTargetSettingsViews {\n    shownCounts?: boolean;\n    paths?: Array<SapUi5ViewPath>;\n}\n\nexport interface SapUi5RoutingTargetNavigation {\n    detail: object;\n}\n\nexport interface SapUi5RoutingTargetSettings {\n    entitySet?: string;\n    navigation?: { [key: string]: SapUi5RoutingTargetNavigation };\n    content?: {\n        header?: {\n            facets?: {};\n        };\n        body?: {\n            sections?: {};\n        };\n        footer?: {\n            actions?: {};\n        };\n        controlConfiguration?: {};\n    };\n    variantManagement?: string;\n    controlConfiguration?: object;\n    viewPath?: string;\n    views?: SapUi5RoutingTargetSettingsViews;\n}\n\nexport interface SapUi5RoutingTargetBase {\n    options?: {\n        settings: SapUi5RoutingTargetSettings;\n    };\n    controlAggregation?: FlexibleColumnLayoutAggregations;\n    contextPattern?: string;\n}\n\nexport interface SapUi5RoutingTarget extends SapUi5RoutingTargetBase {\n    type: string;\n    id: string;\n    name: string;\n}\n\nexport interface Dependencies {\n    minUI5Version?: string;\n    libs?: { [key: string]: { lazy?: boolean } };\n    components?: { [key: string]: { lazy?: boolean } };\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { ConvertedMetadata, EntitySet } from '@sap-ux/vocabularies-types';\nimport type { Editor } from 'mem-fs-editor';\nimport type {\n    CustomPage as FPMCustomPage,\n    CustomTableColumn as FPMCustomTableColumn,\n    CustomSection as FPMCustomSection,\n    ObjectPage as FPMObjectPage,\n    CustomAction as FPMCustomAction,\n    CustomView as FPMCustomView,\n    ControllerExtension as FPMControllerExtension\n} from '@sap-ux/fe-fpm-writer';\nimport type { FioriElementsVersion, Manifest, v2, v4 } from '.';\nimport type { SchemaType, FileData, FlexChangeLayer, ExportResults } from './common/types';\n\nexport type MessageMetadataType = (object | string | number)[];\n\nexport const enum LogSeverity {\n    Error = 'error',\n    Warning = 'warning',\n    Info = 'info'\n}\n\nexport const LogSeverityLabel = {\n    [LogSeverity.Error]: 'Error',\n    [LogSeverity.Warning]: 'Warning',\n    [LogSeverity.Info]: 'Information'\n};\n\nexport type LogMessage = string | object | undefined;\n\nexport interface RangePosition {\n    line: number;\n    character: number;\n}\nexport interface Range {\n    start: RangePosition;\n    end: RangePosition;\n}\n\nexport interface Location {\n    path: string;\n    range?: Range | string[];\n}\n\n/**\n * Interface used to define a logger for the specificaton API\n */\nexport interface ExtensionLogger {\n    info: (message: string, ...meta: MessageMetadataType) => void;\n    warning: (message: string, ...meta: MessageMetadataType) => void;\n    error: (message: string, ...meta: MessageMetadataType) => void;\n}\n\n/**\n * Types for V2 schema generation\n */\nexport type GenerateListReportV2 = {\n    [SchemaType.ListReport]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        manifest: object;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateObjectPageV2 = {\n    [SchemaType.ObjectPage]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        manifest: object;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateOverviewPageV2 = {\n    [SchemaType.OverviewPage]: {\n        genericSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: object[];\n        manifest: object;\n        fragments: FileData[];\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateSchemaV2Type =\n    | GenerateListReportV2\n    | GenerateObjectPageV2\n    | GenerateOverviewPageV2\n    | GenerateAnalyticalListPageV2;\n\nexport interface GenerateSchemaV2 {\n    [FioriElementsVersion.v2]: GenerateSchemaV2Type;\n}\n\n/**\n * Types for V4 schema generation\n */\nexport type GenerateListReportV4 = {\n    [SchemaType.ListReport]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        logger?: ExtensionLogger;\n        manifest?: object;\n    };\n};\n\nexport type GenerateObjectPageV4 = {\n    [SchemaType.ObjectPage]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        manifest: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: {\n        genericSchema: object;\n        entitySet: string;\n        annotations: FileData[];\n        logger?: ExtensionLogger;\n        manifest?: object;\n    };\n};\n\nexport type GenerateFreestylePageV4 = {\n    [SchemaType.FreestylePage]: {\n        genericSchema: object;\n        annotations: FileData[];\n        manifest: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type GenerateSchemaV4Type =\n    | GenerateListReportV4\n    | GenerateObjectPageV4\n    | GenerateAnalyticalListPageV4\n    | GenerateFreestylePageV4;\n\nexport interface GenerateSchemaV4 {\n    [FioriElementsVersion.v4]: GenerateSchemaV4Type;\n}\n\n/**\n * Union types for schema generation\n */\nexport type GenerateSchemaParameters = GenerateSchemaV2 | GenerateSchemaV4;\n\n/**\n * Types for v2 export\n */\nexport type ExportListReportV2Parameters = {\n    appId: string;\n    page: v2.Page;\n    manifest: object;\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n};\nexport type ExportListReportV2 = {\n    [SchemaType.ListReport]: ExportListReportV2Parameters;\n};\n\nexport type ExportAnalyticalListPageV2Parameters = ExportListReportV2Parameters;\nexport type ExportAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: ExportAnalyticalListPageV2Parameters;\n};\n\nexport type ExportOverviewPageV2Parameters = {\n    page: v2.Page;\n    manifest: object;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n};\nexport type ExportOverviewPageV2 = {\n    [SchemaType.OverviewPage]: ExportOverviewPageV2Parameters;\n};\n\nexport type ExportObjectPageV2Parameters = {\n    appId: string;\n    page: v2.Page;\n    manifest: object;\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n};\nexport type ExportObjectPageV2 = {\n    [SchemaType.ObjectPage]: ExportObjectPageV2Parameters;\n};\n\nexport type ExportAppV2 = {\n    [SchemaType.Application]: {\n        application: v2.ApplicationV2;\n        manifest: object;\n        jsonSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\n/**\n * Types for v4 export\n */\nexport type ExportListReportV4Parameters = {\n    appId: string;\n    page: v4.PageV4;\n    manifest: object;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n    appRootPath?: string;\n};\nexport type ExportListReportV4 = {\n    [SchemaType.ListReport]: ExportListReportV4Parameters;\n};\n\nexport type ExportAnalyticalListPageV4Parameters = ExportListReportV4Parameters;\n\nexport type ExportAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: ExportAnalyticalListPageV4Parameters;\n};\n\nexport type ExportObjectPageV4Parameters = {\n    appId: string;\n    page: v4.Page;\n    manifest: object;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n    appRootPath?: string;\n};\nexport type ExportObjectPageV4 = {\n    [SchemaType.ObjectPage]: ExportObjectPageV4Parameters;\n};\n\nexport type ExportAppV4 = {\n    [SchemaType.Application]: {\n        application: v4.ApplicationV4;\n        manifest: object;\n        jsonSchema: object;\n        logger?: ExtensionLogger;\n    };\n};\n\nexport type ExportParametersV4Type = ExportListReportV4 | ExportObjectPageV4 | ExportAppV4 | ExportAnalyticalListPageV4;\n\nexport interface ExportParametersV4 {\n    [FioriElementsVersion.v4]: ExportParametersV4Type;\n}\n\nexport interface UI5Version {\n    ui5Version?: string;\n    layer?: FlexChangeLayer;\n}\n\nexport type ExportParametersV2Type =\n    | ExportListReportV2\n    | ExportObjectPageV2\n    | ExportOverviewPageV2\n    | ExportAppV2\n    | ExportAnalyticalListPageV2;\n\nexport interface ExportParametersV2 {\n    [FioriElementsVersion.v2]: ExportParametersV2Type;\n}\n\n/**\n * Union types for export\n */\nexport type ExportConfigParameters = UI5Version & (ExportParametersV2 | ExportParametersV4);\n\n/**\n * Types for v2 import\n */\nexport type ImportListReportV2Parameters = {\n    manifest: object;\n    flex: string[];\n    jsonSchema: object;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n};\nexport type ImportListReportV2 = {\n    [SchemaType.ListReport]: ImportListReportV2Parameters;\n};\n\nexport type ImportObjectPageV2Parameters = {\n    manifest: object;\n    flex: string[];\n    jsonSchema: object;\n    entitySet: string;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n};\nexport type ImportObjectPageV2 = {\n    [SchemaType.ObjectPage]: ImportObjectPageV2Parameters;\n};\n\nexport type ImportOverviewPageV2Parameters = {\n    manifest: object;\n    jsonSchema: object;\n    logger?: ExtensionLogger;\n};\nexport type ImportOverviewPageV2 = {\n    [SchemaType.OverviewPage]: ImportOverviewPageV2Parameters;\n};\n\nexport type ImportALPV2Parameters = ImportListReportV2Parameters;\nexport type ImportAnalyticalListPageV2 = {\n    [SchemaType.AnalyticalListPage]: ImportALPV2Parameters;\n};\n\n/**\n * Types for v4 import\n */\nexport type ImportListReportV4Parameters = {\n    manifest: object;\n    jsonSchema: Definition;\n    logger?: ExtensionLogger;\n};\nexport type ImportListReportV4 = {\n    [SchemaType.ListReport]: ImportListReportV4Parameters;\n};\n\nexport type ImportObjectPageV4Parameters = {\n    manifest: object;\n    jsonSchema: Definition;\n    routingId: string;\n    logger?: ExtensionLogger;\n};\nexport type ImportObjectPageV4 = {\n    [SchemaType.ObjectPage]: ImportObjectPageV4Parameters;\n};\n\nexport type ImportAnalyticalListPageV4Parameters = ImportListReportV4Parameters;\nexport type ImportAnalyticalListPageV4 = {\n    [SchemaType.AnalyticalListPage]: ImportAnalyticalListPageV4Parameters;\n};\n\nexport type ImportParametersV4Type = ImportListReportV4 | ImportObjectPageV4 | ImportAnalyticalListPageV4;\n\nexport interface ImportParametersV4 {\n    [FioriElementsVersion.v4]: ImportParametersV4Type;\n}\n\nexport type ImportParametersV2Type =\n    | ImportListReportV2\n    | ImportObjectPageV2\n    | ImportOverviewPageV2\n    | ImportAnalyticalListPageV2;\nexport interface ImportParametersV2 {\n    [FioriElementsVersion.v2]: ImportParametersV2Type;\n}\n\nexport type ImportResultsV2 =\n    | v2.ListReportConfigV2\n    | v2.ObjectPageConfigV2\n    | v2.OverviewPageConfigV2\n    | v2.AnalyticalListPageConfigV2;\nexport type ImportResultsV4 = v4.ListReportConfigV4 | v4.ObjectPageConfigV4;\n\nexport type ImportConfigParameters = ImportParametersV2 | ImportParametersV4;\nexport type ImportResults = ImportResultsV2 | ImportResultsV4;\n\n/**\n * Types for project import\n */\nexport interface ImportProjectParameters {\n    manifest: Manifest;\n    annotations: FileData[];\n    flex?: string[];\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n}\n\nexport enum TemplateType {\n    ListReportObjectPageV2 = 'ListReportObjectPageV2',\n    ListReportObjectPageV4 = 'ListReportObjectPageV4',\n    OverviewPageV2 = 'OverviewPageV2',\n    AnalyticalListPageV2 = 'AnalyticalListPageV2',\n    AnalyticalListPageV4 = 'AnalyticalListPageV4',\n    FreestylePageV4 = 'FreestylePageV4'\n}\n\nexport interface GenerateAppSchemaParameters {\n    templateType: TemplateType;\n    manifest: Manifest;\n    serviceAVT: ConvertedMetadata;\n    fioriElementsVersion: FioriElementsVersion;\n    entitySet?: EntitySet;\n    fragments?: FileData[];\n    logger?: ExtensionLogger;\n}\n\nexport enum CustomExtensionType {\n    CustomPage = 'CustomPage',\n    CustomColumn = 'CustomColumn',\n    CustomSection = 'CustomSection',\n    ObjectPage = 'ObjectPage',\n    CustomAction = 'CustomAction',\n    CustomView = 'CustomView',\n    ControllerExtension = 'ControllerExtension'\n}\n\nexport interface GenerateCustomExtensionParams {\n    customExtension: CustomExtensionType;\n    basePath: string;\n    data: CustomExtensionData;\n    fsEditor?: Editor;\n}\n\nexport type CustomExtensionData =\n    | FPMCustomPage\n    | FPMCustomTableColumn\n    | FPMCustomSection\n    | FPMObjectPage\n    | FPMCustomAction\n    | FPMCustomView\n    | FPMControllerExtension;\n\n/**\n * API Version\n */\nexport interface ApiVersion {\n    version?: string;\n    fpmWriter?: string;\n}\n\n/**\n * API interface\n */\nexport interface Specification {\n    getGenericSchema: (FioriElementsVersion, SchemaType) => Promise<JSON>;\n    generateSchema: (GenerateSchemaParameters) => object;\n    exportConfig: (ExportConfigParameters) => ExportResults;\n    importConfig: (ImportConfigParameters) => ImportResults;\n    importProject: (ImportProjectParameters) => Promise<File[]>;\n    getApiVersion: () => ApiVersion;\n    importProjectSchema: (ImportProjectParameters) => Promise<File[]>;\n    generateCustomExtension: (GenerateCustomExtensionParams) => Editor;\n}\n", "export * from './controls';\nexport * from './webapp';\nexport * from './page';\nexport * from './pages';\nexport * from './overviewPage';\nexport * from './application';\nexport * from './ApplicationV2';\n", "/**\n * Represents the card default grid size in columns and rows\n */\nexport type DefaultSpanDef =\n    | {\n          /**\n           * Represents the card width calculated based on window width.\n           */\n          cols: number;\n          /**\n           * Represents the number of line items to display for table and list cards.\n           */\n          rows: number;\n          /**\n           * Set showOnlyHeader to true to render only the card header.\n           */\n          showOnlyHeader?: boolean;\n          /**\n           * To show more lines of text in the title you can configure this property (maximum allowed: 3 lines).\n           */\n          minimumTitleRow?: number;\n          /**\n           * To show more lines of text in the sub-title you can configure this property (maximum allowed: 2 lines).\n           */\n          minimumSubTitleRow?: number;\n      }\n    | 'auto';\n\nexport interface TabSetting {\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents the selection annotation path.\n     */\n    selectionAnnotationPath?: string;\n    /**\n     * Represents the chart annotation path.\n     */\n    chartAnnotationPath?: string;\n    /**\n     * Represents the presentation annotation path.\n     */\n    presentationAnnotationPath?: string;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents the identification annotation path.\n     */\n    identificationAnnotationPath?: string;\n    /**\n     * Represents the dynamic subtitle annotation path\n     */\n    dynamicSubtitleAnnotationPath?: string;\n    /**\n     * Represents the drop down value to be shown\n     */\n    value?: string;\n    /**\n     * This property is responsible for setting specific chart settings.\n     */\n    chartProperties?: {\n        plotArea?: PlotAreaDef;\n    };\n    /**\n     * Represents the configuration to customize the column stacked chart.\n     */\n    colorPalette?:\n        | {\n              [k: string]: any;\n          }[]\n        | {\n              [k: string]: any;\n          };\n    [k: string]: any;\n}\n\nexport interface CommonCardSettings {\n    /**\n     * Represents the dominant entity set that will be displayed in the given card.\n     */\n    entitySet?: string;\n    /**\n     * The language-dependent title of the card, used in the card header.\n     * @i18nClassification TIT: Title of the card, used in the card header\n     */\n    title: string;\n    /**\n     * The language-dependent subtitle of the card, used in the card header.\n     * @i18nClassification TIT: Subtitle of the card, used in the card header\n     */\n    subTitle?: string;\n    /**\n     * Represents the identification annotation path.\n     */\n    identificationAnnotationPath?: string;\n    /**\n     * Represents the selection annotation path.\n     */\n    selectionAnnotationPath?: string;\n    /**\n     * Represents the presentation annotation path.\n     */\n    presentationAnnotationPath?: string;\n    /**\n     * The category of the card, as used in the card header.\n     */\n    category?: string;\n    /**\n     * To load cards with specific requirements, define a default size as part of the card definition in the descriptor file.\n     */\n    defaultSpan?: DefaultSpanDef;\n    /**\n     * Define an authorization check at card level.\n     */\n    requireAppAuthorization?: string;\n    /**\n     * Represents the card with view switch control.\n     */\n    tabs?: [TabSetting, ...TabSetting[]];\n    /**\n     * add $Select parameter in data fetch URL\n     */\n    addODataSelect?: boolean;\n}\n\nexport enum ChartCardType {\n    cardBubble = 'cardBubble',\n    cardchartsline = 'cardchartsline',\n    cardchartsdonut = 'cardchartsdonut'\n}\n\nexport enum CardTemplateType {\n    analytical = 'sap.ovp.cards.charts.analytical',\n    analyticalv4 = 'sap.ovp.cards.v4.charts.analytical',\n    list = 'sap.ovp.cards.list',\n    listv4 = 'sap.ovp.cards.v4.list',\n    linklist = 'sap.ovp.cards.linklist',\n    linklistv4 = 'sap.ovp.cards.v4.linklist',\n    table = 'sap.ovp.cards.table',\n    tablev4 = 'sap.ovp.cards.v4.table',\n    stack = 'sap.ovp.cards.stack'\n}\n\nexport const cardTemplateTypeMap = {\n    'sap.ovp.cards.charts.analytical': 'AnalyticalCard',\n    'sap.ovp.cards.v4.charts.analytical': 'AnalyticalCard',\n    'sap.ovp.cards.list': 'ListCard',\n    'sap.ovp.cards.v4.list': 'ListCard',\n    'sap.ovp.cards.linklist': 'LinklistCard',\n    'sap.ovp.cards.v4.linklist': 'LinklistCard',\n    'sap.ovp.cards.table': 'TableCard',\n    'sap.ovp.cards.v4.table': 'TableCard',\n    'sap.ovp.cards.stack': 'StackCard'\n};\n\nexport enum CardSettingsType {\n    analyticalCardSettings = 'analyticalCardSettings',\n    analyticalCardSettingsv4 = 'analyticalCardSettingsv4',\n    listCardSettings = 'listCardSettings',\n    listCardSettingsv4 = 'listCardSettingsv4',\n    stackCardSettings = 'stackCardSettings',\n    linkListCardSettings = 'linkListCardSettings',\n    tableCardSettings = 'tableCardSettings',\n    tableCardSettingsv4 = 'tableCardSettingsv4'\n}\n\nexport enum MeasureAggregateValues {\n    average = 'average',\n    max = 'max',\n    min = 'min',\n    sum = 'sum',\n    count = '$count'\n}\n\nexport interface MeasureAggregateSettings {\n    Axis1?: MeasureAggregateValues;\n    Axis2?: MeasureAggregateValues;\n    Axis3?: MeasureAggregateValues;\n}\n\n/**\n * Custom Card\n * @isViewNode true\n */\nexport interface CustomCard {\n    /**\n     * Represents the model for the card\n     */\n    model: string;\n    /**\n     * Represents the card component path to use for this card.\n     * @TJS-pattern ^(?!(sap.ovp.cards.charts.analytical|sap.ovp.cards.v4.charts.analytical|sap.ovp.cards.linklist|sap.ovp.cards.v4.linklist|sap.ovp.cards.list|sap.ovp.cards.v4.list|sap.ovp.cards.stack|sap.ovp.cards.table|sap.ovp.cards.v4.table)$).*$\n     */\n    template: string; // due the extension concept for cards, this can be any string\n    /**\n     * Represents the properties that are passed to the custom card.\n     */\n    settings?: CustomCardSettings;\n}\n/**\n * List Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface ListCard {\n    /**\n     * Represents the model for the List Card\n     */\n    model: string;\n    /**\n     * Represents the card component path to use for this List Card.\n     */\n    template: CardTemplateType.list | CardTemplateType.listv4;\n    /**\n     * Represents the properties that are passed to the list card.\n     */\n    listCardSettings: ListCardSettings;\n}\n\n/**\n * Stack Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface StackCard {\n    /**\n     * Represents the model for the StackCard.\n     */\n    model: string;\n    /**\n     * Represents the Stack Card component path to use for this card.\n     */\n    template: CardTemplateType.stack;\n    /**\n     * Represents the properties that are passed to the stack card.\n     */\n    stackCardSettings: StackCardSettings;\n}\n\n/**\n * Link List Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface LinklistCard {\n    /**\n     * Represents the model for the Link list Card.\n     */\n    model?: string;\n    /**\n     * Represents the Link list Card component path to use for this card.\n     */\n    template: CardTemplateType.linklist | CardTemplateType.linklistv4;\n    /**\n     * Represents the properties that are passed to the link list card.\n     */\n    linkListCardSettings: LinkListCardSettings;\n}\n\n/**\n * Table Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface TableCard {\n    /**\n     * Represents the model for the TableCard.\n     */\n    model: string;\n    /**\n     * Represents the Table Card component path to use for this card.\n     */\n    template: CardTemplateType.table | CardTemplateType.tablev4;\n    /**\n     * Represents the properties that are passed to the table card.\n     */\n    tableCardSettings: TableCardSettings;\n    /**\n     * If you set disableTableCardFlexibility to true, then at runtime, DataField records are sorted according to the importance set in the com.sap.vocabularies.UI.v1.ImportanceType annotation, and their order of entry.\n     * If you set disableTableCardFlexibility to false, then at runtime, table columns are sorted according to the importance set in the com.sap.vocabularies.UI.v1.ImportanceType annotation, and their order of entry.\n     */\n    disableTableCardFlexibility?: boolean;\n}\n\n/**\n * Analytical Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface AnalyticalCard {\n    /**\n     * Represents the model for the Analytical Card\n     */\n    model: string;\n    /**\n     * Represents the Analytical Card component path to use for this card.\n     */\n    template: CardTemplateType.analytical | CardTemplateType.analyticalv4;\n    /**\n     * Represents the properties that are passed to the analytical card.\n     */\n    analyticalCardSettings: AnalyticalCardSettings | AnalyticalCardSettingsv4;\n}\n\nexport type CustomCardNavigationType = 'dataPointNav' | 'chartNav' | 'headerNav' | 'noHeaderNav';\n\n/**\n * @displayName settings\n */\nexport interface CustomCardSettings extends CommonCardSettings {\n    /**\n     * Represents the user defined string in placeholder card.\n     */\n    itemText?: string;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n    /**\n     * Represents the static content that will be displayed in this card.\n     */\n    staticContent?: {\n        [k: string]: any;\n    }[];\n    /**\n     * Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: 'standard' | 'bar' | 'carousel';\n    /**\n     * Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card.\n     */\n    listType?: 'extended' | 'condensed';\n    /**\n     * Represents the sort key for the entity set.\n     */\n    sortBy?: string;\n    /**\n     * Represents the sort order for the entity set.\n     */\n    sortOrder?: 'ascending' | 'descending';\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents the chart annotation path.\n     */\n    chartAnnotationPath?: string;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents the KPI annotation path.\n     */\n    kpiAnnotationPath?: string;\n    /**\n     * Represents the selection presentation annotation path.\n     */\n    selectionPresentationAnnotationPath?: string;\n    /**\n     * Represents the dynamic subtitle annotation path.\n     */\n    dynamicSubtitleAnnotationPath?: string;\n    /**\n     * Represents the flag to indicate priority of number formatting over sap text.\n     */\n    ignoreSapText?: boolean;\n    /**\n     * Represents the Object Stream properties - properties that are passed to the Object Stream cards.\n     */\n    objectStreamCardsSettings?: {\n        /**\n         * If this flag is set to true, the first action on the footer of the quick view card will be a navigation action.\n         * If the flag is set to false, the navigation action on the footer of the quick view card isn't displayed. Other actions are shown instead.\n         * The default value of the flag is false.\n         */\n        showFirstActionInFooter?: boolean;\n        /**\n         * Represents the annotation path.\n         */\n        annotationPath?: string;\n    };\n    /**\n     * Represents the flag to indicate the use of object number/smart field.\n     */\n    enableLocaleCurrencyFormatting?: boolean;\n    /**\n     * Represents the configuration to alter the navigation mode in OVP Analytical Cards.\n     */\n    navigation?: CustomCardNavigationType;\n    /**\n     * Represents a switch to Show or Hide Filters in Cards Headers in OVP application.\n     */\n    showFilterInHeader?: boolean;\n    /**\n     * Represents a switch to Show or Hide Sorting in Cards Headers in OVP application.\n     */\n    showSortingInHeader?: boolean;\n    /**\n     * Flag for enabling images in a condensed list card.\n     */\n    imageSupported?: boolean;\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n    /**\n     * This property is responsible for showing and hiding text labels on the geo spots.\n     */\n    showLabelText?: boolean;\n    /**\n     * This property is responsible for passing custom parameters present in the entity set to the navigating application.\n     */\n    customParams?: string;\n    /**\n     * This property is responsible for setting specific chart settings.\n     */\n    chartProperties?: {\n        plotArea?: PlotAreaDef;\n    };\n    /**\n     * Represents the configuration to customize the column stacked chart.\n     */\n    colorPalette?:\n        | {\n              [k: string]: any;\n          }[]\n        | {\n              [k: string]: any;\n          };\n    [k: string]: any;\n}\n\n/**\n * @displayName settings\n */\nexport interface AnalyticalCardSettings extends CommonCardSettings {\n    /**\n     * Represents the chart annotation path.\n     */\n    chartAnnotationPath?: string;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n}\n\n/**\n * @displayName settings\n */\nexport interface AnalyticalCardSettingsv4 extends AnalyticalCardSettings {\n    /**\n     *\n     */\n    measureAggregate?: MeasureAggregateSettings;\n}\n\nexport enum ListFlavorType {\n    standard = 'standard',\n    bar = 'bar',\n    carousel = 'carousel'\n}\n\nexport enum ListTypeType {\n    extended = 'extended',\n    condensed = 'condensed'\n}\n\nexport enum SortOrderType {\n    ascending = 'ascending',\n    descending = 'descending'\n}\n\n/**\n * @displayName settings\n */\nexport interface ListCardSettings extends CommonCardSettings {\n    /**\n     * Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: ListFlavorType;\n    /**\n     * Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card.\n     */\n    listType?: ListTypeType;\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n    /**\n     * Defines the property by which the list shall be sorted.\n     */\n    sortBy?: string;\n    /**\n     * Defines the sort order.\n     */\n    sortOrder?: SortOrderType;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n}\n\n/**\n * @displayName settings\n */\nexport interface StackCardSettings extends CommonCardSettings {\n    /**\n     * Represents the user defined string in placeholder card.\n     */\n    itemText?: string;\n    /**\n     * The navigation property used to display information from a secondary entity set.\n     */\n    objectStreamCardsNavigationProperty?: string;\n    /**\n     * Configures additional settings for the cards displayed in the object stream.\n     */\n    objectStreamCardsSettings?: {\n        /**\n         * If this flag is set to true, the first action on the footer of the quick view card will be a navigation action.\n         * If the flag is set to false, the navigation action on the footer of the quick view card isn't displayed. Other actions are shown instead.\n         * The default value of the flag is false.\n         */\n        showFirstActionInFooter?: boolean;\n        /**\n         * Represents the annotation path.\n         */\n        annotationPath?: string;\n    };\n}\n\n/**\n * @displayName settings\n */\nexport interface TableCardSettings extends CommonCardSettings {\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: ListFlavorType;\n    /**\n     * Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card.\n     */\n    listType?: ListTypeType;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents the selection presentation annotation path.\n     */\n    selectionPresentationAnnotationPath?: string;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n    /**\n     * Defines the property by which the list shall be sorted.\n     */\n    sortBy?: string;\n    /**\n     * Defines the sort order.\n     */\n    sortOrder?: SortOrderType;\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n}\n\nexport enum LinkListFlavorType {\n    standard = 'standard',\n    carousel = 'carousel'\n}\n\n/**\n * @displayName settings\n */\nexport interface LinkListCardSettings extends CommonCardSettings {\n    /**\n     * The targetUri is a URI defining the link to a quick view, related application or external resource.\n     */\n    targetUri?: string;\n    /**\n     * listFlavor represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: LinkListFlavorType;\n    /**\n     * sortBy defines the property by which the list shall be sorted.\n     */\n    sortBy?: string;\n    /**\n     * sortOrder defines the sort order. Valid values are 'ascending' or 'descending'\n     */\n    sortOrder?: SortOrderType;\n    /**\n     * headerAnnotationPath represents the path to a HeaderInfo annotation.\n     */\n    headerAnnotationPath?: string;\n    /**\n     * staticContent represents the static content of a static link list card.\n     */\n    staticContent?: StaticContent[];\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n}\n\nexport interface StaticContent {\n    /**\n     * The language-dependent title of the StaticContent.\n     * @i18nClassification TIT: Title of the StaticContent\n     */\n    title: string;\n    /**\n     * The language-dependent subtitle of the StaticContent.\n     * @i18nClassification TIT: Subtitle of the StaticContent\n     */\n    subTitle?: string;\n    /**\n     * The uri for the image of the StaticContent.\n     */\n    imageUri?: string;\n    /**\n     * The uri for the target of the StaticContent.\n     */\n    targetUri?: string;\n    /**\n     * The alternative text for the image of the StaticContent.\n     * @i18nClassification ALT: The alternative text for the image of the StaticContent\n     */\n    imageAltText?: string;\n    /**\n     * Used to provide intent based navigation.\n     */\n    semanticObject?: string;\n    /**\n     * Used to provide intent based navigation.\n     */\n    action?: string;\n    /**\n     * Open static content in a new window.\n     */\n    openInNewWindow?: boolean;\n}\n/**\n * Plot area is a parent property which defines multiple other properties for smoothness and marker size.\n */\nexport interface PlotAreaDef {\n    /**\n     * isSmoothed represents whether smoother curves are required or not.\n     */\n    isSmoothed?: boolean;\n    /**\n     * markerSize represents the size of the markers in scatter plots.\n     */\n    markerSize?: number;\n    /**\n     * dataLabel is a parent property that defines other properties for type.\n     */\n    dataLabel?: {\n        /**\n         * The data label type defines whether to display percentage values or actual counts in the donut chart.\n         */\n        type?: 'value' | 'percentage';\n    };\n}\n", "export const enum DateRangeType {\n    DATERANGE = 'DATERANGE',\n    DATE = 'DATE',\n    FROM = 'FROM',\n    TO = 'TO',\n    DAYS = 'DAYS',\n    LASTDAYS = 'LASTDAYS',\n    LASTWEEKS = 'LASTWEEKS',\n    WEEK = 'WEEK',\n    LASTMONTHS = 'LASTMONTHS',\n    MONTH = 'MONTH',\n    QUARTER = 'QUARTER',\n    LASTQUARTERS = 'LASTQUARTERS',\n    LASTYEARS = 'LASTYEARS',\n    LASTYEAR = 'LASTYEAR',\n    YEAR = 'YEAR',\n    NEXTDAYS = 'NEXTDAYS',\n    NEXTWEEKS = 'NEXTWEEKS',\n    NEXTMONTHS = 'NEXTMONTHS',\n    NEXTQUARTERS = 'NEXTQUARTERS',\n    NEXTYEARS = 'NEXTYEARS',\n    NEXT = 'NEXT',\n    SPECIFICMONTH = 'SPECIFICMONTH',\n    YESTERDAY = 'YESTERDAY',\n    YEARTODATE = 'YEARTODATE',\n    TODAY = 'TODAY',\n    TOMORROW = 'TOMORROW',\n    THISWEEK = 'THISWEEK',\n    LASTWEEK = 'LASTWEEK',\n    LAST2WEEKS = 'LAST2WEEKS',\n    LAST3WEEKS = 'LAST3WEEKS',\n    LAST4WEEKS = 'LAST4WEEKS',\n    LAST5WEEKS = 'LAST5WEEKS',\n    NEXTWEEK = 'NEXTWEEK',\n    NEXT2WEEKS = 'NEXT2WEEKS',\n    NEXT3WEEKS = 'NEXT3WEEKS',\n    NEXT4WEEKS = 'NEXT4WEEKS',\n    NEXT5WEEKS = 'NEXT5WEEKS',\n    THISMONTH = 'THISMONTH',\n    LASTMONTH = 'LASTMONTH',\n    NEXTMONTH = 'NEXTMONTH',\n    THISQUARTER = 'THISQUARTER',\n    LASTQUARTER = 'LASTQUARTER',\n    NEXTQUARTER = 'NEXTQUARTER',\n    QUARTER1 = 'QUARTER1',\n    QUARTER2 = 'QUARTER2',\n    QUARTER3 = 'QUARTER3',\n    QUARTER4 = 'QUARTER4',\n    TODAYFROMTO = 'TODAYFROMTO'\n}\n\nexport const enum DefaultDateRangeValueType {\n    YESTERDAY = 'YESTERDAY',\n    TODAY = 'TODAY',\n    THISWEEK = 'THISWEEK',\n    LASTWEEK = 'LASTWEEK',\n    THISMONTH = 'THISMONTH',\n    TOMORROW = 'TOMORROW',\n    LASTMONTH = 'LASTMONTH',\n    THISQUARTER = 'THISQUARTER',\n    LASTQUARTER = 'LASTQUARTER',\n    THISYEAR = 'THISYEAR',\n    LASTYEAR = 'LASTYEAR',\n    LAST2WEEKS = 'LAST2WEEKS',\n    LAST3WEEKS = 'LAST3WEEKS',\n    LAST4WEEKS = 'LAST4WEEKS',\n    LAST5WEEKS = 'LAST5WEEKS',\n    YEARTODATE = 'YEARTODATE',\n    QUARTER1 = 'QUARTER1',\n    QUARTER2 = 'QUARTER2',\n    QUARTER3 = 'QUARTER3',\n    QUARTER4 = 'QUARTER4',\n    DATETOYEAR = 'DATETOYEAR'\n}\n\n/**\n * Filter Field\n * @isViewNode true\n */\nexport type SelectionField = {} | SelectionFieldDateSettings;\n\n/**\n * Filter Field for Date Settings\n * @isViewNode true\n */\nexport interface SelectionFieldDateSettings {\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n    /**\n     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.\n     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.\n     */\n    customDateRangeImplementation?: string;\n    /**\n     * You can use the filter settings to include and exclude specific date range values.\n     */\n    filter?: FilterType[];\n    /**\n     * You can set a default value for semantic date range.\n     */\n    defaultValue?: DefaultDateRange;\n}\n\n/**\n * Filter Fields\n * @isViewNode true\n */\nexport interface SelectionFields {\n    [key: string]: SelectionField;\n}\n\nexport type FilterTypeCategory = {\n    /**\n     * Choose 'key' to define filter values for single values of the date range type, or 'category' to filter by a whole subset.\n     */\n    path: 'category';\n    /**\n     * The 'contains' string specifies a filter describing a set of values of the date range type.\n     */\n    contains?: string;\n    /**\n     * Defines a single value of the standard date range type.\n     */\n    equals?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n};\n\nexport type FilterTypeKey = {\n    /**\n     * Choose 'key' to define filter values for single values of the date range, or 'category' to filter by a whole subset.\n     */\n    path: 'key';\n    /**\n     * The 'contains' string specifies a filter describing a set of values of the date range type.\n     */\n    contains?: string;\n    /**\n     * Defines a single value of the standard date range type.\n     */\n    equals?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n};\n\nexport type FilterType = FilterTypeKey | FilterTypeCategory;\n\nexport interface DefaultDateRange {\n    /**\n     * The operation property is the value that will be set for semantic date range.\n     */\n    operation: DefaultDateRangeValueType;\n}\n\nexport interface DateRange {\n    /**\n     * If set to true all date fields with filter restriction interval will be treated as DateTimeRange filters.\n     */\n    useDateRange?: boolean;\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n}\n\nexport interface CommonFilterBar {\n    /**\n     * Controls whether smart variant management is active. Default is true.\n     */\n    smartVariantManagement?: boolean;\n    /**\n     * If liveMode is set, the search will be automatically triggered when a filter value is set.\n     */\n\n    liveMode?: boolean;\n    /**\n     * If you set the flag to true, then standard variant management is not available in the app. The app name is displayed instead.\n     * If you set the flag to false or if the flag is not at all contained in the manifest of the app, the standard variant management is available and can be enabled or disabled.\n     */\n    variantManagementHidden?: boolean;\n    /**\n     * You can choose an app-specific title by setting the corresponding value for the subTitleIfVariantMgmtHidden property.\n     * @i18nClassification TIT: Subtitle if variant management is hidden\n     */\n    subTitleIfVariantMgmtHidden?: string;\n    /**\n     * Use to set date settings for fields in smart filter bar\n     */\n    dateSettings?: DateRange;\n    /**\n     * Handles visibility of the Clear button on the FilterBar.\n     */\n    showClearOnFB?: boolean;\n    /**\n     * Handles visibility of the Filter button on the FilterBar.\n     */\n    showFilterConfiguration?: boolean;\n    /**\n     * Handles visibility of the Restore button on the FilterBar.\n     */\n    showRestoreOnFB?: boolean;\n    /**\n     * @isViewNode true\n     * Selection Fields\n     */\n    selectionFields?: SelectionFields;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface ListReportFilterBar extends CommonFilterBar {\n    /**\n     * Lets you to add default values for FilterBar using SelectionVariant annotation\n     */\n    annotationPath?: string;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface AnalyticalListPageFilterBar extends CommonFilterBar {\n    /**\n     * Go button is displayed for compact filters when this is set to true\n     */\n    showGoButtonOnFilterBar?: boolean;\n    /**\n     * Lets you to add default values for FilterBar using SelectionVariant annotation\n     */\n    filterDefaultsFromSelectionVariant?: boolean;\n}\n", "import type { SAPUI5_FRAGMENT_CLASS } from '../../common/webapp/manifest/sapUi5';\nimport type { ToolBar } from './ToolBar';\nimport type { Action } from './Action';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\nimport type { TextAlign } from 'sap/ui/core/library';\n\n/**\n * Column\n * @isViewNode true\n */\nexport interface TableColumn {\n    /**\n     * The width property defines the width of the column.\n     */\n    width?: string;\n    /**\n     * The hAlign property defines the horizontal alignment of the column content.\n     */\n    hAlign?: TextAlign;\n}\n\n/**\n * Column Action\n * @isViewNode true\n */\nexport interface TableColumnAction extends Action, TableColumn {}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface TableCustomColumn {\n    /**\n     * In case the fragment needs to be re-used for multiple tabs, the id property must be set to make the ids unique.\n     * @artifactType Fragment\n     */\n    id?: string;\n    /**\n     * The label of the custom column, preferably as an i18n key.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Fragment\n     */\n    text?: string;\n    /**\n     * The column key\n     * @artifactType Fragment\n     */\n    columnKey: string;\n    /**\n     * The index of the column in the overall collection; if undefined, the custom column will be added at the end of the table.\n     * @minimum 0\n     * @hidden true\n     * @artifactType Fragment\n     */\n    columnIndex?: number;\n    /**\n     * If the content of your custom column refers to a property (such as{Price}), you need to include a corresponding 'leadingProperty' entry in the column definition.\n     * @artifactType Fragment\n     */\n    leadingProperty?: string;\n    /**\n     * The UI5 control used for your extension\n     * @artifactType Manifest\n     */\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    /**\n     * The relative path to your fragment with path segments separated by '.'. The first element is the app ID.\n     * @artifactType Manifest\n     */\n    fragmentName: string;\n    /**\n     * In case of a responsive table, you additionally need to specify a fragment for the table cells.\n     * @artifactType Manifest\n     */\n    cellsFragmentName?: string;\n    /**\n     * If you use QuickVariantSelectionX, you need to define the extensions per tab. 'tabKey' is the key provided when defining the QuickVariantSelectionX.\n     * @artifactType Manifest\n     */\n    tabKey?: string;\n    /**\n     * Type of custom column view extension.\n     * @artifactType Manifest\n     */\n    extensionType: TableColumnExtensionTypeV2;\n}\n\nexport enum customColumnViewTypes {\n    XML = 'XML'\n}\n\nexport enum TableTypeV2 {\n    ResponsiveTable = 'ResponsiveTable',\n    GridTable = 'GridTable',\n    AnalyticalTable = 'AnalyticalTable',\n    TreeTable = 'TreeTable'\n}\n\nexport enum TableColumnExtensionTypeV2 {\n    ResponsiveTableColumnsExtension = 'ResponsiveTableColumnsExtension',\n    AnalyticalTableColumnsExtension = 'AnalyticalTableColumnsExtension',\n    TreeTableColumnsExtension = 'TreeTableColumnsExtension',\n    GridTableColumnsExtension = 'GridTableColumnsExtension'\n}\n\nexport type AnyTableType =\n    | TableTypeV2.AnalyticalTable\n    | TableTypeV2.ResponsiveTable\n    | TableTypeV2.GridTable\n    | TableTypeV2.TreeTable;\nexport type AnyTable = AnalyticalTable | ResponsiveTable | GridTable | TreeTable;\n\n/**\n * Custom Columns\n * @isViewNode true\n */\nexport type TableCustomColumns = Array<TableCustomColumn>;\n\nexport interface GenericColumns {\n    [key: string]: TableColumn | TableCustomColumns | TableColumnAction;\n}\n\nexport interface QuickVariant {\n    /**\n     * A key entry that is used for initializing the corresponding SegmentedButton item. This entry is mandatory.\n     */\n    key: string;\n    /**\n     * Use annotationPath to define a specific variant that points to a SelectionVariant or SelectionPresentationVariant annotation.\n     */\n    annotationPath: string;\n}\n\nexport interface QuickVariantX extends QuickVariant {\n    /**\n     * Represents the entity set that will be displayed in this variant\n     */\n    entitySet: string;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: AnyTableType;\n    /**\n     * To enable navigation for charts, you have to set the property to \"true\" and maintain an internal navigation target in the manifest.\n     */\n    showItemNavigationOnChart?: boolean;\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\nexport interface QuickVariantSelection {\n    /**\n     * To show the number of records available, set showCounts to true.\n     */\n    showCounts?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: number]: QuickVariant;\n    };\n}\n\nexport interface QuickVariantSelectionX extends QuickVariantSelection {\n    /**\n     * When set to true, this enables automatic binding of the table with either the tableBindingPath (if it exists) or the entitySet property.\n     */\n    enableAutoBinding?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: number]: QuickVariantX;\n    };\n}\n\nexport interface CreateWithFilters {\n    /**\n     * For the new create action to use the filter settings as input, set strategy to \"extension\" and implement the extension function as mentioned in help.sap.com for SAP S/4 HANA, section \u201CPrefilling Fields When Creating a New Entity Using an Extension Point\u201C.\n     */\n    strategy: Strategy;\n}\n\nexport enum Strategy {\n    extension = 'extension'\n}\n\nexport interface MultiEdit {\n    /**\n     * When multiEdit is enabled, by default the dialog displays editable fields corresponding to columns that are currently displayed in the table.\n     */\n    enabled?: boolean;\n    /**\n     * Use annotationPath to define a mass edit dialog that points to a FieldGroup annotation with a qualifier.\n     */\n    annotationPath?: string;\n    /**\n     * You can choose to hide certain fields from being displayed in key user adaptation and restrict them from being added to the Mass Edit dialog.\n     */\n    ignoredFields?: IgnoredFieldsType[];\n}\n\nexport const enum IgnoredFieldsType {\n    GENERICPROPERTY = 'GENERICPROPERTY'\n}\n\nexport enum DefaultContentView {\n    charttable = 'charttable',\n    chart = 'chart',\n    table = 'table'\n}\n\nexport enum DefaultFilterMode {\n    visual = 'visual',\n    compact = 'compact'\n}\n\nexport enum LoadDataOnAppLaunchSettings {\n    always = 'always',\n    never = 'never',\n    ifAnyFilterExist = 'ifAnyFilterExist'\n}\n\nexport interface DataLoadSettings {\n    /**\n     * Change the default behavior for autoloading of data.\n     * For multi-view scenarios, you can also change the setting enableAutobinding to False under quickVariantSelectionX instead of using the loadDataOnAppLaunch setting.\n     */\n    loadDataOnAppLaunch: LoadDataOnAppLaunchSettings;\n}\n\nexport interface CreationFieldKeys {\n    [key: string]: FieldPath;\n}\n\nexport interface FieldPath {\n    path: string;\n}\n\nexport interface Fields4Dialog {\n    fields: CreationFieldKeys;\n}\n\nexport interface CommonTableSettings<COLS = GenericColumns> {\n    /**\n     * You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.\n     */\n    createWithParameterDialog?: Fields4Dialog;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * The showTablePersonalisation attribute can be set to false to hide the table personalization button.\n     */\n    showTablePersonalisation?: boolean;\n    /**\n     * useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.\n     */\n    useExportToExcel?: boolean;\n    /**\n     * Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.\n     */\n    exportType?: smarttable.ExportType;\n    /**\n     * Set to false if the table does not occupy the entire space available in the container.\n     */\n    fitContainer?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelection;\n    /**\n     * Switch on the multiple view feature (Multiple table mode with charts) and link to the variants you have added to your annotations.\n     */\n    quickVariantSelectionX?: QuickVariantSelectionX;\n    /**\n     * For analytical tables, grid tables and tree tables you can define a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * If you have enabled harmonized variant management, by default, you cannot set a filter in the table personalization settings.\n     * To enable filtering, set the enableTableFilterInPageVariant property to true.\n     */\n    enableTableFilterInPageVariant?: boolean;\n    /**\n     * Change the default behavior for autoloading of data.\n     */\n    dataLoadSettings?: DataLoadSettings;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ToolBar;\n    /**\n     * Columns\n     * @isViewNode true\n     */\n    columns?: COLS;\n}\n\nexport interface ResponsiveTableCommonSettings extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * Set includeItemInSelection to true if you want items to be selectable when they are clicked rather than after the selection control has been set.\n     */\n    includeItemInSelection?: boolean;\n    /**\n     * popinLayout defines the layout in which the table pop-in rows are rendered.\n     */\n    popinLayout?: PopinLayout;\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * In the list report and on the object page, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.\n     */\n    showDraftToggle?: boolean;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n    /**\n     * Allows you to edit a single object or multiple objects using a dialog in the list report page.\n     */\n    multiEdit?: MultiEdit;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTableWithMultiSelect extends ResponsiveTableCommonSettings {\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTableWithInlineDelete extends ResponsiveTableCommonSettings {\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTable\n    extends ResponsiveTableCommonSettings,\n        ResponsiveTableWithMultiSelect,\n        ResponsiveTableWithInlineDelete {}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface TreeTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.TreeTable;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * In the list report and on the object page, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.\n     */\n    showDraftToggle?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface AnalyticalTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n    /**\n     * Represents the SelectionPresentationVariant qualifier. ALP looks for SelectionPresentationVariant with this qualifier and if not found, it looks for PresentationVariant with this qualifier.\n     */\n    qualifier?: string;\n    /**\n     * Determines the visualization of content area\n     */\n    defaultContentView?: DefaultContentView;\n    /**\n     * Determines the filter mode that is used\n     */\n    defaultFilterMode?: DefaultFilterMode;\n    /**\n     * Lets you define title for the content area\n     * @i18nClassification TIT: Title for the content area\n     */\n    contentTitle?: string;\n    /**\n     * All filter fields will be set as in parameter\n     */\n    allFiltersAsInParameters?: boolean;\n    //TODO keyPerformanceIndicators\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * In the list report and on the object page, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.\n     */\n    showDraftToggle?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface TableALPCommonSettings extends CommonTableSettings {\n    /**\n     * Represents the SelectionPresentationVariant qualifier. ALP looks for SelectionPresentationVariant with this qualifier and if not found, it looks for PresentationVariant with this qualifier.\n     */\n    qualifier?: string;\n    /**\n     * Determines the visualization of content area\n     */\n    defaultContentView?: DefaultContentView;\n    /**\n     * Determines the filter mode that is used\n     */\n    defaultFilterMode?: DefaultFilterMode;\n    /**\n     * Lets you define title for the content area\n     * @i18nClassification TIT: Title for the content area\n     */\n    contentTitle?: string;\n    /**\n     * This setting allows developer to determine chart / table interaction. 'true' would mean chart act as filter for table, 'false' would mean that matching table rows are highlighted but table is not filtered.\n     */\n    autoHide?: boolean;\n    /**\n     * All filter fields will be set as in parameter\n     */\n    allFiltersAsInParameters?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPResponsiveTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPGridTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPAnalyticalTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n}\n\nexport interface TableALP extends ALPResponsiveTable, ALPGridTable, ALPAnalyticalTable {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable & TableTypeV2.GridTable & TableTypeV2.AnalyticalTable;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface GridTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * In the list report and on the object page, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.\n     */\n    showDraftToggle?: boolean;\n}\n", "export enum ChartType {\n    bar = 'bar',\n    column = 'column',\n    line = 'line',\n    combination = 'combination',\n    pie = 'pie',\n    donut = 'donut',\n    scatter = 'scatter',\n    bubble = 'bubble',\n    heatmap = 'heatmap',\n    bullet = 'bullet',\n    verticalBullet = 'vertical_bullet',\n    stackedBar = 'stacked_bar',\n    stackedColumn = 'stacked_column',\n    stackedCombination = 'stacked_combination',\n    horizontalStackedCombination = 'horizontal_stacked_combination',\n    dualBar = 'dual_bar',\n    dualColumn = 'dual_column',\n    dualLine = 'dual_line',\n    dualStackedBar = 'dual_stacked_bar',\n    dualStackedColumn = 'dual_stacked_column',\n    dualCombination = 'dual_combination',\n    dualStackedCombination = 'dual_stacked_combination',\n    dualHorizontalCombination = 'dual_horizontal_combination',\n    dualHorizontalStackedCombination = 'dual_horizontal_stacked_combination',\n    hundredStackedBar = '100_stacked_bar',\n    hundredStackedColumn = '100_stacked_column',\n    hundredDualStackedBar = '100_dual_stacked_bar',\n    hundredDualStackedColumn = '100_dual_stacked_column',\n    waterfall = 'waterfall',\n    horizontalWaterfall = 'horizontal_waterfall'\n}\n\n/**\n * Chart\n * @isViewNode true\n */\nexport interface ChartSettings {\n    /**\n     * Controls the visibility of the legend button.\n     */\n    showLegendButton?: boolean;\n    /**\n     * Controls the visibility of the chart download button.\n     */\n    showDownloadButton?: boolean;\n    /**\n     * Controls the visibility of the chart type button.\n     */\n    showChartTypeSelectionButton?: boolean;\n    /**\n     * Comma-separated value fields do not showup in the list of available chart types.\n     */\n    ignoredChartTypes?: ChartType[];\n    /**\n     * Controls the visibility of the data label.\n     */\n    showDataLabel?: boolean;\n}\n", "import type {\n    ObjectPageResponsiveTableWithMultiSelect,\n    ObjectPageResponsiveTableWithInlineDelete,\n    ObjectPageAnalyticalTable,\n    ObjectPageGridTable,\n    ObjectPageTreeTable,\n    ObjectPageChart,\n    ObjectPageForm\n} from './index';\nimport type { ViewTypes, SAPUI5_FRAGMENT_CLASS, SAPUI5_VIEW_CLASS } from '../../common/webapp/manifest/sapUi5';\n\n/**\n * Section\n * @isViewNode true\n */\nexport interface ObjectPageSectionV2 {\n    /**\n     * Whether the section should be visible on the screen.\n     */\n    visible?: boolean;\n}\n\n/**\n * Form\n * @isViewNode true\n */\nexport interface ObjectPageSectionFormV2 extends ObjectPageSectionV2 {\n    form?: ObjectPageForm;\n}\n\nexport type AnyObjectPageTableType =\n    | ObjectPageResponsiveTableWithMultiSelect\n    | ObjectPageResponsiveTableWithInlineDelete\n    | ObjectPageAnalyticalTable\n    | ObjectPageGridTable\n    | ObjectPageTreeTable;\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface ObjectPageSectionTableV2 extends ObjectPageSectionV2 {\n    table?: AnyObjectPageTableType;\n}\n\n/**\n * Chart\n * @isViewNode true\n */\nexport interface ObjectPageSectionChartV2 extends ObjectPageSectionV2 {\n    chart?: ObjectPageChart;\n}\n\nexport interface ObjectPageSectionContactV2 extends ObjectPageSectionV2 {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSectionAddressV2 extends ObjectPageSectionV2 {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport interface ObjectPageSubSectionContactV2 extends ObjectPageSectionV2 {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSubSectionAddressV2 extends ObjectPageSectionV2 {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport type AnySubSectionType =\n    | ObjectPageSectionTableV2\n    | ObjectPageSectionChartV2\n    | ObjectPageSectionFormV2\n    | ObjectPageSubSectionContactV2\n    | ObjectPageSubSectionAddressV2;\n\nexport interface GenericSubSections {\n    [key: string]: AnySubSectionType;\n}\n\n/**\n * Subsection\n * @isViewNode true\n */\nexport interface ObjectPageSubSectionV2 extends ObjectPageSectionV2 {\n    subsections?: GenericSubSections;\n}\n\nexport type AnySectionType =\n    | ObjectPageSectionTableV2\n    | ObjectPageSectionChartV2\n    | ObjectPageSectionFormV2\n    | ObjectPageSectionContactV2\n    | ObjectPageSectionAddressV2\n    | ObjectPageSectionV2\n    | ObjectPageSubSectionV2;\n\nexport interface GenericSections {\n    [key: string]: AnySectionType;\n}\n\nexport type CustomSectionTypeV2 = ObjectPageCustomSectionView | ObjectPageCustomSectionFragment;\n\n/**\n * Custom Sections\n * @isViewNode true\n */\nexport interface CustomSections {\n    custom?: CustomSectionTypeV2[];\n}\n\nexport interface ObjectPageCustomSectionBase {\n    relatedFacet: string;\n    relativePosition: SectionPosition;\n    /**\n     * The label of the custom section, preferably as an i18n key\n     * @i18nClassification TIT: Custom section title\n     */\n    title: string;\n}\n\n/**\n * View\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionView extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_VIEW_CLASS;\n    viewName: string;\n    type: ViewTypes;\n}\n\n/**\n * Fragment\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionFragment extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n    type: ExtensionFragmentTypes;\n}\n\nexport enum SectionPosition {\n    AfterFacet = 'AfterFacet',\n    BeforeFacet = 'BeforeFacet',\n    ReplaceFacet = 'ReplaceFacet'\n}\n\nexport enum ExtensionFragmentTypes {\n    XML = 'XML'\n}\n", "import type { GenericColumns, TableTypeV2, QuickVariant } from './Table';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\n\nexport interface QuickVariantSelectionOP {\n    /**\n     * To show the number of records available, set showCounts to true.\n     */\n    showCounts?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: number]: QuickVariant;\n    };\n}\n\nexport interface FieldPathOP {\n    path: string;\n}\n\nexport interface CreationFieldKeysOP {\n    [key: string]: FieldPathOP;\n}\n\nexport interface Fields4DialogOP {\n    fields: CreationFieldKeysOP;\n}\n\nexport enum CreateMode {\n    inline = 'inline'\n}\n\nexport interface ObjectPageCommonTableSettings<COLS = GenericColumns> {\n    /**\n     * You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.\n     */\n    createWithParameterDialog?: Fields4DialogOP;\n    /**\n     *  With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.\n     */\n    editable?: boolean;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.\n     */\n    quickVariantSelection?: QuickVariantSelectionOP;\n    /**\n     * useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.\n     */\n    useExportToExcel?: boolean;\n    /**\n     * Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.\n     */\n    exportType?: smarttable.ExportType;\n    /**\n     * Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.\n     */\n    createMode?: CreateMode;\n    /**\n     * If createMode is set to inline, you can use this setting to disable the default sort order.\n     */\n    disableDefaultInlineCreateSort?: boolean;\n    /**\n     * To enable variant management for a specific table on an object page.\n     */\n    variantManagement?: boolean;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ObjectPageToolBar;\n    /**\n     * Columns\n     */\n    columns?: COLS;\n}\n\n/**\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableCommonSettings extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * Set includeItemInSelection to true if you want items to be selectable when clicked, rather than after the selection control has been set.\n     */\n    includeItemInSelection?: boolean;\n    /**\n     * popinLayout defines the layout in which the table pop-in rows shall be rendered.\n     */\n    popinLayout?: PopinLayout;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableWithMultiSelect extends ObjectPageResponsiveTableCommonSettings {\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableWithInlineDelete extends ObjectPageResponsiveTableCommonSettings {\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTable\n    extends ObjectPageResponsiveTableCommonSettings,\n        ObjectPageResponsiveTableWithMultiSelect,\n        ObjectPageResponsiveTableWithInlineDelete {}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageAnalyticalTable extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageGridTable extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageTreeTable extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.TreeTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n", "import type { SapUiGenericAppPageSettings } from '../../../common/page';\nimport type { FlexibleColumnLayout, FlexibleColumnLayoutType } from '../../../common';\n\nexport interface SapUiAppV2 {\n    pages: SapUiAppPagesV2;\n    _version?: string;\n    settings?: SapUiAppSettingsV2;\n}\n\nexport interface SapUiAppPagesV2 {\n    [key: string]: SapUiAppPageV2;\n}\n\nexport const FE_TEMPLATE_V2 = 'sap.suite.ui.generic.template';\nexport const FE_TEMPLATE_V2_OBJECT_PAGE = 'sap.suite.ui.generic.template.ObjectPage';\nexport const FE_TEMPLATE_V2_LIST_REPORT = 'sap.suite.ui.generic.template.ListReport';\nexport const FE_TEMPLATE_V2_ALP = 'sap.suite.ui.generic.template.AnalyticalListPage';\n\nexport interface SapUiAppPageV2 {\n    entitySet?: string;\n    navigationProperty?: string;\n    component?: {\n        name: string;\n        list?: boolean;\n        settings?: SapUiGenericAppPageSettings;\n        sections?: {\n            sectionIds?: SapUiGenericAppPageSettings;\n        };\n    };\n    pages?: SapUiAppPagesV2;\n    defaultLayoutType?: FlexibleColumnLayoutType;\n}\n\nexport interface SapUiAppSettingsV2 {\n    flexibleColumnLayout?: FlexibleColumnLayout;\n}\n", "import type {\n    SapUi5RootView,\n    SapUi5OdataModel,\n    SapUi5ResourceModel,\n    SapUi5RoutingRoute,\n    SAPUI5_FRAGMENT_CLASS,\n    SAPUI5_VIEW_CLASS,\n    ViewTypes,\n    SapUi5RoutingTargetBase,\n    SapUi5RoutingTarget,\n    Dependencies\n} from '../../../common/webapp/manifest/sapUi5';\nimport type { ManifestSection } from '../../..';\n\nexport interface SapUi5 {\n    flexEnabled?: boolean;\n    resources?: object;\n    dependencies?: Dependencies;\n    models?: { [key: string]: SapUi5OdataModel | SapUi5ResourceModel };\n    routing?: SapUi5RoutingV2;\n    [key: string]: string | object | boolean;\n    rootView?: SapUi5RootView;\n    extends?: SapUi5Extends;\n}\n\nexport interface SapUi5RoutingV2 {\n    routes?: SapUi5RoutingRoute[];\n    targets: SapUi5RoutingTargetsV2;\n}\n\nexport interface SapUi5RoutingTargetsV2 {\n    [key: string]: SapUi5RoutingTarget | SapUi5RoutingTargetCustomPageV2;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV2 extends SapUi5RoutingTargetBase {\n    viewId: string;\n    viewName: string;\n    viewLevel?: number;\n    title?: string;\n}\n\n// SAPUI5 EXTENDS\nexport const SAPUI5_VIEW_EXTENSION = 'sap.ui.viewExtensions';\nexport const SAPUI5_CONTROLLER_EXTENSION = 'sap.ui.controllerExtensions';\n\nexport interface SapUi5Extends {\n    extensions?: SapUi5Extensions;\n}\n\nexport interface SapUi5Extensions {\n    [SAPUI5_VIEW_EXTENSION]?: SapUi5ViewExtensions;\n    // Added it here, but sync logic is not supported yet\n    [SAPUI5_CONTROLLER_EXTENSION]?: SapUi5ControllerExtensions;\n}\nexport const SAPUI5_VIEW_EXTENSION_OBJECT_PAGE = 'sap.suite.ui.generic.template.ObjectPage.view.Details';\nexport const SAPUI5_VIEW_EXTENSION_LIST_REPORT = 'sap.suite.ui.generic.template.ListReport.view.ListReport';\nexport const SAPUI5_VIEW_EXTENSION_ANALYTICAL_LIST_PAGE =\n    'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage';\n\n// VIEW EXTENDS\nexport interface SapUi5PageViewExtensions {\n    [key: string]: SapUi5ViewExtensionView | SapUi5ViewExtensionFragment;\n}\n\nexport interface SapUi5ViewExtensions {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5PageViewExtensions;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5PageViewExtensions;\n}\n\nexport interface SapUi5ViewExtensionBase {\n    type: ViewTypes;\n}\n\nexport interface SapUi5ViewExtensionView extends SapUi5ViewExtensionBase {\n    className: typeof SAPUI5_VIEW_CLASS;\n    viewName: string;\n}\n\nexport interface SapUi5ViewExtensionFragment extends SapUi5ViewExtensionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n}\n\n// CONTROLLER EXTENDS\nexport interface SapUi5ControllerExtensions {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5PageControllerExtensions;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5PageControllerExtensions;\n}\n\nexport interface SapUi5PageControllerExtensions {\n    [key: string]: SapUi5ControllerExtension;\n}\n\nexport interface SapUi5ControllerExtension {\n    controllerName: string;\n    [ManifestSection.generic]: { [key: string]: SapUi5ControllerExtensionSettings };\n}\n\n// Currently sync does not support controller extensions\nexport interface SapUi5ControllerExtensionSettings {\n    EntitySet: string;\n    Actions?: unknown;\n    Header?: unknown;\n    Sections?: unknown;\n}\n", "import type {\n    DateRangeType,\n    FilterType,\n    DefaultDateRange,\n    DateRange,\n    ListCard,\n    AnalyticalCard,\n    StackCard,\n    LinklistCard,\n    TableCard,\n    CustomCard\n} from './controls';\n\n/**\n * @isViewNode false\n */\nexport interface SelectedValues {\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n    /**\n     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.\n     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.\n     */\n    customDateRangeImplementation?: string;\n    /**\n     * You can use the filter settings to include and exclude specific date range values.\n     */\n    filter?: FilterType[];\n    /**\n     * You can set a default value for semantic date range.\n     */\n    defaultValue?: DefaultDateRange;\n}\n\nexport interface DateRangeOVP extends DateRange {\n    /**\n     * For a fields' list you can define the set of standard date range values separately.\n     */\n    fields?: {\n        [field: string]: SelectedValues;\n    };\n}\n\nexport type FilterSettingsType = {\n    /**\n     * You can define date ranges, such as lastYear or nextQuarter on the Smart Filter Bar\n     */\n    dateSettings?: DateRangeOVP;\n};\n\nexport enum ContainerLayoutType {\n    fixed = 'fixed',\n    resizable = 'resizable'\n}\n\nexport type CardType = ListCard | AnalyticalCard | StackCard | LinklistCard | TableCard | CustomCard;\n\nexport type ChartSettingsType = {\n    /**\n     * Set the showDataLabel property to true to make data labels visible in analytical cards.\n     */\n    showDataLabel?: boolean;\n};\n", "export * from './controls';\nexport * from './webapp';\nexport * from './page';\nexport * from './pages';\nexport * from './application';\nexport * from './ApplicationV4';\n", "import type {\n    TableColumn,\n    TableColumnAction,\n    TableCustomColumn,\n    ViewTableColumn,\n    ViewTableColumnAction,\n    ViewTableCustomColumn\n} from '../webapp/manifest/ManifestSettings';\nimport type { ToolBar, ViewChartToolBar } from './ToolBar';\n\nexport enum SelectionMode {\n    Multi = 'Multi',\n    None = 'None',\n    Single = 'Single',\n    Auto = 'Auto'\n}\n\nexport enum TableTypeV4 {\n    ResponsiveTable = 'ResponsiveTable',\n    GridTable = 'GridTable',\n    AnalyticalTable = 'AnalyticalTable'\n    /* Not supported yet:\n    TreeTable = \"TreeTable\"*/\n}\n\nexport enum TableCreationModeType {\n    NewPage = 'NewPage',\n    Inline = 'Inline',\n    CreationRow = 'CreationRow'\n}\n\nexport enum InitialLoadType {\n    Disabled = 'Disabled',\n    Enabled = 'Enabled',\n    Auto = 'Auto'\n}\n\nexport enum DefaultPathType {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Both = 'both'\n}\n\nexport interface TableCreationMode {\n    /**\n     * The name property of TableCreationMode defines the creation mode; possible values are:\n     * - NewPage: The create action leads to a new page.\n     * - Inline: The create action leads to a new row at the table.\n     * - CreationRow: No create button will be rendered, an empty row is directly given.\n     * The default is \"NewPage\".\n     */\n    name?: TableCreationModeType;\n    /**\n     * In case of inline creation mode you can decide if the new row will be created at the end of the table, or directly after the currently selected table. The default value is \"true\"\n     */\n    createAtEnd?: boolean;\n}\nexport interface ViewTableCreationMode {\n    /**\n     * The name property of TableCreationMode defines the creation mode; possible values are:\n     * - NewPage: The create action leads to a new page.\n     * - Inline: The create action leads to a new row at the table.\n     * - CreationRow: No create button will be rendered, an empty row is directly given.\n     * The default is \"NewPage\".\n     */\n    name?: TableCreationModeType;\n    /**\n     * In case of inline creation mode you can decide if the new row will be created at the end of the table, or directly after the currently selected table. The default value is \"true\"\n     */\n    createAtEnd?: boolean;\n}\n\nexport interface PersonalizationType {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface ViewPersonalizationType {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface AnnotationPathAsObject {\n    annotationPath: string;\n}\n\n//Not used by specification anymore, but there are some tests using it in tools-suite that needs to be adapted\nexport interface AnnotationPathWithKey {\n    key: string;\n    annotationPath: string;\n    entitySet?: string;\n}\n\nexport interface QuickVariantSelectionV4 {\n    /**\n     * List of annotation paths referring to SelectionVariant annotations\n     */\n    paths: AnnotationPathAsObject[];\n    /**\n     * You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.\n     */\n    hideTableTitle?: boolean;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\nexport interface GenericColumns {\n    [key: string]: TableColumn | TableColumnAction | TableCustomColumn;\n}\n\nexport interface ViewColumns {\n    [key: string]: ViewTableColumn | ViewTableColumnAction | ViewTableCustomColumn;\n}\n\n// Note: TableSettings are reused by OP: LR only properties must not be added here.\nexport interface TableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV4;\n    /**\n     * Applications can influence whether the table rows are selectable or not, and whether it allows for single selection or multiple selection. It can take the following values:\n     * - \"Auto\": This is the default value. In this mode, Fiori Elements first checks if there are any custom actions or IBN buttons in the table toolbar that require a context. If no such buttons are found, then no table selection is allowed in display mode. In edit mode too a selection is not allowed unless there is a Delete button in the table toolbar in which case multiple row selection will be allowed.\n     * - \"Multi\": This will allow end users to select multiple table records (in both display and edit mode)\n     * - \"Single\" This will allow end user to select only a single table record (in both display and edit mode)\n     * - \"None\": This will not allow the end user to select any table record in display mode. This will also be the case in edit mode unless the table has a delete button enabled, in which multiple selection is allowed in delete mode.\n     */\n    selectionMode?: SelectionMode;\n    /**\n     * The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.\n     */\n    selectAll?: boolean;\n    /**\n     * With the selectionLimit you can define how many items can be selected at a time,\n     */\n    selectionLimit?: number;\n    /**\n     * The exporting of the table to an Excel file is enabled in List Report tables by default. In Object Page, the export to Excel is available by default if the copy/paste feature is also available; otherwise it is disabled.\n     * To disable the export in List Report or to enable it in Object Page, use the \"enableExport\" property and set it to false or true.\n     */\n    enableExport?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelectionV4;\n    /**\n     * You can set the content density to condensed for ui.table on the list report and object page applications.\n     */\n    condensedTableLayout?: boolean;\n}\n\nexport type ViewTypeV4 = LRTableView | LRChartView | TableViewExtension | boolean;\n\n/**\n * Views\n * @isViewNode true\n */\nexport interface MultiTableModeV4 {\n    /**\n     * List of annotation paths\n     */\n    [key: string]: ViewTypeV4;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\n/**\n * Chart View\n * @isViewNode true\n */\nexport interface ALPChartView {\n    /**\n     * The primary annotation path can be either UI.Chart, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ViewChartToolBar;\n}\n\nexport interface CommonViewSettings {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * To use charts in multiple table mode, define a UI.Chart annotation, including a qualifier.\n     * Reference the UI.Chart annotation in your SelectionPresentationVariant or PresentationVariant for your view.\n     */\n    annotationPath: string;\n    /**\n     * Each chart can be based on a different entitySet.\n     */\n    entitySet?: string;\n}\n\n/**\n * Chart View\n * @isViewNode true\n */\nexport interface LRChartView extends CommonViewSettings {\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ViewChartToolBar;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table View\n * @isViewNode true\n */\nexport interface ALPTableView extends TableSettings {\n    /**\n     * The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * initialLoad defines whether or not the data in the table is automatically loaded.\n     * - Disabled - Data is never loaded when opening the app without an app state.\n     * - Enabled - Data is always loaded when opening the app.\n     * - Auto - Data is only loaded, if initial/preset filters are available (e.g. defined by \"SelectionVariant\" definition, URL parameters or user defaults).\n     */\n    initialLoad?: InitialLoadType;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: ViewPersonalizationType;\n    /**\n     * Defines the page behavior when a new record is created.\n     */\n    creationMode?: ViewTableCreationMode;\n\n    /**\n     * Table Toolbar\n     */\n    toolBar?: ToolBar;\n    columns?: ViewColumns;\n}\n\n/**\n * Table View Extension\n * @isViewNode true\n */\nexport interface TableViewExtension {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * View title (localization supported).\n     */\n    label?: string;\n    /**\n     * The name contains sap.app.id as a prefix, followed by the path in the app/webapp folder and the name of the XML view.\n     */\n    template: string;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table View\n * @isViewNode true\n */\nexport interface LRTableView extends TableSettings {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * The annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Each table can be based on a different entitySet.\n     */\n    entitySet?: string;\n    /**\n     *  The tab keeps the default LineItem ID (without the key), so the variant is applied to it.\n     */\n    keepPreviousPersonalization?: boolean;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: ViewPersonalizationType;\n    /**\n     * Defines the page behavior when a new record is created.\n     */\n    creationMode?: ViewTableCreationMode;\n    /**\n     * Table Toolbar\n     */\n    toolBar?: ToolBar;\n    /**\n     * Columns\n     */\n    columns?: ViewColumns;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface Table extends TableSettings {\n    /**\n     * The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath?: string;\n    /**\n     * initialLoad defines whether or not the data in the table is automatically loaded.\n     * - Disabled - Data is never loaded when opening the app without an app state.\n     * - Enabled - Data is always loaded when opening the app.\n     * - Auto - Data is only loaded, if initial/preset filters are available (e.g. defined by \"SelectionVariant\" definition, URL parameters or user defaults).\n     */\n    initialLoad?: InitialLoadType;\n    /**\n     * Defines the page behavior when a new record is created.\n     */\n    creationMode?: TableCreationMode;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: PersonalizationType;\n    views?: MultiTableModeV4;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ToolBar;\n    columns?: GenericColumns;\n}\n", "export enum SelectType {\n    single = 'single',\n    multi = 'multi'\n}\n\nexport enum ActionPlacement {\n    After = 'After',\n    Before = 'Before'\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface ToolBarAction {\n    /**\n     * Enables single selection for a bound action\n     */\n    enableOnSelect?: SelectType;\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface ViewToolBarAction {\n    /**\n     * Enables single selection for a bound action\n     */\n    enableOnSelect?: SelectType;\n}\nexport type ChartToolBarAction = {};\n\n/**\n * Actions\n * @isViewNode true\n */\nexport interface Actions {\n    [key: string]: ToolBarAction | CustomAction;\n}\n\n/**\n * Actions\n * @isViewNode true\n */\nexport interface ViewActions {\n    [key: string]: ViewToolBarAction | ChartToolBarAction | ViewTableCustomAction;\n}\n\n/**\n * Table Toolbar\n * @isViewNode true\n */\nexport interface ToolBar {\n    actions: Actions;\n}\n\n/**\n * Chart Toolbar\n * @isViewNode true\n */\nexport interface ViewChartToolBar {\n    actions: ViewActions;\n}\n\nexport interface CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor action.\n     * @artifactType Manifest\n     */\n    placement: ActionPlacement;\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface CustomAction {\n    /**\n     * The text that is displayed on the button (typically a binding to an i18n entry).\n     * @i18nClassification COL: Custom action text\n     * @artifactType Fragment\n     */\n    text: string;\n\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: CustomActionPosition;\n\n    /**\n     * Relevant for extension actions; allows the definition of a target action handler.\n     * @artifactType Fragment\n     */\n    press: string;\n\n    /**\n     * Indicates whether the action requires a selection of items.\n     * @artifactType Fragment\n     */\n    requiresSelection?: boolean;\n\n    /**\n     * Whether the action button should be visible on the screen.\n     * @artifactType Manifest\n     */\n    visible?: boolean;\n\n    /**\n     * Whether the action button should be enabled. Default value is `true`.\n     * @artifactType Manifest\n     */\n    enabled?: boolean;\n}\n\nexport interface ViewCustomActionPosition extends CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n}\n\nexport interface ViewTableCustomAction extends CustomAction {\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: ViewCustomActionPosition;\n}\n", "export const enum DesigntimeValues {\n    'not-adaptable-visibility' = 'not-adaptable-visibility'\n}\n\nexport interface FlexSettings {\n    /**\n     * You can restrict the adaptability of header facets via the setting 'flexSettings'/'designtime'. 'not-adaptable-visibility' means that 'remove' and 'add' are not possible, but 'move' is enabled.\n     */\n    designtime?: DesigntimeValues;\n}\n\nexport interface CommonHeaderFacetSettings {\n    /**\n     * Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.\n     */\n    stashed?: boolean;\n    flexSettings?: FlexSettings;\n}\n\nexport interface ObjectPageHeaderSectionForm extends CommonHeaderFacetSettings {\n    /**\n     * Form\n     *  @isViewNode true\n     */\n    form?: object;\n}\n\nexport interface ObjectPageHeaderSectionContact extends CommonHeaderFacetSettings {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageHeaderSectionAddress extends CommonHeaderFacetSettings {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport type ObjectPageHeaderSectionChart = CommonHeaderFacetSettings;\nexport type ObjectPageHeaderSectionDataPoint = CommonHeaderFacetSettings;\n\n/**\n * Header Sections\n * @isViewNode true\n */\nexport interface HeaderSections {\n    [key: string]:\n        | ObjectPageHeaderSectionForm\n        | ObjectPageHeaderSectionChart\n        | ObjectPageHeaderSectionDataPoint\n        | ObjectPageHeaderSectionContact\n        | ObjectPageHeaderSectionAddress;\n}\n", "export enum SectionLayoutType {\n    Tabs = 'Tabs',\n    Page = 'Page'\n}\n\n/**\n * Page Layout\n * @isViewNode true\n */\nexport interface ObjectPageLayout {\n    /**\n     * sectionLayout defines the layout of the sections. The default is \"Page\" (all sections in one page), possible values are \"Page\" and \"Tabs\" (every section in its own tab).\n     */\n    sectionLayout?: SectionLayoutType;\n}\n", "import type { ObjectPageSectionTableV4 } from './ObjectPageTable';\nimport type { SAPUI5_FRAGMENT_CLASS } from '../../common/webapp/manifest/sapUi5';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\nimport type { ObjectPageForm } from './ObjectPageForm';\n\nexport interface ObjectPageSectionForm {\n    /**\n     * Form\n     *  @isViewNode true\n     */\n    form?: ObjectPageForm;\n}\n\nexport interface ObjectPageSectionDataPoint {\n    /**\n     * Data Point\n     *  @isViewNode true\n     */\n    dataPoint?: object;\n}\n\nexport interface ObjectPageSectionContact {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSectionAddress {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport interface ObjectPageChart {\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ObjectPageToolBar;\n}\n\nexport interface ObjectPageSectionChart {\n    /**\n     * Chart\n     * @isViewNode true\n     */\n    chart?: ObjectPageChart;\n}\n\nexport interface ObjectPageSectionPresentationVariant {\n    /**\n     * Presentation Variant\n     */\n    [key: string]: ObjectPageSectionTableV4 | ObjectPageSectionChart;\n}\n\nexport interface GenericSections {\n    [key: string]:\n        | ObjectPageSectionTableV4\n        | ObjectPageSectionForm\n        | ObjectPageSectionDataPoint\n        | ObjectPageSectionContact\n        | ObjectPageSectionAddress\n        | ObjectPageSectionPresentationVariant;\n}\n\n/**\n * Subsections\n * @isViewNode true\n */\nexport interface ObjectPageSubSections {\n    subsections: GenericSections;\n}\n\nexport enum SectionPosition {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport enum CustomSectionViewTypesV4 {\n    XML = 'XML'\n}\n\n/**\n * Custom Sections\n * @isViewNode true\n */\nexport interface CustomSections {\n    /**\n     * Custom Sections\n     * @isViewNode true\n     */\n    custom?: ObjectPageCustomSectionFragment[];\n}\n\nexport interface ObjectPageCustomSectionBase {\n    relatedFacet: string;\n    relativePosition: SectionPosition;\n    id: string;\n    type: CustomSectionViewTypesV4;\n    /**\n     * The label of the custom section, preferrable as an i18n key\n     * @i18nClassification TIT: Custom section title\n     */\n    title: string;\n}\n\n/**\n * Fragment\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionFragment extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n}\n", "import type { SapUiGenericAppPageSettings } from '../../../common/page';\n\nexport interface SapUiAppV4 {\n    pages: SapUiAppPageV4[] | SapUiGenericAppPageMapV4;\n    _version?: string;\n    settings?: object;\n}\n\nexport interface SapUiGenericAppPageMapV4 {\n    [key: string]: SapUiAppPageV4;\n}\n\nexport interface SapUiNavDetailsV4 {\n    detail?: {\n        route?: string;\n    };\n}\n\nexport type SapUi5MultiViewPath = {\n    key: string;\n    annotationPath: string;\n};\n\nexport type SapUi5MultiViewPaths = SapUi5MultiViewPath[];\n\nexport type SapUi5ALPPaths = [\n    {\n        primary: [\n            {\n                annotationPath: string;\n            }\n        ];\n        secondary: [\n            {\n                annotationPath: string;\n            }\n        ];\n        defaultPath: string;\n    }\n];\n\nexport type SapUi5Views = {\n    paths: SapUi5MultiViewPaths | SapUi5ALPPaths;\n    showCounts?: boolean;\n};\n\nexport type SapUiPageSettingsV4 = SapUiGenericAppPageSettings & {\n    entitySet?: string;\n    navigation?: {\n        [key: string]: SapUiNavDetailsV4;\n    };\n    controlConfiguration?: SapUiGenericAppPageSettings;\n    content?: SapUi5RoutingTargetContent;\n    views?: SapUi5Views;\n    defaultTemplateAnnotationPath?: string;\n};\n\nexport interface SapUiAppPageV4 {\n    type: string;\n    id: string;\n    name: string;\n    options: {\n        settings?: SapUiPageSettingsV4;\n    };\n}\n\nexport const FE_TEMPLATE_V4 = 'sap.fe.templates';\nexport const FE_TEMPLATE_V4_CUSTOM_PAGE = 'sap.fe.core.fpm';\nexport const FE_TEMPLATE_V4_OBJECT_PAGE = 'sap.fe.templates.ObjectPage';\nexport const FE_TEMPLATE_V4_LIST_REPORT = 'sap.fe.templates.ListReport';\nexport const FE_TEMPLATE_V4_ALP = 'sap.fe.templates.AnalyticalListPage';\nexport interface SapUiAppPagesV4 {\n    [key: string]: SapUiAppPageV4;\n}\nexport interface SapUi5RoutingTargetContent {\n    body?: SapUi5RoutingTargetContentBody;\n}\n\nexport interface SapUi5RoutingTargetContentBody {\n    sections?: SapUi5RoutingTargetContentSections;\n}\n\nexport interface SapUi5RoutingTargetContentSections {\n    [key: string]: SapUi5RoutingTargetContentSection;\n}\n\nexport const SAPUI5_FRAGMENT_TYPE_V4 = 'XMLFragment';\nexport interface SapUi5RoutingTargetContentSection {\n    // Currently only xml fragment is supported\n    type: typeof SAPUI5_FRAGMENT_TYPE_V4;\n    name?: string;\n    title: string;\n    position: SapUi5RoutingTargetContentPosition;\n    template?: string;\n}\n\nexport enum SectionPositionV4 {\n    AfterFacet = 'AfterFacet',\n    BeforeFacet = 'BeforeFacet'\n}\n\nexport interface SapUi5RoutingTargetContentPosition {\n    placement: SectionPositionV4;\n    anchor: string;\n}\n", "import type {\n    SapUi5RootView,\n    SapUi5OdataModel,\n    SapUi5ResourceModel,\n    SapUi5RoutingRoute,\n    ViewTypes,\n    SapUi5RoutingTargetSettings,\n    SapUi5RoutingTargetBase,\n    SapUi5RoutingTarget,\n    Dependencies\n} from '../../../common/webapp/manifest/sapUi5';\nimport type { SapUiGenericAppPageSettings } from '../../../common/page';\nimport type { FlexibleColumnLayout } from '../../../common';\n\nexport interface FlexibleColumnLayoutV4 extends FlexibleColumnLayout {\n    /**\n     * To limit Flexible Column Layout to two columns. The third level will be displayed in full screen and not in a third column.\n     */\n    limitFCLToTwoColumns?: boolean;\n}\n\nexport interface SapUi5V4 {\n    flexEnabled?: boolean;\n    resources?: object;\n    dependencies?: Dependencies;\n    models?: { [key: string]: SapUi5OdataModel | SapUi5ResourceModel };\n    routing?: SapUi5RoutingV4;\n    [key: string]: string | object | boolean;\n    rootView?: SapUi5RootView;\n    extends?: SapUi5ExtendsV4;\n}\n\nexport interface SapUi5RoutingV4 {\n    config?: SapUi5RoutingConfig;\n    routes?: SapUi5RoutingRoute[];\n    targets: SapUi5RoutingTargetsV4;\n}\n\nexport type RoutingTargetOptions =\n    | SapUi5RoutingTarget\n    | SapUi5RoutingTargetCustomPageV4\n    | SapUi5RoutingTargetCustomPageV4New;\n\nexport interface SapUi5RoutingTargetsV4 {\n    [key: string]: RoutingTargetOptions;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV4New extends SapUi5RoutingTarget {\n    options?: {\n        settings: SapUi5RoutingTargetSettings & SapUi5CommonCustomPageV4;\n    };\n}\n\nexport interface SapUi5CommonCustomPageV4 extends SapUi5RoutingTargetBase {\n    viewName: string;\n    controlConfiguration?: SapUiGenericAppPageSettings;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV4 extends SapUi5CommonCustomPageV4 {\n    viewId: string;\n    viewLevel?: number;\n    viewType?: ViewTypes;\n    viewPath?: string;\n    path?: string;\n    title?: string;\n}\n\nexport const FIORI_FCL_ROUTER_CLASS = 'sap.f.routing.Router';\nexport type RouterClass = typeof FIORI_FCL_ROUTER_CLASS | string;\nexport interface SapUi5RoutingConfig {\n    routerClass?: RouterClass;\n    flexibleColumnLayout?: FlexibleColumnLayoutV4;\n    viewType?: ViewTypes;\n    viewPath?: string;\n    path?: string;\n}\n\nexport interface SapUi5DependenciesV4 {\n    minUI5Version?: string;\n    incompatibleLimitation?: boolean;\n    libs?: SapUi5DependenciesLibV4;\n}\n\nexport const SAPUI5_DEPENDENCY_LIB_SAP_F = 'sap.f';\nexport interface SapUi5DependenciesLibV4 {\n    [SAPUI5_DEPENDENCY_LIB_SAP_F]?: SapUi5DependencyLibV4;\n    [key: string]: SapUi5DependencyLibV4;\n}\n\nexport interface SapUi5DependencyLibV4 {\n    minVersion?: string;\n    lazy?: boolean;\n}\n\nexport interface SapUi5ExtendsV4 {\n    extensions?: SapUi5ExtensionsV4;\n}\n\nexport const SAPUI5_CONTROLLER_EXTENSION = 'sap.ui.controllerExtensions';\nexport const SAPUI5_VIEW_EXTENSION_OBJECT_PAGE = 'sap.fe.templates.ObjectPage.ObjectPageController';\nexport const SAPUI5_VIEW_EXTENSION_LIST_REPORT = 'sap.fe.templates.ListReport.ListReportController';\n\nexport interface SapUi5ExtensionsV4 {\n    [SAPUI5_CONTROLLER_EXTENSION]?: SapUi5ControllerExtensionsV4;\n}\n\nexport interface SapUi5ControllerExtensionsV4 {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5ControllerExtensionV4;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5ControllerExtensionV4;\n    [key: string]: SapUi5ControllerExtensionV4;\n}\n\nexport interface SapUi5ControllerExtensionV4 {\n    controllerName?: string;\n    controllerNames?: string[];\n}\n", "// Copies of sap.fe type definitions\nexport enum Placement {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport interface Position {\n    /**\n     * The key of another column to be used as placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     */\n    placement: Placement;\n}\n\nexport interface ViewPosition {\n    /**\n     * The key of another column to be used as placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     */\n    placement: Placement;\n}\n\nexport type Positionable = {\n    /**\n     *   Defines the position of the column relative to other columns.\n     */\n    position?: Position;\n};\n\nexport interface ActionAfterExecutionConfiguration {\n    /**\n     * By default, a navigation is automatically triggered after an action execution. If applications want to disable the navigation, they can do so using the manifest setting \u201CnavigateToInstance\u201D.\n     */\n    navigateToInstance?: boolean;\n    /**\n     * The \"enableAutoScroll\" allows you to scroll to the newly created or change item after execution of an action\n     */\n    enableAutoScroll?: boolean;\n}\n\nexport interface ActionAfterExecutionConfigurationOP {\n    /**\n     * By default, a navigation is automatically triggered after an action execution. If applications want to disable the navigation, they can do so using the manifest setting \u201CnavigateToInstance\u201D.\n     */\n    navigateToInstance?: boolean;\n    /**\n     * The \"enableAutoScroll\" allows you to scroll to the newly created or change item after execution of an action\n     */\n    enableAutoScroll?: boolean;\n}\n\nexport enum Availability {\n    'Default' = 'Default',\n    'Adaptation' = 'Adaptation',\n    'Hidden' = 'Hidden'\n}\n\nexport enum HorizontalAlign {\n    'Begin' = 'Begin',\n    'Center' = 'Center',\n    'End' = 'End'\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface TableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface ViewTableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface ObjectPageTableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Inline Action\n * @isViewNode true\n */\nexport interface TableColumnAction extends TableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\n/**\n * Inline Action\n * @isViewNode true\n */\nexport interface ViewTableColumnAction extends ViewTableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\nexport type ColumnPropertiesType = string[];\n\n/**\n * Inline Action for Object Page\n * @isViewNode true\n */\nexport interface ObjectPageTableColumnAction extends TableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfigurationOP;\n}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface TableCustomColumn {\n    /**\n     * Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: Position;\n    /**\n     * The header is shown on the table as header, as well as in the add/remove dialog.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Manifest\n     */\n    header: string;\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     * @artifactType Manifest\n     */\n    width?: string;\n    /**\n     * Relevant for extension columns; allows the definition of a target fragment.\n     * @artifactType Manifest\n     */\n    template: string;\n    /**\n     * Aligns the header as well as the content horizontally.\n     * @artifactType Manifest\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Defines where the column should be shown.\n     * - Default: it will be shown by default in the table.\n     * - Adaptation: it will initially not shown in the table but be available via end user adaptation\n     * - Hidden: the column is neither available in the table nor in adaptation\n     * @artifactType Manifest\n     */\n    availability?: Availability;\n    /**\n     * If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.\n     * @artifactType Manifest\n     */\n    properties?: ColumnPropertiesType;\n}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface ViewTableCustomColumn {\n    /**\n     *   Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: ViewPosition;\n    /**\n     * The header is shown on the table as header, as well as in the add/remove dialog.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Manifest\n     */\n    header: string;\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     * @artifactType Manifest\n     */\n    width?: string;\n    /**\n     * Relevant for extension columns; allows the definition of a target fragment.\n     * @artifactType Manifest\n     */\n    template: string;\n    /**\n     * Aligns the header as well as the content horizontally.\n     * @artifactType Manifest\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Defines where the column should be shown.\n     * - Default: it will be shown by default in the table.\n     * - Adaptation: it will initially not shown in the table but be available via end user adaptation\n     * - Hidden: the column is neither available in the table nor in adaptation\n     * @artifactType Manifest\n     */\n    availability?: Availability;\n    /**\n     * If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.\n     * @artifactType Manifest\n     */\n    properties?: ColumnPropertiesType;\n}\n", "import type { PageConfig } from '../../common';\nimport type {\n    ObjectPageHeader,\n    ObjectPageLayout,\n    GenericSections,\n    CustomSections,\n    ObjectPageFooter\n} from '../controls';\n\nexport enum VariantManagementTypeObjectPage {\n    None = 'None',\n    Control = 'Control'\n}\n\nexport interface ObjectPageConfigV4 extends PageConfig {\n    header?: ObjectPageHeader;\n    layout?: ObjectPageLayout;\n    /**\n     * variantManagement defines how the variant management of page personalizations is controlled.\n     * - None - No variant management by default.\n     * - Control - Individual personalizations for each control.\n     */\n    variantManagement?: VariantManagementTypeObjectPage;\n\n    sections?: GenericSections | CustomSections;\n\n    footer?: ObjectPageFooter;\n}\n", "import type { PageConfig } from '../../common';\nimport type { FilterBar, ALPChartView, Table, ALPTableView, DefaultPathType } from '../controls';\n\nexport enum VariantManagementTypeListReport {\n    None = 'None',\n    Control = 'Control',\n    Page = 'Page'\n}\n\nexport interface ListReportConfigV4 extends PageConfig {\n    /**\n     * variantManagement defines how the variant management of page personalizations is controlled.\n     * - None - No variant management by default.\n     * - Control - Individual personalizations for each control.\n     */\n    variantManagement?: VariantManagementTypeListReport;\n    /**\n     * Filter Bar\n     */\n    filterBar?: FilterBar;\n\n    /**\n     * Chart\n     */\n    chart?: ALPChartView;\n\n    /**\n     * Table\n     */\n    table?: Table | ALPTableView;\n\n    /**\n     * defaultTemplateAnnotationPath must be a reference to a SelectionPresentationVariant.\n     * You use the SelectionPresentationVariant to configure the default visualizations and default filter values of the main content area.\n     */\n    defaultTemplateAnnotationPath?: string;\n\n    /**\n     * defaultPath can be \"primary\", \"secondary\", or \"both\". If it is \"primary\", SAP Fiori elements loads the app in chart-only view. If it is \"secondary\", SAP Fiori elements loads the app in table-only view. If it is \"both\", SAP Fiori elements loads the app in hybrid view.\n     */\n    defaultPath?: DefaultPathType;\n}\n", null, "export * from './controls';\nexport * from './webapp';\nexport * from './page';\nexport * from './pages';\nexport * from './overviewPage';\nexport * from './application';\nexport * from './ApplicationV2';\n", "/**\n * Represents the card default grid size in columns and rows\n */\nexport type DefaultSpanDef =\n    | {\n          /**\n           * Represents the card width calculated based on window width.\n           */\n          cols: number;\n          /**\n           * Represents the number of line items to display for table and list cards.\n           */\n          rows: number;\n          /**\n           * Set showOnlyHeader to true to render only the card header.\n           */\n          showOnlyHeader?: boolean;\n          /**\n           * To show more lines of text in the title you can configure this property (maximum allowed: 3 lines).\n           */\n          minimumTitleRow?: number;\n          /**\n           * To show more lines of text in the sub-title you can configure this property (maximum allowed: 2 lines).\n           */\n          minimumSubTitleRow?: number;\n      }\n    | 'auto';\n\nexport interface TabSetting {\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents the selection annotation path.\n     */\n    selectionAnnotationPath?: string;\n    /**\n     * Represents the chart annotation path.\n     */\n    chartAnnotationPath?: string;\n    /**\n     * Represents the presentation annotation path.\n     */\n    presentationAnnotationPath?: string;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents the identification annotation path.\n     */\n    identificationAnnotationPath?: string;\n    /**\n     * Represents the dynamic subtitle annotation path\n     */\n    dynamicSubtitleAnnotationPath?: string;\n    /**\n     * Represents the drop down value to be shown\n     */\n    value?: string;\n    /**\n     * This property is responsible for setting specific chart settings.\n     */\n    chartProperties?: {\n        plotArea?: PlotAreaDef;\n    };\n    /**\n     * Represents the configuration to customize the column stacked chart.\n     */\n    colorPalette?:\n        | {\n              [k: string]: any;\n          }[]\n        | {\n              [k: string]: any;\n          };\n    [k: string]: any;\n}\n\nexport interface CommonCardSettings {\n    /**\n     * Represents the dominant entity set that will be displayed in the given card.\n     */\n    entitySet?: string;\n    /**\n     * The language-dependent title of the card, used in the card header.\n     * @i18nClassification TIT: Title of the card, used in the card header\n     */\n    title: string;\n    /**\n     * The language-dependent subtitle of the card, used in the card header.\n     * @i18nClassification TIT: Subtitle of the card, used in the card header\n     */\n    subTitle?: string;\n    /**\n     * Represents the identification annotation path.\n     */\n    identificationAnnotationPath?: string;\n    /**\n     * Represents the selection annotation path.\n     */\n    selectionAnnotationPath?: string;\n    /**\n     * Represents the presentation annotation path.\n     */\n    presentationAnnotationPath?: string;\n    /**\n     * The category of the card, as used in the card header.\n     */\n    category?: string;\n    /**\n     * To load cards with specific requirements, define a default size as part of the card definition in the descriptor file.\n     */\n    defaultSpan?: DefaultSpanDef;\n    /**\n     * Define an authorization check at card level.\n     */\n    requireAppAuthorization?: string;\n    /**\n     * Represents the card with view switch control.\n     */\n    tabs?: [TabSetting, ...TabSetting[]];\n    /**\n     * add $Select parameter in data fetch URL\n     */\n    addODataSelect?: boolean;\n}\n\nexport enum ChartCardType {\n    cardBubble = 'cardBubble',\n    cardchartsline = 'cardchartsline',\n    cardchartsdonut = 'cardchartsdonut'\n}\n\nexport enum CardTemplateType {\n    analytical = 'sap.ovp.cards.charts.analytical',\n    analyticalv4 = 'sap.ovp.cards.v4.charts.analytical',\n    list = 'sap.ovp.cards.list',\n    listv4 = 'sap.ovp.cards.v4.list',\n    linklist = 'sap.ovp.cards.linklist',\n    linklistv4 = 'sap.ovp.cards.v4.linklist',\n    table = 'sap.ovp.cards.table',\n    tablev4 = 'sap.ovp.cards.v4.table',\n    stack = 'sap.ovp.cards.stack'\n}\n\nexport const cardTemplateTypeMap = {\n    'sap.ovp.cards.charts.analytical': 'AnalyticalCard',\n    'sap.ovp.cards.v4.charts.analytical': 'AnalyticalCard',\n    'sap.ovp.cards.list': 'ListCard',\n    'sap.ovp.cards.v4.list': 'ListCard',\n    'sap.ovp.cards.linklist': 'LinklistCard',\n    'sap.ovp.cards.v4.linklist': 'LinklistCard',\n    'sap.ovp.cards.table': 'TableCard',\n    'sap.ovp.cards.v4.table': 'TableCard',\n    'sap.ovp.cards.stack': 'StackCard'\n};\n\nexport enum CardSettingsType {\n    analyticalCardSettings = 'analyticalCardSettings',\n    analyticalCardSettingsv4 = 'analyticalCardSettingsv4',\n    listCardSettings = 'listCardSettings',\n    listCardSettingsv4 = 'listCardSettingsv4',\n    stackCardSettings = 'stackCardSettings',\n    linkListCardSettings = 'linkListCardSettings',\n    tableCardSettings = 'tableCardSettings',\n    tableCardSettingsv4 = 'tableCardSettingsv4'\n}\n\nexport enum MeasureAggregateValues {\n    average = 'average',\n    max = 'max',\n    min = 'min',\n    sum = 'sum',\n    count = '$count'\n}\n\nexport interface MeasureAggregateSettings {\n    Axis1?: MeasureAggregateValues;\n    Axis2?: MeasureAggregateValues;\n    Axis3?: MeasureAggregateValues;\n}\n\n/**\n * Custom Card\n * @isViewNode true\n */\nexport interface CustomCard {\n    /**\n     * Represents the model for the card\n     */\n    model: string;\n    /**\n     * Represents the card component path to use for this card.\n     * @TJS-pattern ^(?!(sap.ovp.cards.charts.analytical|sap.ovp.cards.v4.charts.analytical|sap.ovp.cards.linklist|sap.ovp.cards.v4.linklist|sap.ovp.cards.list|sap.ovp.cards.v4.list|sap.ovp.cards.stack|sap.ovp.cards.table|sap.ovp.cards.v4.table)$).*$\n     */\n    template: string; // due the extension concept for cards, this can be any string\n    /**\n     * Represents the properties that are passed to the custom card.\n     */\n    settings?: CustomCardSettings;\n}\n/**\n * List Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface ListCard {\n    /**\n     * Represents the model for the List Card\n     */\n    model: string;\n    /**\n     * Represents the card component path to use for this List Card.\n     */\n    template: CardTemplateType.list | CardTemplateType.listv4;\n    /**\n     * Represents the properties that are passed to the list card.\n     */\n    listCardSettings: ListCardSettings;\n}\n\n/**\n * Stack Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface StackCard {\n    /**\n     * Represents the model for the StackCard.\n     */\n    model: string;\n    /**\n     * Represents the Stack Card component path to use for this card.\n     */\n    template: CardTemplateType.stack;\n    /**\n     * Represents the properties that are passed to the stack card.\n     */\n    stackCardSettings: StackCardSettings;\n}\n\n/**\n * Link List Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface LinklistCard {\n    /**\n     * Represents the model for the Link list Card.\n     */\n    model?: string;\n    /**\n     * Represents the Link list Card component path to use for this card.\n     */\n    template: CardTemplateType.linklist | CardTemplateType.linklistv4;\n    /**\n     * Represents the properties that are passed to the link list card.\n     */\n    linkListCardSettings: LinkListCardSettings;\n}\n\n/**\n * Table Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface TableCard {\n    /**\n     * Represents the model for the TableCard.\n     */\n    model: string;\n    /**\n     * Represents the Table Card component path to use for this card.\n     */\n    template: CardTemplateType.table | CardTemplateType.tablev4;\n    /**\n     * Represents the properties that are passed to the table card.\n     */\n    tableCardSettings: TableCardSettings;\n    /**\n     * If you set disableTableCardFlexibility to true, then at runtime, DataField records are sorted according to the importance set in the com.sap.vocabularies.UI.v1.ImportanceType annotation, and their order of entry.\n     * If you set disableTableCardFlexibility to false, then at runtime, table columns are sorted according to the importance set in the com.sap.vocabularies.UI.v1.ImportanceType annotation, and their order of entry.\n     */\n    disableTableCardFlexibility?: boolean;\n}\n\n/**\n * Analytical Card\n * @isViewNode true\n * @controlProperty template\n */\nexport interface AnalyticalCard {\n    /**\n     * Represents the model for the Analytical Card\n     */\n    model: string;\n    /**\n     * Represents the Analytical Card component path to use for this card.\n     */\n    template: CardTemplateType.analytical | CardTemplateType.analyticalv4;\n    /**\n     * Represents the properties that are passed to the analytical card.\n     */\n    analyticalCardSettings: AnalyticalCardSettings | AnalyticalCardSettingsv4;\n}\n\nexport type CustomCardNavigationType = 'dataPointNav' | 'chartNav' | 'headerNav' | 'noHeaderNav';\n\n/**\n * @displayName settings\n */\nexport interface CustomCardSettings extends CommonCardSettings {\n    /**\n     * Represents the user defined string in placeholder card.\n     */\n    itemText?: string;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n    /**\n     * Represents the static content that will be displayed in this card.\n     */\n    staticContent?: {\n        [k: string]: any;\n    }[];\n    /**\n     * Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: 'standard' | 'bar' | 'carousel';\n    /**\n     * Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card.\n     */\n    listType?: 'extended' | 'condensed';\n    /**\n     * Represents the sort key for the entity set.\n     */\n    sortBy?: string;\n    /**\n     * Represents the sort order for the entity set.\n     */\n    sortOrder?: 'ascending' | 'descending';\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents the chart annotation path.\n     */\n    chartAnnotationPath?: string;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents the KPI annotation path.\n     */\n    kpiAnnotationPath?: string;\n    /**\n     * Represents the selection presentation annotation path.\n     */\n    selectionPresentationAnnotationPath?: string;\n    /**\n     * Represents the dynamic subtitle annotation path.\n     */\n    dynamicSubtitleAnnotationPath?: string;\n    /**\n     * Represents the flag to indicate priority of number formatting over sap text.\n     */\n    ignoreSapText?: boolean;\n    /**\n     * Represents the Object Stream properties - properties that are passed to the Object Stream cards.\n     */\n    objectStreamCardsSettings?: {\n        /**\n         * If this flag is set to true, the first action on the footer of the quick view card will be a navigation action.\n         * If the flag is set to false, the navigation action on the footer of the quick view card isn't displayed. Other actions are shown instead.\n         * The default value of the flag is false.\n         */\n        showFirstActionInFooter?: boolean;\n        /**\n         * Represents the annotation path.\n         */\n        annotationPath?: string;\n    };\n    /**\n     * Represents the flag to indicate the use of object number/smart field.\n     */\n    enableLocaleCurrencyFormatting?: boolean;\n    /**\n     * Represents the configuration to alter the navigation mode in OVP Analytical Cards.\n     */\n    navigation?: CustomCardNavigationType;\n    /**\n     * Represents a switch to Show or Hide Filters in Cards Headers in OVP application.\n     */\n    showFilterInHeader?: boolean;\n    /**\n     * Represents a switch to Show or Hide Sorting in Cards Headers in OVP application.\n     */\n    showSortingInHeader?: boolean;\n    /**\n     * Flag for enabling images in a condensed list card.\n     */\n    imageSupported?: boolean;\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n    /**\n     * This property is responsible for showing and hiding text labels on the geo spots.\n     */\n    showLabelText?: boolean;\n    /**\n     * This property is responsible for passing custom parameters present in the entity set to the navigating application.\n     */\n    customParams?: string;\n    /**\n     * This property is responsible for setting specific chart settings.\n     */\n    chartProperties?: {\n        plotArea?: PlotAreaDef;\n    };\n    /**\n     * Represents the configuration to customize the column stacked chart.\n     */\n    colorPalette?:\n        | {\n              [k: string]: any;\n          }[]\n        | {\n              [k: string]: any;\n          };\n    [k: string]: any;\n}\n\n/**\n * @displayName settings\n */\nexport interface AnalyticalCardSettings extends CommonCardSettings {\n    /**\n     * Represents the chart annotation path.\n     */\n    chartAnnotationPath?: string;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n}\n\n/**\n * @displayName settings\n */\nexport interface AnalyticalCardSettingsv4 extends AnalyticalCardSettings {\n    /**\n     *\n     */\n    measureAggregate?: MeasureAggregateSettings;\n}\n\nexport enum ListFlavorType {\n    standard = 'standard',\n    bar = 'bar',\n    carousel = 'carousel'\n}\n\nexport enum ListTypeType {\n    extended = 'extended',\n    condensed = 'condensed'\n}\n\nexport enum SortOrderType {\n    ascending = 'ascending',\n    descending = 'descending'\n}\n\n/**\n * @displayName settings\n */\nexport interface ListCardSettings extends CommonCardSettings {\n    /**\n     * Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: ListFlavorType;\n    /**\n     * Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card.\n     */\n    listType?: ListTypeType;\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n    /**\n     * Defines the property by which the list shall be sorted.\n     */\n    sortBy?: string;\n    /**\n     * Defines the sort order.\n     */\n    sortOrder?: SortOrderType;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n}\n\n/**\n * @displayName settings\n */\nexport interface StackCardSettings extends CommonCardSettings {\n    /**\n     * Represents the user defined string in placeholder card.\n     */\n    itemText?: string;\n    /**\n     * The navigation property used to display information from a secondary entity set.\n     */\n    objectStreamCardsNavigationProperty?: string;\n    /**\n     * Configures additional settings for the cards displayed in the object stream.\n     */\n    objectStreamCardsSettings?: {\n        /**\n         * If this flag is set to true, the first action on the footer of the quick view card will be a navigation action.\n         * If the flag is set to false, the navigation action on the footer of the quick view card isn't displayed. Other actions are shown instead.\n         * The default value of the flag is false.\n         */\n        showFirstActionInFooter?: boolean;\n        /**\n         * Represents the annotation path.\n         */\n        annotationPath?: string;\n    };\n}\n\n/**\n * @displayName settings\n */\nexport interface TableCardSettings extends CommonCardSettings {\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n    /**\n     * Represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: ListFlavorType;\n    /**\n     * Represents the type of list to use for this card. The list can be extended to display more information or condensed to take up less space on the card.\n     */\n    listType?: ListTypeType;\n    /**\n     * Represents the data point annotation path.\n     */\n    dataPointAnnotationPath?: string;\n    /**\n     * Represents the selection presentation annotation path.\n     */\n    selectionPresentationAnnotationPath?: string;\n    /**\n     * Represents things like people, number of items.\n     */\n    valueSelectionInfo?: string;\n    /**\n     * Defines the property by which the list shall be sorted.\n     */\n    sortBy?: string;\n    /**\n     * Defines the sort order.\n     */\n    sortOrder?: SortOrderType;\n    /**\n     * Flag for show line item detail in list and table card.\n     */\n    showLineItemDetail?: boolean;\n}\n\nexport enum LinkListFlavorType {\n    standard = 'standard',\n    carousel = 'carousel'\n}\n\n/**\n * @displayName settings\n */\nexport interface LinkListCardSettings extends CommonCardSettings {\n    /**\n     * The targetUri is a URI defining the link to a quick view, related application or external resource.\n     */\n    targetUri?: string;\n    /**\n     * listFlavor represents the flavor of the list to use in this card. The flavor can be bar chart, carousel or standard.\n     */\n    listFlavor?: LinkListFlavorType;\n    /**\n     * sortBy defines the property by which the list shall be sorted.\n     */\n    sortBy?: string;\n    /**\n     * sortOrder defines the sort order. Valid values are 'ascending' or 'descending'\n     */\n    sortOrder?: SortOrderType;\n    /**\n     * headerAnnotationPath represents the path to a HeaderInfo annotation.\n     */\n    headerAnnotationPath?: string;\n    /**\n     * staticContent represents the static content of a static link list card.\n     */\n    staticContent?: StaticContent[];\n    /**\n     * Represents the annotation path.\n     */\n    annotationPath?: string;\n}\n\nexport interface StaticContent {\n    /**\n     * The language-dependent title of the StaticContent.\n     * @i18nClassification TIT: Title of the StaticContent\n     */\n    title: string;\n    /**\n     * The language-dependent subtitle of the StaticContent.\n     * @i18nClassification TIT: Subtitle of the StaticContent\n     */\n    subTitle?: string;\n    /**\n     * The uri for the image of the StaticContent.\n     */\n    imageUri?: string;\n    /**\n     * The uri for the target of the StaticContent.\n     */\n    targetUri?: string;\n    /**\n     * The alternative text for the image of the StaticContent.\n     * @i18nClassification ALT: The alternative text for the image of the StaticContent\n     */\n    imageAltText?: string;\n    /**\n     * Used to provide intent based navigation.\n     */\n    semanticObject?: string;\n    /**\n     * Used to provide intent based navigation.\n     */\n    action?: string;\n    /**\n     * Open static content in a new window.\n     */\n    openInNewWindow?: boolean;\n}\n/**\n * Plot area is a parent property which defines multiple other properties for smoothness and marker size.\n */\nexport interface PlotAreaDef {\n    /**\n     * isSmoothed represents whether smoother curves are required or not.\n     */\n    isSmoothed?: boolean;\n    /**\n     * markerSize represents the size of the markers in scatter plots.\n     */\n    markerSize?: number;\n    /**\n     * dataLabel is a parent property that defines other properties for type.\n     */\n    dataLabel?: {\n        /**\n         * The data label type defines whether to display percentage values or actual counts in the donut chart.\n         */\n        type?: 'value' | 'percentage';\n    };\n}\n", "export const enum DateRangeType {\n    DATERANGE = 'DATERANGE',\n    DATE = 'DATE',\n    FROM = 'FROM',\n    TO = 'TO',\n    DAYS = 'DAYS',\n    LASTDAYS = 'LASTDAYS',\n    LASTWEEKS = 'LASTWEEKS',\n    WEEK = 'WEEK',\n    LASTMONTHS = 'LASTMONTHS',\n    MONTH = 'MONTH',\n    QUARTER = 'QUARTER',\n    LASTQUARTERS = 'LASTQUARTERS',\n    LASTYEARS = 'LASTYEARS',\n    LASTYEAR = 'LASTYEAR',\n    YEAR = 'YEAR',\n    NEXTDAYS = 'NEXTDAYS',\n    NEXTWEEKS = 'NEXTWEEKS',\n    NEXTMONTHS = 'NEXTMONTHS',\n    NEXTQUARTERS = 'NEXTQUARTERS',\n    NEXTYEARS = 'NEXTYEARS',\n    NEXT = 'NEXT',\n    SPECIFICMONTH = 'SPECIFICMONTH',\n    YESTERDAY = 'YESTERDAY',\n    YEARTODATE = 'YEARTODATE',\n    TODAY = 'TODAY',\n    TOMORROW = 'TOMORROW',\n    THISWEEK = 'THISWEEK',\n    LASTWEEK = 'LASTWEEK',\n    LAST2WEEKS = 'LAST2WEEKS',\n    LAST3WEEKS = 'LAST3WEEKS',\n    LAST4WEEKS = 'LAST4WEEKS',\n    LAST5WEEKS = 'LAST5WEEKS',\n    NEXTWEEK = 'NEXTWEEK',\n    NEXT2WEEKS = 'NEXT2WEEKS',\n    NEXT3WEEKS = 'NEXT3WEEKS',\n    NEXT4WEEKS = 'NEXT4WEEKS',\n    NEXT5WEEKS = 'NEXT5WEEKS',\n    THISMONTH = 'THISMONTH',\n    LASTMONTH = 'LASTMONTH',\n    NEXTMONTH = 'NEXTMONTH',\n    THISQUARTER = 'THISQUARTER',\n    LASTQUARTER = 'LASTQUARTER',\n    NEXTQUARTER = 'NEXTQUARTER',\n    QUARTER1 = 'QUARTER1',\n    QUARTER2 = 'QUARTER2',\n    QUARTER3 = 'QUARTER3',\n    QUARTER4 = 'QUARTER4',\n    TODAYFROMTO = 'TODAYFROMTO'\n}\n\nexport const enum DefaultDateRangeValueType {\n    YESTERDAY = 'YESTERDAY',\n    TODAY = 'TODAY',\n    THISWEEK = 'THISWEEK',\n    LASTWEEK = 'LASTWEEK',\n    THISMONTH = 'THISMONTH',\n    TOMORROW = 'TOMORROW',\n    LASTMONTH = 'LASTMONTH',\n    THISQUARTER = 'THISQUARTER',\n    LASTQUARTER = 'LASTQUARTER',\n    THISYEAR = 'THISYEAR',\n    LASTYEAR = 'LASTYEAR',\n    LAST2WEEKS = 'LAST2WEEKS',\n    LAST3WEEKS = 'LAST3WEEKS',\n    LAST4WEEKS = 'LAST4WEEKS',\n    LAST5WEEKS = 'LAST5WEEKS',\n    YEARTODATE = 'YEARTODATE',\n    QUARTER1 = 'QUARTER1',\n    QUARTER2 = 'QUARTER2',\n    QUARTER3 = 'QUARTER3',\n    QUARTER4 = 'QUARTER4',\n    DATETOYEAR = 'DATETOYEAR'\n}\n\n/**\n * Filter Field\n * @isViewNode true\n */\nexport type SelectionField = {} | SelectionFieldDateSettings;\n\n/**\n * Filter Field for Date Settings\n * @isViewNode true\n */\nexport interface SelectionFieldDateSettings {\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n    /**\n     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.\n     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.\n     */\n    customDateRangeImplementation?: string;\n    /**\n     * You can use the filter settings to include and exclude specific date range values.\n     */\n    filter?: FilterType[];\n    /**\n     * You can set a default value for semantic date range.\n     */\n    defaultValue?: DefaultDateRange;\n}\n\n/**\n * Filter Fields\n * @isViewNode true\n */\nexport interface SelectionFields {\n    [key: string]: SelectionField;\n}\n\nexport type FilterTypeCategory = {\n    /**\n     * Choose 'key' to define filter values for single values of the date range type, or 'category' to filter by a whole subset.\n     */\n    path: 'category';\n    /**\n     * The 'contains' string specifies a filter describing a set of values of the date range type.\n     */\n    contains?: string;\n    /**\n     * Defines a single value of the standard date range type.\n     */\n    equals?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n};\n\nexport type FilterTypeKey = {\n    /**\n     * Choose 'key' to define filter values for single values of the date range, or 'category' to filter by a whole subset.\n     */\n    path: 'key';\n    /**\n     * The 'contains' string specifies a filter describing a set of values of the date range type.\n     */\n    contains?: string;\n    /**\n     * Defines a single value of the standard date range type.\n     */\n    equals?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n};\n\nexport type FilterType = FilterTypeKey | FilterTypeCategory;\n\nexport interface DefaultDateRange {\n    /**\n     * The operation property is the value that will be set for semantic date range.\n     */\n    operation: DefaultDateRangeValueType;\n}\n\nexport interface DateRange {\n    /**\n     * If set to true all date fields with filter restriction interval will be treated as DateTimeRange filters.\n     */\n    useDateRange?: boolean;\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n}\n\nexport interface CommonFilterBar {\n    /**\n     * Controls whether smart variant management is active. Default is true.\n     */\n    smartVariantManagement?: boolean;\n    /**\n     * If liveMode is set, the search will be automatically triggered when a filter value is set.\n     */\n\n    liveMode?: boolean;\n    /**\n     * If you set the flag to true, then standard variant management is not available in the app. The app name is displayed instead.\n     * If you set the flag to false or if the flag is not at all contained in the manifest of the app, the standard variant management is available and can be enabled or disabled.\n     */\n    variantManagementHidden?: boolean;\n    /**\n     * You can choose an app-specific title by setting the corresponding value for the subTitleIfVariantMgmtHidden property.\n     * @i18nClassification TIT: Subtitle if variant management is hidden\n     */\n    subTitleIfVariantMgmtHidden?: string;\n    /**\n     * Use to set date settings for fields in smart filter bar\n     */\n    dateSettings?: DateRange;\n    /**\n     * Handles visibility of the Clear button on the FilterBar.\n     */\n    showClearOnFB?: boolean;\n    /**\n     * Handles visibility of the Filter button on the FilterBar.\n     */\n    showFilterConfiguration?: boolean;\n    /**\n     * Handles visibility of the Restore button on the FilterBar.\n     */\n    showRestoreOnFB?: boolean;\n    /**\n     * @isViewNode true\n     * Selection Fields\n     */\n    selectionFields?: SelectionFields;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface ListReportFilterBar extends CommonFilterBar {\n    /**\n     * Lets you to add default values for FilterBar using SelectionVariant annotation\n     */\n    annotationPath?: string;\n}\n\n/**\n * Filter Bar\n * @isViewNode true\n */\nexport interface AnalyticalListPageFilterBar extends CommonFilterBar {\n    /**\n     * Go button is displayed for compact filters when this is set to true\n     */\n    showGoButtonOnFilterBar?: boolean;\n    /**\n     * Lets you to add default values for FilterBar using SelectionVariant annotation\n     */\n    filterDefaultsFromSelectionVariant?: boolean;\n}\n", "import type { SAPUI5_FRAGMENT_CLASS } from '../../common/webapp/manifest/sapUi5';\nimport type { ToolBar } from './ToolBar';\nimport type { Action } from './Action';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\nimport type { TextAlign } from 'sap/ui/core/library';\n\n/**\n * Column\n * @isViewNode true\n */\nexport interface TableColumn {\n    /**\n     * The width property defines the width of the column.\n     */\n    width?: string;\n    /**\n     * The hAlign property defines the horizontal alignment of the column content.\n     */\n    hAlign?: TextAlign;\n}\n\n/**\n * Column Action\n * @isViewNode true\n */\nexport interface TableColumnAction extends Action, TableColumn {}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface TableCustomColumn {\n    /**\n     * In case the fragment needs to be re-used for multiple tabs, the id property must be set to make the ids unique.\n     * @artifactType Fragment\n     */\n    id?: string;\n    /**\n     * The label of the custom column, preferably as an i18n key.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Fragment\n     */\n    text?: string;\n    /**\n     * The column key\n     * @artifactType Fragment\n     */\n    columnKey: string;\n    /**\n     * The index of the column in the overall collection; if undefined, the custom column will be added at the end of the table.\n     * @minimum 0\n     * @hidden true\n     * @artifactType Fragment\n     */\n    columnIndex?: number;\n    /**\n     * If the content of your custom column refers to a property (such as{Price}), you need to include a corresponding 'leadingProperty' entry in the column definition.\n     * @artifactType Fragment\n     */\n    leadingProperty?: string;\n    /**\n     * The UI5 control used for your extension\n     * @artifactType Manifest\n     */\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    /**\n     * The relative path to your fragment with path segments separated by '.'. The first element is the app ID.\n     * @artifactType Manifest\n     */\n    fragmentName: string;\n    /**\n     * In case of a responsive table, you additionally need to specify a fragment for the table cells.\n     * @artifactType Manifest\n     */\n    cellsFragmentName?: string;\n    /**\n     * If you use QuickVariantSelectionX, you need to define the extensions per tab. 'tabKey' is the key provided when defining the QuickVariantSelectionX.\n     * @artifactType Manifest\n     */\n    tabKey?: string;\n    /**\n     * Type of custom column view extension.\n     * @artifactType Manifest\n     */\n    extensionType: TableColumnExtensionTypeV2;\n}\n\nexport enum customColumnViewTypes {\n    XML = 'XML'\n}\n\nexport enum TableTypeV2 {\n    ResponsiveTable = 'ResponsiveTable',\n    GridTable = 'GridTable',\n    AnalyticalTable = 'AnalyticalTable',\n    TreeTable = 'TreeTable'\n}\n\nexport enum TableColumnExtensionTypeV2 {\n    ResponsiveTableColumnsExtension = 'ResponsiveTableColumnsExtension',\n    AnalyticalTableColumnsExtension = 'AnalyticalTableColumnsExtension',\n    TreeTableColumnsExtension = 'TreeTableColumnsExtension',\n    GridTableColumnsExtension = 'GridTableColumnsExtension'\n}\n\nexport type AnyTableType =\n    | TableTypeV2.AnalyticalTable\n    | TableTypeV2.ResponsiveTable\n    | TableTypeV2.GridTable\n    | TableTypeV2.TreeTable;\nexport type AnyTable = AnalyticalTable | ResponsiveTable | GridTable | TreeTable;\n\n/**\n * Custom Columns\n * @isViewNode true\n */\nexport type TableCustomColumns = Array<TableCustomColumn>;\n\nexport interface GenericColumns {\n    [key: string]: TableColumn | TableCustomColumns | TableColumnAction;\n}\n\nexport interface QuickVariant {\n    /**\n     * A key entry that is used for initializing the corresponding SegmentedButton item. This entry is mandatory.\n     */\n    key: string;\n    /**\n     * Use annotationPath to define a specific variant that points to a SelectionVariant or SelectionPresentationVariant annotation.\n     */\n    annotationPath: string;\n}\n\nexport interface QuickVariantX extends QuickVariant {\n    /**\n     * Represents the entity set that will be displayed in this variant\n     */\n    entitySet: string;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: AnyTableType;\n    /**\n     * To enable navigation for charts, you have to set the property to \"true\" and maintain an internal navigation target in the manifest.\n     */\n    showItemNavigationOnChart?: boolean;\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\nexport interface QuickVariantSelection {\n    /**\n     * To show the number of records available, set showCounts to true.\n     */\n    showCounts?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: number]: QuickVariant;\n    };\n}\n\nexport interface QuickVariantSelectionX extends QuickVariantSelection {\n    /**\n     * When set to true, this enables automatic binding of the table with either the tableBindingPath (if it exists) or the entitySet property.\n     */\n    enableAutoBinding?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: number]: QuickVariantX;\n    };\n}\n\nexport interface CreateWithFilters {\n    /**\n     * For the new create action to use the filter settings as input, set strategy to \"extension\" and implement the extension function as mentioned in help.sap.com for SAP S/4 HANA, section \u201CPrefilling Fields When Creating a New Entity Using an Extension Point\u201C.\n     */\n    strategy: Strategy;\n}\n\nexport enum Strategy {\n    extension = 'extension'\n}\n\nexport interface MultiEdit {\n    /**\n     * When multiEdit is enabled, by default the dialog displays editable fields corresponding to columns that are currently displayed in the table.\n     */\n    enabled?: boolean;\n    /**\n     * Use annotationPath to define a mass edit dialog that points to a FieldGroup annotation with a qualifier.\n     */\n    annotationPath?: string;\n    /**\n     * You can choose to hide certain fields from being displayed in key user adaptation and restrict them from being added to the Mass Edit dialog.\n     */\n    ignoredFields?: IgnoredFieldsType[];\n}\n\nexport const enum IgnoredFieldsType {\n    GENERICPROPERTY = 'GENERICPROPERTY'\n}\n\nexport enum DefaultContentView {\n    charttable = 'charttable',\n    chart = 'chart',\n    table = 'table'\n}\n\nexport enum DefaultFilterMode {\n    visual = 'visual',\n    compact = 'compact'\n}\n\nexport enum LoadDataOnAppLaunchSettings {\n    always = 'always',\n    never = 'never',\n    ifAnyFilterExist = 'ifAnyFilterExist'\n}\n\nexport interface DataLoadSettings {\n    /**\n     * Change the default behavior for autoloading of data.\n     * For multi-view scenarios, you can also change the setting enableAutobinding to False under quickVariantSelectionX instead of using the loadDataOnAppLaunch setting.\n     */\n    loadDataOnAppLaunch: LoadDataOnAppLaunchSettings;\n}\n\nexport interface CreationFieldKeys {\n    [key: string]: FieldPath;\n}\n\nexport interface FieldPath {\n    path: string;\n}\n\nexport interface Fields4Dialog {\n    fields: CreationFieldKeys;\n}\n\nexport interface CommonTableSettings<COLS = GenericColumns> {\n    /**\n     * You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.\n     */\n    createWithParameterDialog?: Fields4Dialog;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * The showTablePersonalisation attribute can be set to false to hide the table personalization button.\n     */\n    showTablePersonalisation?: boolean;\n    /**\n     * useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.\n     */\n    useExportToExcel?: boolean;\n    /**\n     * Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.\n     */\n    exportType?: smarttable.ExportType;\n    /**\n     * Set to false if the table does not occupy the entire space available in the container.\n     */\n    fitContainer?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelection;\n    /**\n     * Switch on the multiple view feature (Multiple table mode with charts) and link to the variants you have added to your annotations.\n     */\n    quickVariantSelectionX?: QuickVariantSelectionX;\n    /**\n     * For analytical tables, grid tables and tree tables you can define a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * If you have enabled harmonized variant management, by default, you cannot set a filter in the table personalization settings.\n     * To enable filtering, set the enableTableFilterInPageVariant property to true.\n     */\n    enableTableFilterInPageVariant?: boolean;\n    /**\n     * Change the default behavior for autoloading of data.\n     */\n    dataLoadSettings?: DataLoadSettings;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ToolBar;\n    /**\n     * Columns\n     * @isViewNode true\n     */\n    columns?: COLS;\n}\n\nexport interface ResponsiveTableCommonSettings extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * Set includeItemInSelection to true if you want items to be selectable when they are clicked rather than after the selection control has been set.\n     */\n    includeItemInSelection?: boolean;\n    /**\n     * popinLayout defines the layout in which the table pop-in rows are rendered.\n     */\n    popinLayout?: PopinLayout;\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * In the list report and on the object page, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.\n     */\n    showDraftToggle?: boolean;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n    /**\n     * Allows you to edit a single object or multiple objects using a dialog in the list report page.\n     */\n    multiEdit?: MultiEdit;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTableWithMultiSelect extends ResponsiveTableCommonSettings {\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTableWithInlineDelete extends ResponsiveTableCommonSettings {\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ResponsiveTable\n    extends ResponsiveTableCommonSettings,\n        ResponsiveTableWithMultiSelect,\n        ResponsiveTableWithInlineDelete {}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface TreeTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.TreeTable;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * In the list report and on the object page, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.\n     */\n    showDraftToggle?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface AnalyticalTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n    /**\n     * Represents the SelectionPresentationVariant qualifier. ALP looks for SelectionPresentationVariant with this qualifier and if not found, it looks for PresentationVariant with this qualifier.\n     */\n    qualifier?: string;\n    /**\n     * Determines the visualization of content area\n     */\n    defaultContentView?: DefaultContentView;\n    /**\n     * Determines the filter mode that is used\n     */\n    defaultFilterMode?: DefaultFilterMode;\n    /**\n     * Lets you define title for the content area\n     * @i18nClassification TIT: Title for the content area\n     */\n    contentTitle?: string;\n    /**\n     * All filter fields will be set as in parameter\n     */\n    allFiltersAsInParameters?: boolean;\n    //TODO keyPerformanceIndicators\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * In the list report and on the object page, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.\n     */\n    showDraftToggle?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface TableALPCommonSettings extends CommonTableSettings {\n    /**\n     * Represents the SelectionPresentationVariant qualifier. ALP looks for SelectionPresentationVariant with this qualifier and if not found, it looks for PresentationVariant with this qualifier.\n     */\n    qualifier?: string;\n    /**\n     * Determines the visualization of content area\n     */\n    defaultContentView?: DefaultContentView;\n    /**\n     * Determines the filter mode that is used\n     */\n    defaultFilterMode?: DefaultFilterMode;\n    /**\n     * Lets you define title for the content area\n     * @i18nClassification TIT: Title for the content area\n     */\n    contentTitle?: string;\n    /**\n     * This setting allows developer to determine chart / table interaction. 'true' would mean chart act as filter for table, 'false' would mean that matching table rows are highlighted but table is not filtered.\n     */\n    autoHide?: boolean;\n    /**\n     * All filter fields will be set as in parameter\n     */\n    allFiltersAsInParameters?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPResponsiveTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPGridTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ALPAnalyticalTable extends TableALPCommonSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n}\n\nexport interface TableALP extends ALPResponsiveTable, ALPGridTable, ALPAnalyticalTable {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable & TableTypeV2.GridTable & TableTypeV2.AnalyticalTable;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface GridTable extends CommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n    /**\n     * createWithFilters adds a new create action that uses the filter settings as input.\n     */\n    createWithFilters?: CreateWithFilters;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n    /**\n     * In the list report and on the object page, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.\n     */\n    showDraftToggle?: boolean;\n}\n", "export enum ChartType {\n    bar = 'bar',\n    column = 'column',\n    line = 'line',\n    combination = 'combination',\n    pie = 'pie',\n    donut = 'donut',\n    scatter = 'scatter',\n    bubble = 'bubble',\n    heatmap = 'heatmap',\n    bullet = 'bullet',\n    verticalBullet = 'vertical_bullet',\n    stackedBar = 'stacked_bar',\n    stackedColumn = 'stacked_column',\n    stackedCombination = 'stacked_combination',\n    horizontalStackedCombination = 'horizontal_stacked_combination',\n    dualBar = 'dual_bar',\n    dualColumn = 'dual_column',\n    dualLine = 'dual_line',\n    dualStackedBar = 'dual_stacked_bar',\n    dualStackedColumn = 'dual_stacked_column',\n    dualCombination = 'dual_combination',\n    dualStackedCombination = 'dual_stacked_combination',\n    dualHorizontalCombination = 'dual_horizontal_combination',\n    dualHorizontalStackedCombination = 'dual_horizontal_stacked_combination',\n    hundredStackedBar = '100_stacked_bar',\n    hundredStackedColumn = '100_stacked_column',\n    hundredDualStackedBar = '100_dual_stacked_bar',\n    hundredDualStackedColumn = '100_dual_stacked_column',\n    waterfall = 'waterfall',\n    horizontalWaterfall = 'horizontal_waterfall'\n}\n\n/**\n * Chart\n * @isViewNode true\n */\nexport interface ChartSettings {\n    /**\n     * Controls the visibility of the legend button.\n     */\n    showLegendButton?: boolean;\n    /**\n     * Controls the visibility of the chart download button.\n     */\n    showDownloadButton?: boolean;\n    /**\n     * Controls the visibility of the chart type button.\n     */\n    showChartTypeSelectionButton?: boolean;\n    /**\n     * Comma-separated value fields do not showup in the list of available chart types.\n     */\n    ignoredChartTypes?: ChartType[];\n    /**\n     * Controls the visibility of the data label.\n     */\n    showDataLabel?: boolean;\n}\n", "import type {\n    ObjectPageResponsiveTableWithMultiSelect,\n    ObjectPageResponsiveTableWithInlineDelete,\n    ObjectPageAnalyticalTable,\n    ObjectPageGridTable,\n    ObjectPageTreeTable,\n    ObjectPageChart,\n    ObjectPageForm\n} from './index';\nimport type { ViewTypes, SAPUI5_FRAGMENT_CLASS, SAPUI5_VIEW_CLASS } from '../../common/webapp/manifest/sapUi5';\n\n/**\n * Section\n * @isViewNode true\n */\nexport interface ObjectPageSectionV2 {\n    /**\n     * Whether the section should be visible on the screen.\n     */\n    visible?: boolean;\n}\n\n/**\n * Form\n * @isViewNode true\n */\nexport interface ObjectPageSectionFormV2 extends ObjectPageSectionV2 {\n    form?: ObjectPageForm;\n}\n\nexport type AnyObjectPageTableType =\n    | ObjectPageResponsiveTableWithMultiSelect\n    | ObjectPageResponsiveTableWithInlineDelete\n    | ObjectPageAnalyticalTable\n    | ObjectPageGridTable\n    | ObjectPageTreeTable;\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface ObjectPageSectionTableV2 extends ObjectPageSectionV2 {\n    table?: AnyObjectPageTableType;\n}\n\n/**\n * Chart\n * @isViewNode true\n */\nexport interface ObjectPageSectionChartV2 extends ObjectPageSectionV2 {\n    chart?: ObjectPageChart;\n}\n\nexport interface ObjectPageSectionContactV2 extends ObjectPageSectionV2 {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSectionAddressV2 extends ObjectPageSectionV2 {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport interface ObjectPageSubSectionContactV2 extends ObjectPageSectionV2 {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSubSectionAddressV2 extends ObjectPageSectionV2 {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport type AnySubSectionType =\n    | ObjectPageSectionTableV2\n    | ObjectPageSectionChartV2\n    | ObjectPageSectionFormV2\n    | ObjectPageSubSectionContactV2\n    | ObjectPageSubSectionAddressV2;\n\nexport interface GenericSubSections {\n    [key: string]: AnySubSectionType;\n}\n\n/**\n * Subsection\n * @isViewNode true\n */\nexport interface ObjectPageSubSectionV2 extends ObjectPageSectionV2 {\n    subsections?: GenericSubSections;\n}\n\nexport type AnySectionType =\n    | ObjectPageSectionTableV2\n    | ObjectPageSectionChartV2\n    | ObjectPageSectionFormV2\n    | ObjectPageSectionContactV2\n    | ObjectPageSectionAddressV2\n    | ObjectPageSectionV2\n    | ObjectPageSubSectionV2;\n\nexport interface GenericSections {\n    [key: string]: AnySectionType;\n}\n\nexport type CustomSectionTypeV2 = ObjectPageCustomSectionView | ObjectPageCustomSectionFragment;\n\n/**\n * Custom Sections\n * @isViewNode true\n */\nexport interface CustomSections {\n    custom?: CustomSectionTypeV2[];\n}\n\nexport interface ObjectPageCustomSectionBase {\n    relatedFacet: string;\n    relativePosition: SectionPosition;\n    /**\n     * The label of the custom section, preferably as an i18n key\n     * @i18nClassification TIT: Custom section title\n     */\n    title: string;\n}\n\n/**\n * View\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionView extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_VIEW_CLASS;\n    viewName: string;\n    type: ViewTypes;\n}\n\n/**\n * Fragment\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionFragment extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n    type: ExtensionFragmentTypes;\n}\n\nexport enum SectionPosition {\n    AfterFacet = 'AfterFacet',\n    BeforeFacet = 'BeforeFacet',\n    ReplaceFacet = 'ReplaceFacet'\n}\n\nexport enum ExtensionFragmentTypes {\n    XML = 'XML'\n}\n", "import type { GenericColumns, TableTypeV2, QuickVariant } from './Table';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\n\nexport interface QuickVariantSelectionOP {\n    /**\n     * To show the number of records available, set showCounts to true.\n     */\n    showCounts?: boolean;\n    /**\n     * The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.\n     */\n    variants: {\n        [key: number]: QuickVariant;\n    };\n}\n\nexport interface FieldPathOP {\n    path: string;\n}\n\nexport interface CreationFieldKeysOP {\n    [key: string]: FieldPathOP;\n}\n\nexport interface Fields4DialogOP {\n    fields: CreationFieldKeysOP;\n}\n\nexport enum CreateMode {\n    inline = 'inline'\n}\n\nexport interface ObjectPageCommonTableSettings<COLS = GenericColumns> {\n    /**\n     * You can enable the creation of objects that have a maximum of 8 data fields through a dialog in the list report page.\n     */\n    createWithParameterDialog?: Fields4DialogOP;\n    /**\n     *  With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.\n     */\n    editable?: boolean;\n    /**\n     * The 'Select All' button is disabled by default. To enable it, set selectAll to true.\n     */\n    selectAll?: boolean;\n    /**\n     * If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.\n     */\n    selectionLimit?: number;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before.\n     */\n    quickVariantSelection?: QuickVariantSelectionOP;\n    /**\n     * useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.\n     */\n    useExportToExcel?: boolean;\n    /**\n     * Specifies the type of export to be used in the SmartTable control. UI5Client is the default option.\n     */\n    exportType?: smarttable.ExportType;\n    /**\n     * Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.\n     */\n    createMode?: CreateMode;\n    /**\n     * If createMode is set to inline, you can use this setting to disable the default sort order.\n     */\n    disableDefaultInlineCreateSort?: boolean;\n    /**\n     * To enable variant management for a specific table on an object page.\n     */\n    variantManagement?: boolean;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ObjectPageToolBar;\n    /**\n     * Columns\n     */\n    columns?: COLS;\n}\n\n/**\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableCommonSettings extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.ResponsiveTable;\n    /**\n     * Set includeItemInSelection to true if you want items to be selectable when clicked, rather than after the selection control has been set.\n     */\n    includeItemInSelection?: boolean;\n    /**\n     * popinLayout defines the layout in which the table pop-in rows shall be rendered.\n     */\n    popinLayout?: PopinLayout;\n    /**\n     * growingThreshold defines the number of items to be requested from the model for each grow. This property can only be used if the growing property is set to true.\n     */\n    growingThreshold?: number;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableWithMultiSelect extends ObjectPageResponsiveTableCommonSettings {\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTableWithInlineDelete extends ObjectPageResponsiveTableCommonSettings {\n    /**\n     *  Used to enable inline deletion in a responsive table of list report and object page\n     */\n    inlineDelete?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageResponsiveTable\n    extends ObjectPageResponsiveTableCommonSettings,\n        ObjectPageResponsiveTableWithMultiSelect,\n        ObjectPageResponsiveTableWithInlineDelete {}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageAnalyticalTable extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.AnalyticalTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageGridTable extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.GridTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n * @controlProperty type\n */\nexport interface ObjectPageTreeTable extends ObjectPageCommonTableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV2.TreeTable;\n    /**\n     * For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.\n     */\n    condensedTableLayout?: boolean;\n    /**\n     * Single selection in tables is enabled by default. If you want, you can enable multi-select.\n     */\n    multiSelect?: boolean;\n}\n", "import type { SapUiGenericAppPageSettings } from '../../../common/page';\nimport type { FlexibleColumnLayout, FlexibleColumnLayoutType } from '../../../common';\n\nexport interface SapUiAppV2 {\n    pages: SapUiAppPagesV2;\n    _version?: string;\n    settings?: SapUiAppSettingsV2;\n}\n\nexport interface SapUiAppPagesV2 {\n    [key: string]: SapUiAppPageV2;\n}\n\nexport const FE_TEMPLATE_V2 = 'sap.suite.ui.generic.template';\nexport const FE_TEMPLATE_V2_OBJECT_PAGE = 'sap.suite.ui.generic.template.ObjectPage';\nexport const FE_TEMPLATE_V2_LIST_REPORT = 'sap.suite.ui.generic.template.ListReport';\nexport const FE_TEMPLATE_V2_ALP = 'sap.suite.ui.generic.template.AnalyticalListPage';\n\nexport interface SapUiAppPageV2 {\n    entitySet?: string;\n    navigationProperty?: string;\n    component?: {\n        name: string;\n        list?: boolean;\n        settings?: SapUiGenericAppPageSettings;\n        sections?: {\n            sectionIds?: SapUiGenericAppPageSettings;\n        };\n    };\n    pages?: SapUiAppPagesV2;\n    defaultLayoutType?: FlexibleColumnLayoutType;\n}\n\nexport interface SapUiAppSettingsV2 {\n    flexibleColumnLayout?: FlexibleColumnLayout;\n}\n", "import type {\n    SapUi5RootView,\n    SapUi5OdataModel,\n    SapUi5ResourceModel,\n    SapUi5RoutingRoute,\n    SAPUI5_FRAGMENT_CLASS,\n    SAPUI5_VIEW_CLASS,\n    ViewTypes,\n    SapUi5RoutingTargetBase,\n    SapUi5RoutingTarget,\n    Dependencies\n} from '../../../common/webapp/manifest/sapUi5';\nimport type { ManifestSection } from '../../..';\n\nexport interface SapUi5 {\n    flexEnabled?: boolean;\n    resources?: object;\n    dependencies?: Dependencies;\n    models?: { [key: string]: SapUi5OdataModel | SapUi5ResourceModel };\n    routing?: SapUi5RoutingV2;\n    [key: string]: string | object | boolean;\n    rootView?: SapUi5RootView;\n    extends?: SapUi5Extends;\n}\n\nexport interface SapUi5RoutingV2 {\n    routes?: SapUi5RoutingRoute[];\n    targets: SapUi5RoutingTargetsV2;\n}\n\nexport interface SapUi5RoutingTargetsV2 {\n    [key: string]: SapUi5RoutingTarget | SapUi5RoutingTargetCustomPageV2;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV2 extends SapUi5RoutingTargetBase {\n    viewId: string;\n    viewName: string;\n    viewLevel?: number;\n    title?: string;\n}\n\n// SAPUI5 EXTENDS\nexport const SAPUI5_VIEW_EXTENSION = 'sap.ui.viewExtensions';\nexport const SAPUI5_CONTROLLER_EXTENSION = 'sap.ui.controllerExtensions';\n\nexport interface SapUi5Extends {\n    extensions?: SapUi5Extensions;\n}\n\nexport interface SapUi5Extensions {\n    [SAPUI5_VIEW_EXTENSION]?: SapUi5ViewExtensions;\n    // Added it here, but sync logic is not supported yet\n    [SAPUI5_CONTROLLER_EXTENSION]?: SapUi5ControllerExtensions;\n}\nexport const SAPUI5_VIEW_EXTENSION_OBJECT_PAGE = 'sap.suite.ui.generic.template.ObjectPage.view.Details';\nexport const SAPUI5_VIEW_EXTENSION_LIST_REPORT = 'sap.suite.ui.generic.template.ListReport.view.ListReport';\nexport const SAPUI5_VIEW_EXTENSION_ANALYTICAL_LIST_PAGE =\n    'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage';\n\n// VIEW EXTENDS\nexport interface SapUi5PageViewExtensions {\n    [key: string]: SapUi5ViewExtensionView | SapUi5ViewExtensionFragment;\n}\n\nexport interface SapUi5ViewExtensions {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5PageViewExtensions;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5PageViewExtensions;\n}\n\nexport interface SapUi5ViewExtensionBase {\n    type: ViewTypes;\n}\n\nexport interface SapUi5ViewExtensionView extends SapUi5ViewExtensionBase {\n    className: typeof SAPUI5_VIEW_CLASS;\n    viewName: string;\n}\n\nexport interface SapUi5ViewExtensionFragment extends SapUi5ViewExtensionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n}\n\n// CONTROLLER EXTENDS\nexport interface SapUi5ControllerExtensions {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5PageControllerExtensions;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5PageControllerExtensions;\n}\n\nexport interface SapUi5PageControllerExtensions {\n    [key: string]: SapUi5ControllerExtension;\n}\n\nexport interface SapUi5ControllerExtension {\n    controllerName: string;\n    [ManifestSection.generic]: { [key: string]: SapUi5ControllerExtensionSettings };\n}\n\n// Currently sync does not support controller extensions\nexport interface SapUi5ControllerExtensionSettings {\n    EntitySet: string;\n    Actions?: unknown;\n    Header?: unknown;\n    Sections?: unknown;\n}\n", "import type {\n    DateRangeType,\n    FilterType,\n    DefaultDateRange,\n    DateRange,\n    ListCard,\n    AnalyticalCard,\n    StackCard,\n    LinklistCard,\n    TableCard,\n    CustomCard\n} from './controls';\n\n/**\n * @isViewNode false\n */\nexport interface SelectedValues {\n    /**\n     * The selectedValues property is a set of standard date range values that you want to include or exclude.\n     */\n    selectedValues?: DateRangeType[];\n    /**\n     * The exclude property is set to True by default. This means excluding all values given as selectedValues from the list of date range filters. If the exclude property is set to False, the application shows only selected values in the list of date range filters.\n     */\n    exclude?: boolean;\n    /**\n     * This property references a JS class, which you use to modify the date range value list. You can either remove standard data range values or add custom values.\n     * The customDateRangeImplementation setting takes priority followed by filter and selectedValues when excluding date range types.\n     */\n    customDateRangeImplementation?: string;\n    /**\n     * You can use the filter settings to include and exclude specific date range values.\n     */\n    filter?: FilterType[];\n    /**\n     * You can set a default value for semantic date range.\n     */\n    defaultValue?: DefaultDateRange;\n}\n\nexport interface DateRangeOVP extends DateRange {\n    /**\n     * For a fields' list you can define the set of standard date range values separately.\n     */\n    fields?: {\n        [field: string]: SelectedValues;\n    };\n}\n\nexport type FilterSettingsType = {\n    /**\n     * You can define date ranges, such as lastYear or nextQuarter on the Smart Filter Bar\n     */\n    dateSettings?: DateRangeOVP;\n};\n\nexport enum ContainerLayoutType {\n    fixed = 'fixed',\n    resizable = 'resizable'\n}\n\nexport type CardType = ListCard | AnalyticalCard | StackCard | LinklistCard | TableCard | CustomCard;\n\nexport type ChartSettingsType = {\n    /**\n     * Set the showDataLabel property to true to make data labels visible in analytical cards.\n     */\n    showDataLabel?: boolean;\n};\n", "export * from './controls';\nexport * from './webapp';\nexport * from './page';\nexport * from './pages';\nexport * from './application';\nexport * from './ApplicationV4';\n", "import type {\n    TableColumn,\n    TableColumnAction,\n    TableCustomColumn,\n    ViewTableColumn,\n    ViewTableColumnAction,\n    ViewTableCustomColumn\n} from '../webapp/manifest/ManifestSettings';\nimport type { ToolBar, ViewChartToolBar } from './ToolBar';\n\nexport enum SelectionMode {\n    Multi = 'Multi',\n    None = 'None',\n    Single = 'Single',\n    Auto = 'Auto'\n}\n\nexport enum TableTypeV4 {\n    ResponsiveTable = 'ResponsiveTable',\n    GridTable = 'GridTable',\n    AnalyticalTable = 'AnalyticalTable'\n    /* Not supported yet:\n    TreeTable = \"TreeTable\"*/\n}\n\nexport enum TableCreationModeType {\n    NewPage = 'NewPage',\n    Inline = 'Inline',\n    CreationRow = 'CreationRow'\n}\n\nexport enum InitialLoadType {\n    Disabled = 'Disabled',\n    Enabled = 'Enabled',\n    Auto = 'Auto'\n}\n\nexport enum DefaultPathType {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Both = 'both'\n}\n\nexport interface TableCreationMode {\n    /**\n     * The name property of TableCreationMode defines the creation mode; possible values are:\n     * - NewPage: The create action leads to a new page.\n     * - Inline: The create action leads to a new row at the table.\n     * - CreationRow: No create button will be rendered, an empty row is directly given.\n     * The default is \"NewPage\".\n     */\n    name?: TableCreationModeType;\n    /**\n     * In case of inline creation mode you can decide if the new row will be created at the end of the table, or directly after the currently selected table. The default value is \"true\"\n     */\n    createAtEnd?: boolean;\n}\nexport interface ViewTableCreationMode {\n    /**\n     * The name property of TableCreationMode defines the creation mode; possible values are:\n     * - NewPage: The create action leads to a new page.\n     * - Inline: The create action leads to a new row at the table.\n     * - CreationRow: No create button will be rendered, an empty row is directly given.\n     * The default is \"NewPage\".\n     */\n    name?: TableCreationModeType;\n    /**\n     * In case of inline creation mode you can decide if the new row will be created at the end of the table, or directly after the currently selected table. The default value is \"true\"\n     */\n    createAtEnd?: boolean;\n}\n\nexport interface PersonalizationType {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface ViewPersonalizationType {\n    /**\n     * Defines whether the user can add and remove columns to a given table.\n     */\n    column?: boolean;\n    /**\n     * Defines whether the user can sort a given table.\n     */\n    sort?: boolean;\n    /**\n     * Defines whether the user can filter data of a given table.\n     */\n    filter?: boolean;\n}\n\nexport interface AnnotationPathAsObject {\n    annotationPath: string;\n}\n\n//Not used by specification anymore, but there are some tests using it in tools-suite that needs to be adapted\nexport interface AnnotationPathWithKey {\n    key: string;\n    annotationPath: string;\n    entitySet?: string;\n}\n\nexport interface QuickVariantSelectionV4 {\n    /**\n     * List of annotation paths referring to SelectionVariant annotations\n     */\n    paths: AnnotationPathAsObject[];\n    /**\n     * You can hide the table and display only the titles of the tabs. To do so, add the hideTableTitle option and set it to true.\n     */\n    hideTableTitle?: boolean;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\nexport interface GenericColumns {\n    [key: string]: TableColumn | TableColumnAction | TableCustomColumn;\n}\n\nexport interface ViewColumns {\n    [key: string]: ViewTableColumn | ViewTableColumnAction | ViewTableCustomColumn;\n}\n\n// Note: TableSettings are reused by OP: LR only properties must not be added here.\nexport interface TableSettings {\n    /**\n     * Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.\n     */\n    type?: TableTypeV4;\n    /**\n     * Applications can influence whether the table rows are selectable or not, and whether it allows for single selection or multiple selection. It can take the following values:\n     * - \"Auto\": This is the default value. In this mode, Fiori Elements first checks if there are any custom actions or IBN buttons in the table toolbar that require a context. If no such buttons are found, then no table selection is allowed in display mode. In edit mode too a selection is not allowed unless there is a Delete button in the table toolbar in which case multiple row selection will be allowed.\n     * - \"Multi\": This will allow end users to select multiple table records (in both display and edit mode)\n     * - \"Single\" This will allow end user to select only a single table record (in both display and edit mode)\n     * - \"None\": This will not allow the end user to select any table record in display mode. This will also be the case in edit mode unless the table has a delete button enabled, in which multiple selection is allowed in delete mode.\n     */\n    selectionMode?: SelectionMode;\n    /**\n     * The selectAll configuration overrides the selectionLimit and allows the user to select all the items. When set to true, the select all feature is enabled: a checkbox in the table header is displayed which selects all items when clicked.\n     */\n    selectAll?: boolean;\n    /**\n     * With the selectionLimit you can define how many items can be selected at a time,\n     */\n    selectionLimit?: number;\n    /**\n     * The exporting of the table to an Excel file is enabled in List Report tables by default. In Object Page, the export to Excel is available by default if the copy/paste feature is also available; otherwise it is disabled.\n     * To disable the export in List Report or to enable it in Object Page, use the \"enableExport\" property and set it to false or true.\n     */\n    enableExport?: boolean;\n    /**\n     * With quickVariantSelection you can switch on the multiple view feature (single table mode). It links to SelectionVariant (filters) or SelectionPresentationVariant (filters and sorters) you must have added to your annotations beforehand.\n     */\n    quickVariantSelection?: QuickVariantSelectionV4;\n    /**\n     * You can set the content density to condensed for ui.table on the list report and object page applications.\n     */\n    condensedTableLayout?: boolean;\n}\n\nexport type ViewTypeV4 = LRTableView | LRChartView | TableViewExtension | boolean;\n\n/**\n * Views\n * @isViewNode true\n */\nexport interface MultiTableModeV4 {\n    /**\n     * List of annotation paths\n     */\n    [key: string]: ViewTypeV4;\n    /**\n     * You can show the counts of entries of each view. To do so, add the showCounts option and set it to true.\n     */\n    showCounts?: boolean;\n}\n\n/**\n * Chart View\n * @isViewNode true\n */\nexport interface ALPChartView {\n    /**\n     * The primary annotation path can be either UI.Chart, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ViewChartToolBar;\n}\n\nexport interface CommonViewSettings {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * To use charts in multiple table mode, define a UI.Chart annotation, including a qualifier.\n     * Reference the UI.Chart annotation in your SelectionPresentationVariant or PresentationVariant for your view.\n     */\n    annotationPath: string;\n    /**\n     * Each chart can be based on a different entitySet.\n     */\n    entitySet?: string;\n}\n\n/**\n * Chart View\n * @isViewNode true\n */\nexport interface LRChartView extends CommonViewSettings {\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ViewChartToolBar;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table View\n * @isViewNode true\n */\nexport interface ALPTableView extends TableSettings {\n    /**\n     * The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * initialLoad defines whether or not the data in the table is automatically loaded.\n     * - Disabled - Data is never loaded when opening the app without an app state.\n     * - Enabled - Data is always loaded when opening the app.\n     * - Auto - Data is only loaded, if initial/preset filters are available (e.g. defined by \"SelectionVariant\" definition, URL parameters or user defaults).\n     */\n    initialLoad?: InitialLoadType;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: ViewPersonalizationType;\n    /**\n     * Defines the page behavior when a new record is created.\n     */\n    creationMode?: ViewTableCreationMode;\n\n    /**\n     * Table Toolbar\n     */\n    toolBar?: ToolBar;\n    columns?: ViewColumns;\n}\n\n/**\n * Table View Extension\n * @isViewNode true\n */\nexport interface TableViewExtension {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * View title (localization supported).\n     */\n    label?: string;\n    /**\n     * The name contains sap.app.id as a prefix, followed by the path in the app/webapp folder and the name of the XML view.\n     */\n    template: string;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table View\n * @isViewNode true\n */\nexport interface LRTableView extends TableSettings {\n    /**\n     * Unique tab identifier.\n     * @hidden true\n     */\n    key: string;\n    /**\n     * @hidden true\n     */\n    index: number;\n    /**\n     * The annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath: string;\n    /**\n     * Each table can be based on a different entitySet.\n     */\n    entitySet?: string;\n    /**\n     *  The tab keeps the default LineItem ID (without the key), so the variant is applied to it.\n     */\n    keepPreviousPersonalization?: boolean;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: ViewPersonalizationType;\n    /**\n     * Defines the page behavior when a new record is created.\n     */\n    creationMode?: ViewTableCreationMode;\n    /**\n     * Table Toolbar\n     */\n    toolBar?: ToolBar;\n    /**\n     * Columns\n     */\n    columns?: ViewColumns;\n    /**\n     * Specifies whether the view is visible or not\n     */\n    visible?: boolean;\n}\n\n/**\n * Table\n * @isViewNode true\n */\nexport interface Table extends TableSettings {\n    /**\n     * The secondary annotation path can be either UI.LineItem, UI.PresentationVariant, or UI.SelectionPresentationVariant.\n     */\n    annotationPath?: string;\n    /**\n     * initialLoad defines whether or not the data in the table is automatically loaded.\n     * - Disabled - Data is never loaded when opening the app without an app state.\n     * - Enabled - Data is always loaded when opening the app.\n     * - Auto - Data is only loaded, if initial/preset filters are available (e.g. defined by \"SelectionVariant\" definition, URL parameters or user defaults).\n     */\n    initialLoad?: InitialLoadType;\n    /**\n     * Defines the page behavior when a new record is created.\n     */\n    creationMode?: TableCreationMode;\n    /**\n     * Defines the personalization mode, currently only effective if variant management on page is either set to Page or Control.\n     * By default all table settings are enabled. You can change this for the different parts of the table by setting the properties \"Column\", \"Sort\" and \"Filter\" accordingly.\n     * Omitting a property is treated as false, this allows apps to avoid getting new features like grouping in upcoming releases.\n     */\n    personalization?: PersonalizationType;\n    views?: MultiTableModeV4;\n    /**\n     * Tool Bar\n     */\n    toolBar?: ToolBar;\n    columns?: GenericColumns;\n}\n", "export enum SelectType {\n    single = 'single',\n    multi = 'multi'\n}\n\nexport enum ActionPlacement {\n    After = 'After',\n    Before = 'Before'\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface ToolBarAction {\n    /**\n     * Enables single selection for a bound action\n     */\n    enableOnSelect?: SelectType;\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface ViewToolBarAction {\n    /**\n     * Enables single selection for a bound action\n     */\n    enableOnSelect?: SelectType;\n}\nexport type ChartToolBarAction = {};\n\n/**\n * Actions\n * @isViewNode true\n */\nexport interface Actions {\n    [key: string]: ToolBarAction | CustomAction;\n}\n\n/**\n * Actions\n * @isViewNode true\n */\nexport interface ViewActions {\n    [key: string]: ViewToolBarAction | ChartToolBarAction | ViewTableCustomAction;\n}\n\n/**\n * Table Toolbar\n * @isViewNode true\n */\nexport interface ToolBar {\n    actions: Actions;\n}\n\n/**\n * Chart Toolbar\n * @isViewNode true\n */\nexport interface ViewChartToolBar {\n    actions: ViewActions;\n}\n\nexport interface CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor action.\n     * @artifactType Manifest\n     */\n    placement: ActionPlacement;\n}\n\n/**\n * Action\n * @isViewNode true\n */\nexport interface CustomAction {\n    /**\n     * The text that is displayed on the button (typically a binding to an i18n entry).\n     * @i18nClassification COL: Custom action text\n     * @artifactType Fragment\n     */\n    text: string;\n\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: CustomActionPosition;\n\n    /**\n     * Relevant for extension actions; allows the definition of a target action handler.\n     * @artifactType Fragment\n     */\n    press: string;\n\n    /**\n     * Indicates whether the action requires a selection of items.\n     * @artifactType Fragment\n     */\n    requiresSelection?: boolean;\n\n    /**\n     * Whether the action button should be visible on the screen.\n     * @artifactType Manifest\n     */\n    visible?: boolean;\n\n    /**\n     * Whether the action button should be enabled. Default value is `true`.\n     * @artifactType Manifest\n     */\n    enabled?: boolean;\n}\n\nexport interface ViewCustomActionPosition extends CustomActionPosition {\n    /**\n     * The key of another action to be used as placement anchor.\n     * @artifactType Manifest\n     */\n    anchor?: string;\n}\n\nexport interface ViewTableCustomAction extends CustomAction {\n    /**\n     * Defines the position of the action relative to other actions.\n     * @artifactType Manifest\n     */\n    position?: ViewCustomActionPosition;\n}\n", "export const enum DesigntimeValues {\n    'not-adaptable-visibility' = 'not-adaptable-visibility'\n}\n\nexport interface FlexSettings {\n    /**\n     * You can restrict the adaptability of header facets via the setting 'flexSettings'/'designtime'. 'not-adaptable-visibility' means that 'remove' and 'add' are not possible, but 'move' is enabled.\n     */\n    designtime?: DesigntimeValues;\n}\n\nexport interface CommonHeaderFacetSettings {\n    /**\n     * Header facets marked as stashed are initially not visible on the UI. Key users can add these header facets via key user adaptation.\n     */\n    stashed?: boolean;\n    flexSettings?: FlexSettings;\n}\n\nexport interface ObjectPageHeaderSectionForm extends CommonHeaderFacetSettings {\n    /**\n     * Form\n     *  @isViewNode true\n     */\n    form?: object;\n}\n\nexport interface ObjectPageHeaderSectionContact extends CommonHeaderFacetSettings {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageHeaderSectionAddress extends CommonHeaderFacetSettings {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport type ObjectPageHeaderSectionChart = CommonHeaderFacetSettings;\nexport type ObjectPageHeaderSectionDataPoint = CommonHeaderFacetSettings;\n\n/**\n * Header Sections\n * @isViewNode true\n */\nexport interface HeaderSections {\n    [key: string]:\n        | ObjectPageHeaderSectionForm\n        | ObjectPageHeaderSectionChart\n        | ObjectPageHeaderSectionDataPoint\n        | ObjectPageHeaderSectionContact\n        | ObjectPageHeaderSectionAddress;\n}\n", "export enum SectionLayoutType {\n    Tabs = 'Tabs',\n    Page = 'Page'\n}\n\n/**\n * Page Layout\n * @isViewNode true\n */\nexport interface ObjectPageLayout {\n    /**\n     * sectionLayout defines the layout of the sections. The default is \"Page\" (all sections in one page), possible values are \"Page\" and \"Tabs\" (every section in its own tab).\n     */\n    sectionLayout?: SectionLayoutType;\n}\n", "import type { ObjectPageSectionTableV4 } from './ObjectPageTable';\nimport type { SAPUI5_FRAGMENT_CLASS } from '../../common/webapp/manifest/sapUi5';\nimport type { ObjectPageToolBar } from './ObjectPageToolBar';\nimport type { ObjectPageForm } from './ObjectPageForm';\n\nexport interface ObjectPageSectionForm {\n    /**\n     * Form\n     *  @isViewNode true\n     */\n    form?: ObjectPageForm;\n}\n\nexport interface ObjectPageSectionDataPoint {\n    /**\n     * Data Point\n     *  @isViewNode true\n     */\n    dataPoint?: object;\n}\n\nexport interface ObjectPageSectionContact {\n    /**\n     * Contact\n     *  @isViewNode true\n     */\n    contact?: object;\n}\n\nexport interface ObjectPageSectionAddress {\n    /**\n     * Address\n     *  @isViewNode true\n     */\n    address?: object;\n}\n\nexport interface ObjectPageChart {\n    /**\n     * Chart Toolbar\n     * @isViewNode true\n     */\n    toolBar?: ObjectPageToolBar;\n}\n\nexport interface ObjectPageSectionChart {\n    /**\n     * Chart\n     * @isViewNode true\n     */\n    chart?: ObjectPageChart;\n}\n\nexport interface ObjectPageSectionPresentationVariant {\n    /**\n     * Presentation Variant\n     */\n    [key: string]: ObjectPageSectionTableV4 | ObjectPageSectionChart;\n}\n\nexport interface GenericSections {\n    [key: string]:\n        | ObjectPageSectionTableV4\n        | ObjectPageSectionForm\n        | ObjectPageSectionDataPoint\n        | ObjectPageSectionContact\n        | ObjectPageSectionAddress\n        | ObjectPageSectionPresentationVariant;\n}\n\n/**\n * Subsections\n * @isViewNode true\n */\nexport interface ObjectPageSubSections {\n    subsections: GenericSections;\n}\n\nexport enum SectionPosition {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport enum CustomSectionViewTypesV4 {\n    XML = 'XML'\n}\n\n/**\n * Custom Sections\n * @isViewNode true\n */\nexport interface CustomSections {\n    /**\n     * Custom Sections\n     * @isViewNode true\n     */\n    custom?: ObjectPageCustomSectionFragment[];\n}\n\nexport interface ObjectPageCustomSectionBase {\n    relatedFacet: string;\n    relativePosition: SectionPosition;\n    id: string;\n    type: CustomSectionViewTypesV4;\n    /**\n     * The label of the custom section, preferrable as an i18n key\n     * @i18nClassification TIT: Custom section title\n     */\n    title: string;\n}\n\n/**\n * Fragment\n * @isViewNode true\n */\nexport interface ObjectPageCustomSectionFragment extends ObjectPageCustomSectionBase {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n}\n", "import type { SapUiGenericAppPageSettings } from '../../../common/page';\n\nexport interface SapUiAppV4 {\n    pages: SapUiAppPageV4[] | SapUiGenericAppPageMapV4;\n    _version?: string;\n    settings?: object;\n}\n\nexport interface SapUiGenericAppPageMapV4 {\n    [key: string]: SapUiAppPageV4;\n}\n\nexport interface SapUiNavDetailsV4 {\n    detail?: {\n        route?: string;\n    };\n}\n\nexport type SapUi5MultiViewPath = {\n    key: string;\n    annotationPath: string;\n};\n\nexport type SapUi5MultiViewPaths = SapUi5MultiViewPath[];\n\nexport type SapUi5ALPPaths = [\n    {\n        primary: [\n            {\n                annotationPath: string;\n            }\n        ];\n        secondary: [\n            {\n                annotationPath: string;\n            }\n        ];\n        defaultPath: string;\n    }\n];\n\nexport type SapUi5Views = {\n    paths: SapUi5MultiViewPaths | SapUi5ALPPaths;\n    showCounts?: boolean;\n};\n\nexport type SapUiPageSettingsV4 = SapUiGenericAppPageSettings & {\n    entitySet?: string;\n    navigation?: {\n        [key: string]: SapUiNavDetailsV4;\n    };\n    controlConfiguration?: SapUiGenericAppPageSettings;\n    content?: SapUi5RoutingTargetContent;\n    views?: SapUi5Views;\n    defaultTemplateAnnotationPath?: string;\n};\n\nexport interface SapUiAppPageV4 {\n    type: string;\n    id: string;\n    name: string;\n    options: {\n        settings?: SapUiPageSettingsV4;\n    };\n}\n\nexport const FE_TEMPLATE_V4 = 'sap.fe.templates';\nexport const FE_TEMPLATE_V4_CUSTOM_PAGE = 'sap.fe.core.fpm';\nexport const FE_TEMPLATE_V4_OBJECT_PAGE = 'sap.fe.templates.ObjectPage';\nexport const FE_TEMPLATE_V4_LIST_REPORT = 'sap.fe.templates.ListReport';\nexport const FE_TEMPLATE_V4_ALP = 'sap.fe.templates.AnalyticalListPage';\nexport interface SapUiAppPagesV4 {\n    [key: string]: SapUiAppPageV4;\n}\nexport interface SapUi5RoutingTargetContent {\n    body?: SapUi5RoutingTargetContentBody;\n}\n\nexport interface SapUi5RoutingTargetContentBody {\n    sections?: SapUi5RoutingTargetContentSections;\n}\n\nexport interface SapUi5RoutingTargetContentSections {\n    [key: string]: SapUi5RoutingTargetContentSection;\n}\n\nexport const SAPUI5_FRAGMENT_TYPE_V4 = 'XMLFragment';\nexport interface SapUi5RoutingTargetContentSection {\n    // Currently only xml fragment is supported\n    type: typeof SAPUI5_FRAGMENT_TYPE_V4;\n    name?: string;\n    title: string;\n    position: SapUi5RoutingTargetContentPosition;\n    template?: string;\n}\n\nexport enum SectionPositionV4 {\n    AfterFacet = 'AfterFacet',\n    BeforeFacet = 'BeforeFacet'\n}\n\nexport interface SapUi5RoutingTargetContentPosition {\n    placement: SectionPositionV4;\n    anchor: string;\n}\n", "import type {\n    SapUi5RootView,\n    SapUi5OdataModel,\n    SapUi5ResourceModel,\n    SapUi5RoutingRoute,\n    ViewTypes,\n    SapUi5RoutingTargetSettings,\n    SapUi5RoutingTargetBase,\n    SapUi5RoutingTarget,\n    Dependencies\n} from '../../../common/webapp/manifest/sapUi5';\nimport type { SapUiGenericAppPageSettings } from '../../../common/page';\nimport type { FlexibleColumnLayout } from '../../../common';\n\nexport interface FlexibleColumnLayoutV4 extends FlexibleColumnLayout {\n    /**\n     * To limit Flexible Column Layout to two columns. The third level will be displayed in full screen and not in a third column.\n     */\n    limitFCLToTwoColumns?: boolean;\n}\n\nexport interface SapUi5V4 {\n    flexEnabled?: boolean;\n    resources?: object;\n    dependencies?: Dependencies;\n    models?: { [key: string]: SapUi5OdataModel | SapUi5ResourceModel };\n    routing?: SapUi5RoutingV4;\n    [key: string]: string | object | boolean;\n    rootView?: SapUi5RootView;\n    extends?: SapUi5ExtendsV4;\n}\n\nexport interface SapUi5RoutingV4 {\n    config?: SapUi5RoutingConfig;\n    routes?: SapUi5RoutingRoute[];\n    targets: SapUi5RoutingTargetsV4;\n}\n\nexport type RoutingTargetOptions =\n    | SapUi5RoutingTarget\n    | SapUi5RoutingTargetCustomPageV4\n    | SapUi5RoutingTargetCustomPageV4New;\n\nexport interface SapUi5RoutingTargetsV4 {\n    [key: string]: RoutingTargetOptions;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV4New extends SapUi5RoutingTarget {\n    options?: {\n        settings: SapUi5RoutingTargetSettings & SapUi5CommonCustomPageV4;\n    };\n}\n\nexport interface SapUi5CommonCustomPageV4 extends SapUi5RoutingTargetBase {\n    viewName: string;\n    controlConfiguration?: SapUiGenericAppPageSettings;\n}\n\nexport interface SapUi5RoutingTargetCustomPageV4 extends SapUi5CommonCustomPageV4 {\n    viewId: string;\n    viewLevel?: number;\n    viewType?: ViewTypes;\n    viewPath?: string;\n    path?: string;\n    title?: string;\n}\n\nexport const FIORI_FCL_ROUTER_CLASS = 'sap.f.routing.Router';\nexport type RouterClass = typeof FIORI_FCL_ROUTER_CLASS | string;\nexport interface SapUi5RoutingConfig {\n    routerClass?: RouterClass;\n    flexibleColumnLayout?: FlexibleColumnLayoutV4;\n    viewType?: ViewTypes;\n    viewPath?: string;\n    path?: string;\n}\n\nexport interface SapUi5DependenciesV4 {\n    minUI5Version?: string;\n    incompatibleLimitation?: boolean;\n    libs?: SapUi5DependenciesLibV4;\n}\n\nexport const SAPUI5_DEPENDENCY_LIB_SAP_F = 'sap.f';\nexport interface SapUi5DependenciesLibV4 {\n    [SAPUI5_DEPENDENCY_LIB_SAP_F]?: SapUi5DependencyLibV4;\n    [key: string]: SapUi5DependencyLibV4;\n}\n\nexport interface SapUi5DependencyLibV4 {\n    minVersion?: string;\n    lazy?: boolean;\n}\n\nexport interface SapUi5ExtendsV4 {\n    extensions?: SapUi5ExtensionsV4;\n}\n\nexport const SAPUI5_CONTROLLER_EXTENSION = 'sap.ui.controllerExtensions';\nexport const SAPUI5_VIEW_EXTENSION_OBJECT_PAGE = 'sap.fe.templates.ObjectPage.ObjectPageController';\nexport const SAPUI5_VIEW_EXTENSION_LIST_REPORT = 'sap.fe.templates.ListReport.ListReportController';\n\nexport interface SapUi5ExtensionsV4 {\n    [SAPUI5_CONTROLLER_EXTENSION]?: SapUi5ControllerExtensionsV4;\n}\n\nexport interface SapUi5ControllerExtensionsV4 {\n    [SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]?: SapUi5ControllerExtensionV4;\n    [SAPUI5_VIEW_EXTENSION_LIST_REPORT]?: SapUi5ControllerExtensionV4;\n    [key: string]: SapUi5ControllerExtensionV4;\n}\n\nexport interface SapUi5ControllerExtensionV4 {\n    controllerName?: string;\n    controllerNames?: string[];\n}\n", "// Copies of sap.fe type definitions\nexport enum Placement {\n    After = 'After',\n    Before = 'Before'\n}\n\nexport interface Position {\n    /**\n     * The key of another column to be used as placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     */\n    placement: Placement;\n}\n\nexport interface ViewPosition {\n    /**\n     * The key of another column to be used as placement anchor.\n     */\n    anchor?: string;\n    /**\n     * Define the placement, either before or after the anchor column.\n     */\n    placement: Placement;\n}\n\nexport type Positionable = {\n    /**\n     *   Defines the position of the column relative to other columns.\n     */\n    position?: Position;\n};\n\nexport interface ActionAfterExecutionConfiguration {\n    /**\n     * By default, a navigation is automatically triggered after an action execution. If applications want to disable the navigation, they can do so using the manifest setting \u201CnavigateToInstance\u201D.\n     */\n    navigateToInstance?: boolean;\n    /**\n     * The \"enableAutoScroll\" allows you to scroll to the newly created or change item after execution of an action\n     */\n    enableAutoScroll?: boolean;\n}\n\nexport interface ActionAfterExecutionConfigurationOP {\n    /**\n     * By default, a navigation is automatically triggered after an action execution. If applications want to disable the navigation, they can do so using the manifest setting \u201CnavigateToInstance\u201D.\n     */\n    navigateToInstance?: boolean;\n    /**\n     * The \"enableAutoScroll\" allows you to scroll to the newly created or change item after execution of an action\n     */\n    enableAutoScroll?: boolean;\n}\n\nexport enum Availability {\n    'Default' = 'Default',\n    'Adaptation' = 'Adaptation',\n    'Hidden' = 'Hidden'\n}\n\nexport enum HorizontalAlign {\n    'Begin' = 'Begin',\n    'Center' = 'Center',\n    'End' = 'End'\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface TableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface ViewTableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Table Column\n * @isViewNode true\n */\nexport interface ObjectPageTableColumn {\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     */\n    width?: string;\n    /**\n     * Defines where the column should be shown.\n     * Default: it will be shown by default in the table.\n     * Adaptation: it will initially not shown in the table but be available via end user adaptation.\n     * Hidden: the column is neither available in the table nor in adaptation.\n     */\n    availability?: Availability;\n}\n\n/**\n * Inline Action\n * @isViewNode true\n */\nexport interface TableColumnAction extends TableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\n/**\n * Inline Action\n * @isViewNode true\n */\nexport interface ViewTableColumnAction extends ViewTableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\nexport type ColumnPropertiesType = string[];\n\n/**\n * Inline Action for Object Page\n * @isViewNode true\n */\nexport interface ObjectPageTableColumnAction extends TableColumn {\n    /**\n     * Settings that are only relevant for actions (associated with a UI.DataFieldForAction annotation)\n     */\n    afterExecution?: ActionAfterExecutionConfigurationOP;\n}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface TableCustomColumn {\n    /**\n     * Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: Position;\n    /**\n     * The header is shown on the table as header, as well as in the add/remove dialog.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Manifest\n     */\n    header: string;\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     * @artifactType Manifest\n     */\n    width?: string;\n    /**\n     * Relevant for extension columns; allows the definition of a target fragment.\n     * @artifactType Manifest\n     */\n    template: string;\n    /**\n     * Aligns the header as well as the content horizontally.\n     * @artifactType Manifest\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Defines where the column should be shown.\n     * - Default: it will be shown by default in the table.\n     * - Adaptation: it will initially not shown in the table but be available via end user adaptation\n     * - Hidden: the column is neither available in the table nor in adaptation\n     * @artifactType Manifest\n     */\n    availability?: Availability;\n    /**\n     * If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.\n     * @artifactType Manifest\n     */\n    properties?: ColumnPropertiesType;\n}\n\n/**\n * Custom Column\n * @isViewNode true\n */\nexport interface ViewTableCustomColumn {\n    /**\n     *   Defines the position of the column relative to other columns.\n     * @artifactType Manifest\n     */\n    position?: ViewPosition;\n    /**\n     * The header is shown on the table as header, as well as in the add/remove dialog.\n     * @i18nClassification COL: Custom column header text\n     * @artifactType Manifest\n     */\n    header: string;\n    /**\n     * A string type that represents CSS size values.\n     * Refer to https://openui5.hana.ondemand.com/api/sap.ui.core.CSSSize.\n     * @artifactType Manifest\n     */\n    width?: string;\n    /**\n     * Relevant for extension columns; allows the definition of a target fragment.\n     * @artifactType Manifest\n     */\n    template: string;\n    /**\n     * Aligns the header as well as the content horizontally.\n     * @artifactType Manifest\n     */\n    horizontalAlign?: HorizontalAlign;\n    /**\n     * Defines where the column should be shown.\n     * - Default: it will be shown by default in the table.\n     * - Adaptation: it will initially not shown in the table but be available via end user adaptation\n     * - Hidden: the column is neither available in the table nor in adaptation\n     * @artifactType Manifest\n     */\n    availability?: Availability;\n    /**\n     * If provided and sorting is enabled for the table the custom column header can be clicked. This will lead to a list of properties (or one) that can be sorted by, they are displayed as the labels of the properties, corresponding to their definition in the annotations.\n     * @artifactType Manifest\n     */\n    properties?: ColumnPropertiesType;\n}\n", "import type { PageConfig } from '../../common';\nimport type {\n    ObjectPageHeader,\n    ObjectPageLayout,\n    GenericSections,\n    CustomSections,\n    ObjectPageFooter\n} from '../controls';\n\nexport enum VariantManagementTypeObjectPage {\n    None = 'None',\n    Control = 'Control'\n}\n\nexport interface ObjectPageConfigV4 extends PageConfig {\n    header?: ObjectPageHeader;\n    layout?: ObjectPageLayout;\n    /**\n     * variantManagement defines how the variant management of page personalizations is controlled.\n     * - None - No variant management by default.\n     * - Control - Individual personalizations for each control.\n     */\n    variantManagement?: VariantManagementTypeObjectPage;\n\n    sections?: GenericSections | CustomSections;\n\n    footer?: ObjectPageFooter;\n}\n", "import type { PageConfig } from '../../common';\nimport type { FilterBar, ALPChartView, Table, ALPTableView, DefaultPathType } from '../controls';\n\nexport enum VariantManagementTypeListReport {\n    None = 'None',\n    Control = 'Control',\n    Page = 'Page'\n}\n\nexport interface ListReportConfigV4 extends PageConfig {\n    /**\n     * variantManagement defines how the variant management of page personalizations is controlled.\n     * - None - No variant management by default.\n     * - Control - Individual personalizations for each control.\n     */\n    variantManagement?: VariantManagementTypeListReport;\n    /**\n     * Filter Bar\n     */\n    filterBar?: FilterBar;\n\n    /**\n     * Chart\n     */\n    chart?: ALPChartView;\n\n    /**\n     * Table\n     */\n    table?: Table | ALPTableView;\n\n    /**\n     * defaultTemplateAnnotationPath must be a reference to a SelectionPresentationVariant.\n     * You use the SelectionPresentationVariant to configure the default visualizations and default filter values of the main content area.\n     */\n    defaultTemplateAnnotationPath?: string;\n\n    /**\n     * defaultPath can be \"primary\", \"secondary\", or \"both\". If it is \"primary\", SAP Fiori elements loads the app in chart-only view. If it is \"secondary\", SAP Fiori elements loads the app in table-only view. If it is \"both\", SAP Fiori elements loads the app in hybrid view.\n     */\n    defaultPath?: DefaultPathType;\n}\n", null, "'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n", null, null, null, null, ";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n", "module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n", "var isArray = require('./array-helper').isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n", "var sax = require('sax');\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = require('./options-helper');\r\nvar isArray = require('./array-helper').isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n", "var helper = require('./options-helper');\r\nvar xml2js = require('./xml2js');\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n", "var helper = require('./options-helper');\nvar isArray = require('./array-helper').isArray;\n\nvar currentElement, currentElementName;\n\nfunction validateOptions(userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureFlagExists('ignoreDeclaration', options);\n  helper.ensureFlagExists('ignoreInstruction', options);\n  helper.ensureFlagExists('ignoreAttributes', options);\n  helper.ensureFlagExists('ignoreText', options);\n  helper.ensureFlagExists('ignoreComment', options);\n  helper.ensureFlagExists('ignoreCdata', options);\n  helper.ensureFlagExists('ignoreDoctype', options);\n  helper.ensureFlagExists('compact', options);\n  helper.ensureFlagExists('indentText', options);\n  helper.ensureFlagExists('indentCdata', options);\n  helper.ensureFlagExists('indentAttributes', options);\n  helper.ensureFlagExists('indentInstruction', options);\n  helper.ensureFlagExists('fullTagEmptyElement', options);\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\n  helper.ensureSpacesExists(options);\n  if (typeof options.spaces === 'number') {\n    options.spaces = Array(options.spaces + 1).join(' ');\n  }\n  helper.ensureKeyExists('declaration', options);\n  helper.ensureKeyExists('instruction', options);\n  helper.ensureKeyExists('attributes', options);\n  helper.ensureKeyExists('text', options);\n  helper.ensureKeyExists('comment', options);\n  helper.ensureKeyExists('cdata', options);\n  helper.ensureKeyExists('doctype', options);\n  helper.ensureKeyExists('type', options);\n  helper.ensureKeyExists('name', options);\n  helper.ensureKeyExists('elements', options);\n  helper.checkFnExists('doctype', options);\n  helper.checkFnExists('instruction', options);\n  helper.checkFnExists('cdata', options);\n  helper.checkFnExists('comment', options);\n  helper.checkFnExists('text', options);\n  helper.checkFnExists('instructionName', options);\n  helper.checkFnExists('elementName', options);\n  helper.checkFnExists('attributeName', options);\n  helper.checkFnExists('attributeValue', options);\n  helper.checkFnExists('attributes', options);\n  helper.checkFnExists('fullTagEmptyElement', options);\n  return options;\n}\n\nfunction writeIndentation(options, depth, firstLine) {\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\n}\n\nfunction writeAttributes(attributes, options, depth) {\n  if (options.ignoreAttributes) {\n    return '';\n  }\n  if ('attributesFn' in options) {\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\n  }\n  var key, attr, attrName, quote, result = [];\n  for (key in attributes) {\n    if (attributes.hasOwnProperty(key) && attributes[key] !== null && attributes[key] !== undefined) {\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\n      attr = attr.replace(/\"/g, '&quot;');\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\n      result.push((options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' '));\n      result.push(attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote);\n    }\n  }\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\n    result.push(writeIndentation(options, depth, false));\n  }\n  return result.join('');\n}\n\nfunction writeDeclaration(declaration, options, depth) {\n  currentElement = declaration;\n  currentElementName = 'xml';\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\n}\n\nfunction writeInstruction(instruction, options, depth) {\n  if (options.ignoreInstruction) {\n    return '';\n  }\n  var key;\n  for (key in instruction) {\n    if (instruction.hasOwnProperty(key)) {\n      break;\n    }\n  }\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\n  if (typeof instruction[key] === 'object') {\n    currentElement = instruction;\n    currentElementName = instructionName;\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\n  } else {\n    var instructionValue = instruction[key] ? instruction[key] : '';\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\n  }\n}\n\nfunction writeComment(comment, options) {\n  return options.ignoreComment ? '' : '<!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '-->';\n}\n\nfunction writeCdata(cdata, options) {\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata.replace(']]>', ']]]]><![CDATA[>')) + ']]>';\n}\n\nfunction writeDoctype(doctype, options) {\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\n}\n\nfunction writeText(text, options) {\n  if (options.ignoreText) return '';\n  text = '' + text; // ensure Number and Boolean are converted to String\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\n}\n\nfunction hasContent(element, options) {\n  var i;\n  if (element.elements && element.elements.length) {\n    for (i = 0; i < element.elements.length; ++i) {\n      switch (element.elements[i][options.typeKey]) {\n      case 'text':\n        if (options.indentText) {\n          return true;\n        }\n        break; // skip to next key\n      case 'cdata':\n        if (options.indentCdata) {\n          return true;\n        }\n        break; // skip to next key\n      case 'instruction':\n        if (options.indentInstruction) {\n          return true;\n        }\n        break; // skip to next key\n      case 'doctype':\n      case 'comment':\n      case 'element':\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElement(element, options, depth) {\n  currentElement = element;\n  currentElementName = element.name;\n  var xml = [], elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\n  xml.push('<' + elementName);\n  if (element[options.attributesKey]) {\n    xml.push(writeAttributes(element[options.attributesKey], options, depth));\n  }\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n  if (!withClosingTag) {\n    if ('fullTagEmptyElementFn' in options) {\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\n    } else {\n      withClosingTag = options.fullTagEmptyElement;\n    }\n  }\n  if (withClosingTag) {\n    xml.push('>');\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\n      xml.push(writeElements(element[options.elementsKey], options, depth + 1));\n      currentElement = element;\n      currentElementName = element.name;\n    }\n    xml.push(options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '');\n    xml.push('</' + elementName + '>');\n  } else {\n    xml.push('/>');\n  }\n  return xml.join('');\n}\n\nfunction writeElements(elements, options, depth, firstLine) {\n  return elements.reduce(function (xml, element) {\n    var indent = writeIndentation(options, depth, firstLine && !xml);\n    switch (element.type) {\n    case 'element': return xml + indent + writeElement(element, options, depth);\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\n    case 'instruction':\n      var instruction = {};\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\n    }\n  }, '');\n}\n\nfunction hasContentCompact(element, options, anyContent) {\n  var key;\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      switch (key) {\n      case options.parentKey:\n      case options.attributesKey:\n        break; // skip to next key\n      case options.textKey:\n        if (options.indentText || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.cdataKey:\n        if (options.indentCdata || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.instructionKey:\n        if (options.indentInstruction || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.doctypeKey:\n      case options.commentKey:\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElementCompact(element, name, options, depth, indent) {\n  currentElement = element;\n  currentElementName = name;\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\n  if (typeof element === 'undefined' || element === null || element === '') {\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\n  }\n  var xml = [];\n  if (name) {\n    xml.push('<' + elementName);\n    if (typeof element !== 'object') {\n      xml.push('>' + writeText(element,options) + '</' + elementName + '>');\n      return xml.join('');\n    }\n    if (element[options.attributesKey]) {\n      xml.push(writeAttributes(element[options.attributesKey], options, depth));\n    }\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n    if (!withClosingTag) {\n      if ('fullTagEmptyElementFn' in options) {\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\n      } else {\n        withClosingTag = options.fullTagEmptyElement;\n      }\n    }\n    if (withClosingTag) {\n      xml.push('>');\n    } else {\n      xml.push('/>');\n      return xml.join('');\n    }\n  }\n  xml.push(writeElementsCompact(element, options, depth + 1, false));\n  currentElement = element;\n  currentElementName = name;\n  if (name) {\n    xml.push((indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>');\n  }\n  return xml.join('');\n}\n\nfunction writeElementsCompact(element, options, depth, firstLine) {\n  var i, key, nodes, xml = [];\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\n      for (i = 0; i < nodes.length; ++i) {\n        switch (key) {\n        case options.declarationKey: xml.push(writeDeclaration(nodes[i], options, depth)); break;\n        case options.instructionKey: xml.push((options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth)); break;\n        case options.attributesKey: case options.parentKey: break; // skip\n        case options.textKey: xml.push((options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options)); break;\n        case options.cdataKey: xml.push((options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options)); break;\n        case options.doctypeKey: xml.push(writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options)); break;\n        case options.commentKey: xml.push(writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options)); break;\n        default: xml.push(writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options)));\n        }\n        firstLine = firstLine && !xml.length;\n      }\n    }\n  }\n  return xml.join('');\n}\n\nmodule.exports = function (js, options) {\n  options = validateOptions(options);\n  var xml = [];\n  currentElement = js;\n  currentElementName = '_root_';\n  if (options.compact) {\n    xml.push(writeElementsCompact(js, options, 0, true));\n  } else {\n    if (js[options.declarationKey]) {\n      xml.push(writeDeclaration(js[options.declarationKey], options, 0));\n    }\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\n      xml.push(writeElements(js[options.elementsKey], options, 0, !xml.length));\n    }\n  }\n  return xml.join('');\n};\n", "var js2xml = require('./js2xml.js');\r\n\r\nmodule.exports = function (json, options) {\r\n  if (json instanceof Buffer) {\r\n    json = json.toString();\r\n  }\r\n  var js = null;\r\n  if (typeof (json) === 'string') {\r\n    try {\r\n      js = JSON.parse(json);\r\n    } catch (e) {\r\n      throw new Error('The JSON structure is invalid');\r\n    }\r\n  } else {\r\n    js = json;\r\n  }\r\n  return js2xml(js, options);\r\n};\r\n", "/*jslint node:true */\r\n\r\nvar xml2js = require('./xml2js');\r\nvar xml2json = require('./xml2json');\r\nvar js2xml = require('./js2xml');\r\nvar json2xml = require('./json2xml');\r\n\r\nmodule.exports = {\r\n  xml2js: xml2js,\r\n  xml2json: xml2json,\r\n  js2xml: js2xml,\r\n  json2xml: json2xml\r\n};\r\n", null, null, null, null, null, "/**\n * @module @ui5/flexibility-utils/src/changeUtils\n */\n\nlet iIdCounter = 0;\nconst CHANGE_UTILS_PREFIX = \"changeUtils: \";\n\nfunction uid() {\n\treturn \"id-\" + new Date().valueOf() + \"-\" + iIdCounter++;\n}\n\nfunction appendComponentToReference(sComponentName) {\n\tif (sComponentName && sComponentName.indexOf(\".Component\") < 0) {\n\t\tsComponentName += \".Component\";\n\t}\n\treturn sComponentName;\n}\n\nfunction getFlexReference(manifest) {\n\tconst oSapUi5Entry = manifest[\"sap.ui5\"];\n\tif (oSapUi5Entry) {\n\t\tif (oSapUi5Entry.appVariantId) {\n\t\t\treturn oSapUi5Entry.appVariantId;\n\t\t}\n\n\t\tif (oSapUi5Entry.componentName) {\n\t\t\treturn appendComponentToReference(oSapUi5Entry.componentName);\n\t\t}\n\t}\n\n\tconst sapApp = manifest[\"sap.app\"];\n\tif (!sapApp || !sapApp.id) {\n\t\tthrow Error(\"app ID could not be determined\");\n\t}\n\treturn sapApp.id;\n}\n\nfunction getAppVersion(manifest) {\n\tconst sapApp = manifest[\"sap.app\"];\n\tif (!sapApp || !sapApp.applicationVersion || !sapApp.applicationVersion.version) {\n\t\tthrow Error(\"app version could not be determined\");\n\t}\n\treturn sapApp.applicationVersion.version;\n}\n\nfunction getProjectId(manifest, reference) {\n\tif (\n\t\tmanifest &&\n\t\tmanifest[\"sap.app\"] &&\n\t\tmanifest[\"sap.app\"].sourceTemplate &&\n\t\t[\"ui5template.smartTemplate\", \"ui5template.smarttemplate\"].includes(manifest[\"sap.app\"].sourceTemplate.id)\n\t) {\n\t\treturn reference;\n\t}\n\n\treturn \"\";\n}\n\nfunction createString(propertyBag) {\n\treturn JSON.stringify({\n\t\tfileName: propertyBag.id || uid().replace(/-/g, \"_\") + \"_\" + propertyBag.type,\n\t\tfileType: \"change\",\n\t\tchangeType: propertyBag.type,\n\t\tmoduleName: \"\",\n\t\treference: propertyBag.reference,\n\t\tpackageName: \"\",\n\t\tcontent: propertyBag.content || {},\n\t\tselector: {\n\t\t\tid: propertyBag.controlId,\n\t\t\tidIsLocal: false,\n\t\t\ttype: propertyBag.controlType\n\t\t},\n\t\tlayer: propertyBag.isCustomer ? \"CUSTOMER_BASE\" : \"VENDOR\",\n\t\ttexts: {},\n\t\tnamespace: \"apps/\" + propertyBag.reference.replace(\".Component\", \"\") + \"/changes/\",\n\t\tprojectId: propertyBag.projectId,\n\t\tcreation: propertyBag.creation || new Date().valueOf(),\n\t\toriginalLanguage: \"\",\n\t\tsupport: {\n\t\t\tgenerator: CHANGE_UTILS_PREFIX + propertyBag.creatingTool,\n\t\t\tservice: \"\",\n\t\t\tuser: \"\",\n\t\t\tsapui5Version: propertyBag.sapui5Version,\n\t\t\tsourceChangeFileName: \"\",\n\t\t\tcompositeCommand: \"\"\n\t\t},\n\t\toDataInformation: {},\n\t\tdependentSelector: {},\n\t\tvalidAppVersions: {\n\t\t\tfrom: propertyBag.appVersion,\n\t\t\tto: propertyBag.appVersion,\n\t\t\tcreation: propertyBag.appVersion\n\n\t\t},\n\t\tjsOnly: false,\n\t\tvariantReference: \"\",\n\t\tappDescriptorChange: false\n\t});\n}\n\n/**\n * Object containing information for a change update.\n *\n * @typedef {object} \tChangeDefinition\n * @property {string}\tcontrolId - ID of the control containing all prefixes excluding the application ID prefix\n * @property {string}\ttype - Change type, i.e. <code>propertyChange</code>\n * @property {Object}\tcontent - Content of the change needed by the corresponding change handler\n * @property {boolean}\tisCustomer - Flag indicating whether the project is related to a customer project\n * @property {string}\tsapui5Version - SAPUI5 version for which the change is created\n * @property {string}\tcreatingTool - Name of the tool calling this function for support reasons\n * @property {string}\tid - UID of the change;\n * \t\t\t\t\t\t\tDefined on the first <code>toString</code> function call via the <code>manifest</code>\n * @property {string}\treference - Reference to the application;\n * \t\t\t\t\t\t\tDefined on the first <code>toString</code> function call via the <code>manifest</code>\n * @property {string}\tappVersion - Version of the application;\n *\t\t \t\t\t\t\tDefined on the first <code>toString</code> function call via the <code>manifest</code>\n * @property {string}\tcreation - String with the creation timestamp;\n * \t\t\t\t\t\t\tDefined on the first <code>toString</code> function call via the <code>manifest</code>\n */\n\n/**\n * Object containing information for a change creation.\n *\n * @typedef {object} \tChangeDefinitionInCreation\n * @property {string}  \tcontrolId - ID of the control containing all prefixes excluding the application ID prefix\n * @property {string}  \ttype - Change type, i.e. <code>propertyChange</code>\n * @property {Object}  \t[content] - Content of the change needed by the corresponding change handler\n * @property {boolean} \tisCustomer - Flag indicating whether the project is related to a customer project\n * @property {string}  \t[sapui5Version] - SAPUI5 version for which the change is created\n * @property {string}  \tcreatingTool - Name of the tool calling this function (this is needed for support reasons)\n */\n\nmodule.exports = {\n\t/**\n\t * Parses a string of a change file into a change definition;\n\t * The parsed entities <code>id</code>, <code>reference</code>, <code>appVersion</code>, <code>creation</code>\n\t * must not be changed between <code>toString</code> operations.\n\t *\n\t * @param {string} changeString - Stringified change object stored in the workspace\n\t * @returns {ChangeDefinition}\n\t */\n\tparse: function(changeString) {\n\t\tconst change = JSON.parse(changeString);\n\n\t\tif (\n\t\t\t!change.fileName ||\n\t\t\t!change.changeType ||\n\t\t\t!change.selector ||\n\t\t\t!change.reference ||\n\t\t\t!change.creation ||\n\t\t\t!change.content ||\n\t\t\t!change.layer ||\n\t\t\t!change.support\n\t\t) {\n\t\t\tthrow Error(\"Parsed object does not contain all required parameters\");\n\t\t}\n\n\t\treturn {\n\t\t\tid: change.fileName,\n\t\t\treference: change.reference,\n\t\t\tappVersion: change.validAppVersions ? change.validAppVersions.creation : \"\",\n\t\t\tcreation: change.creation,\n\t\t\tprojectId: change.projectId,\n\t\t\ttype: change.changeType,\n\t\t\tcontrolId: change.selector.id,\n\t\t\tcontrolType: change.selector.type,\n\t\t\tisCustomer: change.layer === \"CUSTOMER_BASE\",\n\t\t\tcreatingTool: change.support.generator.replace(CHANGE_UTILS_PREFIX, \"\"),\n\t\t\tcontent: change.content,\n\t\t\tsapui5Version: change.support.sapui5Version\n\t\t};\n\t},\n\n\t/**\n\t * Generates a string of a change to write it as a file into the workspace.\n\t *\n\t * @param {changeDefinitionInCreation} propertyBag -\n\t * \t\t\tObject containing parameters for the change string creation\n\t * @param {object} manifest - Application manifest\n\t * @returns {string} Stringified change object needed and understood by the SAPUI5 runtime for storing in the workspace\n\t */\n\tcreateChangeString: function (propertyBag, manifest) {\n\t\tif (\n\t\t\t!propertyBag.type ||\n\t\t\t!propertyBag.controlId ||\n\t\t\t!(typeof propertyBag.isCustomer === \"boolean\") ||\n\t\t\t!propertyBag.creatingTool\n\t\t) {\n\t\t\tthrow Error(\"not all property parameters of the change were provided\");\n\t\t}\n\n\t\tif (!manifest) {\n\t\t\tthrow Error(\"no manifest was provided\");\n\t\t}\n\n\t\tpropertyBag.reference = getFlexReference(manifest);\n\t\tpropertyBag.appVersion = getAppVersion(manifest);\n\t\tpropertyBag.projectId = getProjectId(manifest, propertyBag.reference);\n\n\t\treturn createString(propertyBag);\n\t},\n\n\t/**\n\t * Generates a string of a parsed change to write it as a file into the workspace.\n\t *\n\t * @param {ChangeDefinition} propertyBag -\n\t * \t\t\tObject containing parameters for the change string creation\n\t * @returns {string} Stringified change object needed and understood by the SAPUI5 runtime for storing in the workspace\n\t */\n\ttoString: function(propertyBag) {\n\t\tif (\n\t\t\t!propertyBag.type ||\n\t\t\t!propertyBag.controlId ||\n\t\t\t!(typeof propertyBag.isCustomer === \"boolean\") ||\n\t\t\t!propertyBag.creatingTool ||\n\t\t\t!(propertyBag.reference && propertyBag.appVersion)\n\t\t) {\n\t\t\tthrow Error(\"not all parameters of the change were provided\");\n\t\t}\n\n\t\treturn createString(propertyBag);\n\t}\n};\n", "/**\n * @module @ui5/flexibility-utils\n * @public\n */\n\nmodule.exports = {\n\t/**\n\t * @public\n\t * @see module:@ui5/flexibility-utils/src/changeUtils.js\n\t */\n\tchange: require(\"./src/changeUtils\")\n};", "/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n/**\n * Private utility functions\n * @module utils\n * @private\n */\n\n'use strict';\n\nvar regExpChars = /[|\\\\{}()[\\]^$+*?.]/g;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar hasOwn = function (obj, key) { return hasOwnProperty.apply(obj, [key]); };\n\n/**\n * Escape characters reserved in regular expressions.\n *\n * If `string` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} string Input string\n * @return {String} Escaped string\n * @static\n * @private\n */\nexports.escapeRegExpChars = function (string) {\n  // istanbul ignore if\n  if (!string) {\n    return '';\n  }\n  return String(string).replace(regExpChars, '\\\\$&');\n};\n\nvar _ENCODE_HTML_RULES = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n};\nvar _MATCH_HTML = /[&<>'\"]/g;\n\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n}\n\n/**\n * Stringified version of constants used by {@link module:utils.escapeXML}.\n *\n * It is used in the process of generating {@link ClientFunction}s.\n *\n * @readonly\n * @type {String}\n */\n\nvar escapeFuncStr =\n  'var _ENCODE_HTML_RULES = {\\n'\n+ '      \"&\": \"&amp;\"\\n'\n+ '    , \"<\": \"&lt;\"\\n'\n+ '    , \">\": \"&gt;\"\\n'\n+ '    , \\'\"\\': \"&#34;\"\\n'\n+ '    , \"\\'\": \"&#39;\"\\n'\n+ '    }\\n'\n+ '  , _MATCH_HTML = /[&<>\\'\"]/g;\\n'\n+ 'function encode_char(c) {\\n'\n+ '  return _ENCODE_HTML_RULES[c] || c;\\n'\n+ '};\\n';\n\n/**\n * Escape characters reserved in XML.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @implements {EscapeCallback}\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @static\n * @private\n */\n\nexports.escapeXML = function (markup) {\n  return markup == undefined\n    ? ''\n    : String(markup)\n      .replace(_MATCH_HTML, encode_char);\n};\nexports.escapeXML.toString = function () {\n  return Function.prototype.toString.call(this) + ';\\n' + escapeFuncStr;\n};\n\n/**\n * Naive copy of properties from one object to another.\n * Does not recurse into non-scalar properties\n * Does not check to see if the property has a value before copying\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @return {Object}      Destination object\n * @static\n * @private\n */\nexports.shallowCopy = function (to, from) {\n  from = from || {};\n  if ((to !== null) && (to !== undefined)) {\n    for (var p in from) {\n      if (!hasOwn(from, p)) {\n        continue;\n      }\n      if (p === '__proto__' || p === 'constructor') {\n        continue;\n      }\n      to[p] = from[p];\n    }\n  }\n  return to;\n};\n\n/**\n * Naive copy of a list of key names, from one object to another.\n * Only copies property if it is actually defined\n * Does not recurse into non-scalar properties\n *\n * @param  {Object} to   Destination object\n * @param  {Object} from Source object\n * @param  {Array} list List of properties to copy\n * @return {Object}      Destination object\n * @static\n * @private\n */\nexports.shallowCopyFromList = function (to, from, list) {\n  list = list || [];\n  from = from || {};\n  if ((to !== null) && (to !== undefined)) {\n    for (var i = 0; i < list.length; i++) {\n      var p = list[i];\n      if (typeof from[p] != 'undefined') {\n        if (!hasOwn(from, p)) {\n          continue;\n        }\n        if (p === '__proto__' || p === 'constructor') {\n          continue;\n        }\n        to[p] = from[p];\n      }\n    }\n  }\n  return to;\n};\n\n/**\n * Simple in-process cache implementation. Does not implement limits of any\n * sort.\n *\n * @implements {Cache}\n * @static\n * @private\n */\nexports.cache = {\n  _data: {},\n  set: function (key, val) {\n    this._data[key] = val;\n  },\n  get: function (key) {\n    return this._data[key];\n  },\n  remove: function (key) {\n    delete this._data[key];\n  },\n  reset: function () {\n    this._data = {};\n  }\n};\n\n/**\n * Transforms hyphen case variable into camel case.\n *\n * @param {String} string Hyphen case string\n * @return {String} Camel case string\n * @static\n * @private\n */\nexports.hyphenToCamel = function (str) {\n  return str.replace(/-[a-z]/g, function (match) { return match[1].toUpperCase(); });\n};\n\n/**\n * Returns a null-prototype object in runtimes that support it\n *\n * @return {Object} Object, prototype will be set to null where possible\n * @static\n * @private\n */\nexports.createNullProtoObjWherePossible = (function () {\n  if (typeof Object.create == 'function') {\n    return function () {\n      return Object.create(null);\n    };\n  }\n  if (!({__proto__: null} instanceof Object)) {\n    return function () {\n      return {__proto__: null};\n    };\n  }\n  // Not possible, just pass through\n  return function () {\n    return {};\n  };\n})();\n\n\n", "/*\n * EJS Embedded JavaScript templates\n * Copyright 2112 Matthew Eernisse (mde@fleegix.org)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n*/\n\n'use strict';\n\n/**\n * @file Embedded JavaScript templating engine. {@link http://ejs.co}\n * @author Matthew Eernisse <mde@fleegix.org>\n * @author Tiancheng \"Timothy\" Gu <timothygu99@gmail.com>\n * @project EJS\n * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}\n */\n\n/**\n * EJS internal functions.\n *\n * Technically this \"module\" lies in the same file as {@link module:ejs}, for\n * the sake of organization all the private functions re grouped into this\n * module.\n *\n * @module ejs-internal\n * @private\n */\n\n/**\n * Embedded JavaScript templating engine.\n *\n * @module ejs\n * @public\n */\n\n\nvar fs = require('fs');\nvar path = require('path');\nvar utils = require('./utils');\n\nvar scopeOptionWarned = false;\n/** @type {string} */\nvar _VERSION_STRING = require('../package.json').version;\nvar _DEFAULT_OPEN_DELIMITER = '<';\nvar _DEFAULT_CLOSE_DELIMITER = '>';\nvar _DEFAULT_DELIMITER = '%';\nvar _DEFAULT_LOCALS_NAME = 'locals';\nvar _NAME = 'ejs';\nvar _REGEX_STRING = '(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)';\nvar _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compileDebug',\n  'client', '_with', 'rmWhitespace', 'strict', 'filename', 'async'];\n// We don't allow 'cache' option to be passed in the data obj for\n// the normal `render` call, but this is where Express 2 & 3 put it\n// so we make an exception for `renderFile`\nvar _OPTS_PASSABLE_WITH_DATA_EXPRESS = _OPTS_PASSABLE_WITH_DATA.concat('cache');\nvar _BOM = /^\\uFEFF/;\nvar _JS_IDENTIFIER = /^[a-zA-Z_$][0-9a-zA-Z_$]*$/;\n\n/**\n * EJS template function cache. This can be a LRU object from lru-cache NPM\n * module. By default, it is {@link module:utils.cache}, a simple in-process\n * cache that grows continuously.\n *\n * @type {Cache}\n */\n\nexports.cache = utils.cache;\n\n/**\n * Custom file loader. Useful for template preprocessing or restricting access\n * to a certain part of the filesystem.\n *\n * @type {fileLoader}\n */\n\nexports.fileLoader = fs.readFileSync;\n\n/**\n * Name of the object containing the locals.\n *\n * This variable is overridden by {@link Options}`.localsName` if it is not\n * `undefined`.\n *\n * @type {String}\n * @public\n */\n\nexports.localsName = _DEFAULT_LOCALS_NAME;\n\n/**\n * Promise implementation -- defaults to the native implementation if available\n * This is mostly just for testability\n *\n * @type {PromiseConstructorLike}\n * @public\n */\n\nexports.promiseImpl = (new Function('return this;'))().Promise;\n\n/**\n * Get the path to the included file from the parent file path and the\n * specified path.\n *\n * @param {String}  name     specified path\n * @param {String}  filename parent file path\n * @param {Boolean} [isDir=false] whether the parent file path is a directory\n * @return {String}\n */\nexports.resolveInclude = function(name, filename, isDir) {\n  var dirname = path.dirname;\n  var extname = path.extname;\n  var resolve = path.resolve;\n  var includePath = resolve(isDir ? filename : dirname(filename), name);\n  var ext = extname(name);\n  if (!ext) {\n    includePath += '.ejs';\n  }\n  return includePath;\n};\n\n/**\n * Try to resolve file path on multiple directories\n *\n * @param  {String}        name  specified path\n * @param  {Array<String>} paths list of possible parent directory paths\n * @return {String}\n */\nfunction resolvePaths(name, paths) {\n  var filePath;\n  if (paths.some(function (v) {\n    filePath = exports.resolveInclude(name, v, true);\n    return fs.existsSync(filePath);\n  })) {\n    return filePath;\n  }\n}\n\n/**\n * Get the path to the included file by Options\n *\n * @param  {String}  path    specified path\n * @param  {Options} options compilation options\n * @return {String}\n */\nfunction getIncludePath(path, options) {\n  var includePath;\n  var filePath;\n  var views = options.views;\n  var match = /^[A-Za-z]+:\\\\|^\\//.exec(path);\n\n  // Abs path\n  if (match && match.length) {\n    path = path.replace(/^\\/*/, '');\n    if (Array.isArray(options.root)) {\n      includePath = resolvePaths(path, options.root);\n    } else {\n      includePath = exports.resolveInclude(path, options.root || '/', true);\n    }\n  }\n  // Relative paths\n  else {\n    // Look relative to a passed filename first\n    if (options.filename) {\n      filePath = exports.resolveInclude(path, options.filename);\n      if (fs.existsSync(filePath)) {\n        includePath = filePath;\n      }\n    }\n    // Then look in any views directories\n    if (!includePath && Array.isArray(views)) {\n      includePath = resolvePaths(path, views);\n    }\n    if (!includePath && typeof options.includer !== 'function') {\n      throw new Error('Could not find the include file \"' +\n          options.escapeFunction(path) + '\"');\n    }\n  }\n  return includePath;\n}\n\n/**\n * Get the template from a string or a file, either compiled on-the-fly or\n * read from cache (if enabled), and cache the template if needed.\n *\n * If `template` is not set, the file specified in `options.filename` will be\n * read.\n *\n * If `options.cache` is true, this function reads the file from\n * `options.filename` so it must be set prior to calling this function.\n *\n * @memberof module:ejs-internal\n * @param {Options} options   compilation options\n * @param {String} [template] template source\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned.\n * @static\n */\n\nfunction handleCache(options, template) {\n  var func;\n  var filename = options.filename;\n  var hasTemplate = arguments.length > 1;\n\n  if (options.cache) {\n    if (!filename) {\n      throw new Error('cache option requires a filename');\n    }\n    func = exports.cache.get(filename);\n    if (func) {\n      return func;\n    }\n    if (!hasTemplate) {\n      template = fileLoader(filename).toString().replace(_BOM, '');\n    }\n  }\n  else if (!hasTemplate) {\n    // istanbul ignore if: should not happen at all\n    if (!filename) {\n      throw new Error('Internal EJS error: no file name or template '\n                    + 'provided');\n    }\n    template = fileLoader(filename).toString().replace(_BOM, '');\n  }\n  func = exports.compile(template, options);\n  if (options.cache) {\n    exports.cache.set(filename, func);\n  }\n  return func;\n}\n\n/**\n * Try calling handleCache with the given options and data and call the\n * callback with the result. If an error occurs, call the callback with\n * the error. Used by renderFile().\n *\n * @memberof module:ejs-internal\n * @param {Options} options    compilation options\n * @param {Object} data        template data\n * @param {RenderFileCallback} cb callback\n * @static\n */\n\nfunction tryHandleCache(options, data, cb) {\n  var result;\n  if (!cb) {\n    if (typeof exports.promiseImpl == 'function') {\n      return new exports.promiseImpl(function (resolve, reject) {\n        try {\n          result = handleCache(options)(data);\n          resolve(result);\n        }\n        catch (err) {\n          reject(err);\n        }\n      });\n    }\n    else {\n      throw new Error('Please provide a callback function');\n    }\n  }\n  else {\n    try {\n      result = handleCache(options)(data);\n    }\n    catch (err) {\n      return cb(err);\n    }\n\n    cb(null, result);\n  }\n}\n\n/**\n * fileLoader is independent\n *\n * @param {String} filePath ejs file path.\n * @return {String} The contents of the specified file.\n * @static\n */\n\nfunction fileLoader(filePath){\n  return exports.fileLoader(filePath);\n}\n\n/**\n * Get the template function.\n *\n * If `options.cache` is `true`, then the template is cached.\n *\n * @memberof module:ejs-internal\n * @param {String}  path    path for the specified file\n * @param {Options} options compilation options\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `options.client`, either type might be returned\n * @static\n */\n\nfunction includeFile(path, options) {\n  var opts = utils.shallowCopy(utils.createNullProtoObjWherePossible(), options);\n  opts.filename = getIncludePath(path, opts);\n  if (typeof options.includer === 'function') {\n    var includerResult = options.includer(path, opts.filename);\n    if (includerResult) {\n      if (includerResult.filename) {\n        opts.filename = includerResult.filename;\n      }\n      if (includerResult.template) {\n        return handleCache(opts, includerResult.template);\n      }\n    }\n  }\n  return handleCache(opts);\n}\n\n/**\n * Re-throw the given `err` in context to the `str` of ejs, `filename`, and\n * `lineno`.\n *\n * @implements {RethrowCallback}\n * @memberof module:ejs-internal\n * @param {Error}  err      Error object\n * @param {String} str      EJS source\n * @param {String} flnm     file name of the EJS file\n * @param {Number} lineno   line number of the error\n * @param {EscapeCallback} esc\n * @static\n */\n\nfunction rethrow(err, str, flnm, lineno, esc) {\n  var lines = str.split('\\n');\n  var start = Math.max(lineno - 3, 0);\n  var end = Math.min(lines.length, lineno + 3);\n  var filename = esc(flnm);\n  // Error context\n  var context = lines.slice(start, end).map(function (line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n\n  throw err;\n}\n\nfunction stripSemi(str){\n  return str.replace(/;(\\s*$)/, '$1');\n}\n\n/**\n * Compile the given `str` of ejs into a template function.\n *\n * @param {String}  template EJS template\n *\n * @param {Options} [opts] compilation options\n *\n * @return {(TemplateFunction|ClientFunction)}\n * Depending on the value of `opts.client`, either type might be returned.\n * Note that the return type of the function also depends on the value of `opts.async`.\n * @public\n */\n\nexports.compile = function compile(template, opts) {\n  var templ;\n\n  // v1 compat\n  // 'scope' is 'context'\n  // FIXME: Remove this in a future version\n  if (opts && opts.scope) {\n    if (!scopeOptionWarned){\n      console.warn('`scope` option is deprecated and will be removed in EJS 3');\n      scopeOptionWarned = true;\n    }\n    if (!opts.context) {\n      opts.context = opts.scope;\n    }\n    delete opts.scope;\n  }\n  templ = new Template(template, opts);\n  return templ.compile();\n};\n\n/**\n * Render the given `template` of ejs.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}   template EJS template\n * @param {Object}  [data={}] template data\n * @param {Options} [opts={}] compilation and rendering options\n * @return {(String|Promise<String>)}\n * Return value type depends on `opts.async`.\n * @public\n */\n\nexports.render = function (template, d, o) {\n  var data = d || utils.createNullProtoObjWherePossible();\n  var opts = o || utils.createNullProtoObjWherePossible();\n\n  // No options object -- if there are optiony names\n  // in the data, copy them to options\n  if (arguments.length == 2) {\n    utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA);\n  }\n\n  return handleCache(opts, template)(data);\n};\n\n/**\n * Render an EJS file at the given `path` and callback `cb(err, str)`.\n *\n * If you would like to include options but not data, you need to explicitly\n * call this function with `data` being an empty object or `null`.\n *\n * @param {String}             path     path to the EJS file\n * @param {Object}            [data={}] template data\n * @param {Options}           [opts={}] compilation and rendering options\n * @param {RenderFileCallback} cb callback\n * @public\n */\n\nexports.renderFile = function () {\n  var args = Array.prototype.slice.call(arguments);\n  var filename = args.shift();\n  var cb;\n  var opts = {filename: filename};\n  var data;\n  var viewOpts;\n\n  // Do we have a callback?\n  if (typeof arguments[arguments.length - 1] == 'function') {\n    cb = args.pop();\n  }\n  // Do we have data/opts?\n  if (args.length) {\n    // Should always have data obj\n    data = args.shift();\n    // Normal passed opts (data obj + opts obj)\n    if (args.length) {\n      // Use shallowCopy so we don't pollute passed in opts obj with new vals\n      utils.shallowCopy(opts, args.pop());\n    }\n    // Special casing for Express (settings + opts-in-data)\n    else {\n      // Express 3 and 4\n      if (data.settings) {\n        // Pull a few things from known locations\n        if (data.settings.views) {\n          opts.views = data.settings.views;\n        }\n        if (data.settings['view cache']) {\n          opts.cache = true;\n        }\n        // Undocumented after Express 2, but still usable, esp. for\n        // items that are unsafe to be passed along with data, like `root`\n        viewOpts = data.settings['view options'];\n        if (viewOpts) {\n          utils.shallowCopy(opts, viewOpts);\n        }\n      }\n      // Express 2 and lower, values set in app.locals, or people who just\n      // want to pass options in their data. NOTE: These values will override\n      // anything previously set in settings  or settings['view options']\n      utils.shallowCopyFromList(opts, data, _OPTS_PASSABLE_WITH_DATA_EXPRESS);\n    }\n    opts.filename = filename;\n  }\n  else {\n    data = utils.createNullProtoObjWherePossible();\n  }\n\n  return tryHandleCache(opts, data, cb);\n};\n\n/**\n * Clear intermediate JavaScript cache. Calls {@link Cache#reset}.\n * @public\n */\n\n/**\n * EJS template class\n * @public\n */\nexports.Template = Template;\n\nexports.clearCache = function () {\n  exports.cache.reset();\n};\n\nfunction Template(text, opts) {\n  opts = opts || utils.createNullProtoObjWherePossible();\n  var options = utils.createNullProtoObjWherePossible();\n  this.templateText = text;\n  /** @type {string | null} */\n  this.mode = null;\n  this.truncate = false;\n  this.currentLine = 1;\n  this.source = '';\n  options.client = opts.client || false;\n  options.escapeFunction = opts.escape || opts.escapeFunction || utils.escapeXML;\n  options.compileDebug = opts.compileDebug !== false;\n  options.debug = !!opts.debug;\n  options.filename = opts.filename;\n  options.openDelimiter = opts.openDelimiter || exports.openDelimiter || _DEFAULT_OPEN_DELIMITER;\n  options.closeDelimiter = opts.closeDelimiter || exports.closeDelimiter || _DEFAULT_CLOSE_DELIMITER;\n  options.delimiter = opts.delimiter || exports.delimiter || _DEFAULT_DELIMITER;\n  options.strict = opts.strict || false;\n  options.context = opts.context;\n  options.cache = opts.cache || false;\n  options.rmWhitespace = opts.rmWhitespace;\n  options.root = opts.root;\n  options.includer = opts.includer;\n  options.outputFunctionName = opts.outputFunctionName;\n  options.localsName = opts.localsName || exports.localsName || _DEFAULT_LOCALS_NAME;\n  options.views = opts.views;\n  options.async = opts.async;\n  options.destructuredLocals = opts.destructuredLocals;\n  options.legacyInclude = typeof opts.legacyInclude != 'undefined' ? !!opts.legacyInclude : true;\n\n  if (options.strict) {\n    options._with = false;\n  }\n  else {\n    options._with = typeof opts._with != 'undefined' ? opts._with : true;\n  }\n\n  this.opts = options;\n\n  this.regex = this.createRegex();\n}\n\nTemplate.modes = {\n  EVAL: 'eval',\n  ESCAPED: 'escaped',\n  RAW: 'raw',\n  COMMENT: 'comment',\n  LITERAL: 'literal'\n};\n\nTemplate.prototype = {\n  createRegex: function () {\n    var str = _REGEX_STRING;\n    var delim = utils.escapeRegExpChars(this.opts.delimiter);\n    var open = utils.escapeRegExpChars(this.opts.openDelimiter);\n    var close = utils.escapeRegExpChars(this.opts.closeDelimiter);\n    str = str.replace(/%/g, delim)\n      .replace(/</g, open)\n      .replace(/>/g, close);\n    return new RegExp(str);\n  },\n\n  compile: function () {\n    /** @type {string} */\n    var src;\n    /** @type {ClientFunction} */\n    var fn;\n    var opts = this.opts;\n    var prepended = '';\n    var appended = '';\n    /** @type {EscapeCallback} */\n    var escapeFn = opts.escapeFunction;\n    /** @type {FunctionConstructor} */\n    var ctor;\n    /** @type {string} */\n    var sanitizedFilename = opts.filename ? JSON.stringify(opts.filename) : 'undefined';\n\n    if (!this.source) {\n      this.generateSource();\n      prepended +=\n        '  var __output = \"\";\\n' +\n        '  function __append(s) { if (s !== undefined && s !== null) __output += s }\\n';\n      if (opts.outputFunctionName) {\n        if (!_JS_IDENTIFIER.test(opts.outputFunctionName)) {\n          throw new Error('outputFunctionName is not a valid JS identifier.');\n        }\n        prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\\n';\n      }\n      if (opts.localsName && !_JS_IDENTIFIER.test(opts.localsName)) {\n        throw new Error('localsName is not a valid JS identifier.');\n      }\n      if (opts.destructuredLocals && opts.destructuredLocals.length) {\n        var destructuring = '  var __locals = (' + opts.localsName + ' || {}),\\n';\n        for (var i = 0; i < opts.destructuredLocals.length; i++) {\n          var name = opts.destructuredLocals[i];\n          if (!_JS_IDENTIFIER.test(name)) {\n            throw new Error('destructuredLocals[' + i + '] is not a valid JS identifier.');\n          }\n          if (i > 0) {\n            destructuring += ',\\n  ';\n          }\n          destructuring += name + ' = __locals.' + name;\n        }\n        prepended += destructuring + ';\\n';\n      }\n      if (opts._with !== false) {\n        prepended +=  '  with (' + opts.localsName + ' || {}) {' + '\\n';\n        appended += '  }' + '\\n';\n      }\n      appended += '  return __output;' + '\\n';\n      this.source = prepended + this.source + appended;\n    }\n\n    if (opts.compileDebug) {\n      src = 'var __line = 1' + '\\n'\n        + '  , __lines = ' + JSON.stringify(this.templateText) + '\\n'\n        + '  , __filename = ' + sanitizedFilename + ';' + '\\n'\n        + 'try {' + '\\n'\n        + this.source\n        + '} catch (e) {' + '\\n'\n        + '  rethrow(e, __lines, __filename, __line, escapeFn);' + '\\n'\n        + '}' + '\\n';\n    }\n    else {\n      src = this.source;\n    }\n\n    if (opts.client) {\n      src = 'escapeFn = escapeFn || ' + escapeFn.toString() + ';' + '\\n' + src;\n      if (opts.compileDebug) {\n        src = 'rethrow = rethrow || ' + rethrow.toString() + ';' + '\\n' + src;\n      }\n    }\n\n    if (opts.strict) {\n      src = '\"use strict\";\\n' + src;\n    }\n    if (opts.debug) {\n      console.log(src);\n    }\n    if (opts.compileDebug && opts.filename) {\n      src = src + '\\n'\n        + '//# sourceURL=' + sanitizedFilename + '\\n';\n    }\n\n    try {\n      if (opts.async) {\n        // Have to use generated function for this, since in envs without support,\n        // it breaks in parsing\n        try {\n          ctor = (new Function('return (async function(){}).constructor;'))();\n        }\n        catch(e) {\n          if (e instanceof SyntaxError) {\n            throw new Error('This environment does not support async/await');\n          }\n          else {\n            throw e;\n          }\n        }\n      }\n      else {\n        ctor = Function;\n      }\n      fn = new ctor(opts.localsName + ', escapeFn, include, rethrow', src);\n    }\n    catch(e) {\n      // istanbul ignore else\n      if (e instanceof SyntaxError) {\n        if (opts.filename) {\n          e.message += ' in ' + opts.filename;\n        }\n        e.message += ' while compiling ejs\\n\\n';\n        e.message += 'If the above error is not helpful, you may want to try EJS-Lint:\\n';\n        e.message += 'https://github.com/RyanZim/EJS-Lint';\n        if (!opts.async) {\n          e.message += '\\n';\n          e.message += 'Or, if you meant to create an async function, pass `async: true` as an option.';\n        }\n      }\n      throw e;\n    }\n\n    // Return a callable function which will execute the function\n    // created by the source-code, with the passed data as locals\n    // Adds a local `include` function which allows full recursive include\n    var returnedFn = opts.client ? fn : function anonymous(data) {\n      var include = function (path, includeData) {\n        var d = utils.shallowCopy(utils.createNullProtoObjWherePossible(), data);\n        if (includeData) {\n          d = utils.shallowCopy(d, includeData);\n        }\n        return includeFile(path, opts)(d);\n      };\n      return fn.apply(opts.context,\n        [data || utils.createNullProtoObjWherePossible(), escapeFn, include, rethrow]);\n    };\n    if (opts.filename && typeof Object.defineProperty === 'function') {\n      var filename = opts.filename;\n      var basename = path.basename(filename, path.extname(filename));\n      try {\n        Object.defineProperty(returnedFn, 'name', {\n          value: basename,\n          writable: false,\n          enumerable: false,\n          configurable: true\n        });\n      } catch (e) {/* ignore */}\n    }\n    return returnedFn;\n  },\n\n  generateSource: function () {\n    var opts = this.opts;\n\n    if (opts.rmWhitespace) {\n      // Have to use two separate replace here as `^` and `$` operators don't\n      // work well with `\\r` and empty lines don't work well with the `m` flag.\n      this.templateText =\n        this.templateText.replace(/[\\r\\n]+/g, '\\n').replace(/^\\s+|\\s+$/gm, '');\n    }\n\n    // Slurp spaces and tabs before <%_ and after _%>\n    this.templateText =\n      this.templateText.replace(/[ \\t]*<%_/gm, '<%_').replace(/_%>[ \\t]*/gm, '_%>');\n\n    var self = this;\n    var matches = this.parseTemplateText();\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n\n    if (matches && matches.length) {\n      matches.forEach(function (line, index) {\n        var closing;\n        // If this is an opening tag, check for closing tags\n        // FIXME: May end up with some false positives here\n        // Better to store modes as k/v with openDelimiter + delimiter as key\n        // Then this can simply check against the map\n        if ( line.indexOf(o + d) === 0        // If it is a tag\n          && line.indexOf(o + d + d) !== 0) { // and is not escaped\n          closing = matches[index + 2];\n          if (!(closing == d + c || closing == '-' + d + c || closing == '_' + d + c)) {\n            throw new Error('Could not find matching close tag for \"' + line + '\".');\n          }\n        }\n        self.scanLine(line);\n      });\n    }\n\n  },\n\n  parseTemplateText: function () {\n    var str = this.templateText;\n    var pat = this.regex;\n    var result = pat.exec(str);\n    var arr = [];\n    var firstPos;\n\n    while (result) {\n      firstPos = result.index;\n\n      if (firstPos !== 0) {\n        arr.push(str.substring(0, firstPos));\n        str = str.slice(firstPos);\n      }\n\n      arr.push(result[0]);\n      str = str.slice(result[0].length);\n      result = pat.exec(str);\n    }\n\n    if (str) {\n      arr.push(str);\n    }\n\n    return arr;\n  },\n\n  _addOutput: function (line) {\n    if (this.truncate) {\n      // Only replace single leading linebreak in the line after\n      // -%> tag -- this is the single, trailing linebreak\n      // after the tag that the truncation mode replaces\n      // Handle Win / Unix / old Mac linebreaks -- do the \\r\\n\n      // combo first in the regex-or\n      line = line.replace(/^(?:\\r\\n|\\r|\\n)/, '');\n      this.truncate = false;\n    }\n    if (!line) {\n      return line;\n    }\n\n    // Preserve literal slashes\n    line = line.replace(/\\\\/g, '\\\\\\\\');\n\n    // Convert linebreaks\n    line = line.replace(/\\n/g, '\\\\n');\n    line = line.replace(/\\r/g, '\\\\r');\n\n    // Escape double-quotes\n    // - this will be the delimiter during execution\n    line = line.replace(/\"/g, '\\\\\"');\n    this.source += '    ; __append(\"' + line + '\")' + '\\n';\n  },\n\n  scanLine: function (line) {\n    var self = this;\n    var d = this.opts.delimiter;\n    var o = this.opts.openDelimiter;\n    var c = this.opts.closeDelimiter;\n    var newLineCount = 0;\n\n    newLineCount = (line.split('\\n').length - 1);\n\n    switch (line) {\n    case o + d:\n    case o + d + '_':\n      this.mode = Template.modes.EVAL;\n      break;\n    case o + d + '=':\n      this.mode = Template.modes.ESCAPED;\n      break;\n    case o + d + '-':\n      this.mode = Template.modes.RAW;\n      break;\n    case o + d + '#':\n      this.mode = Template.modes.COMMENT;\n      break;\n    case o + d + d:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(o + d + d, o + d) + '\")' + '\\n';\n      break;\n    case d + d + c:\n      this.mode = Template.modes.LITERAL;\n      this.source += '    ; __append(\"' + line.replace(d + d + c, d + c) + '\")' + '\\n';\n      break;\n    case d + c:\n    case '-' + d + c:\n    case '_' + d + c:\n      if (this.mode == Template.modes.LITERAL) {\n        this._addOutput(line);\n      }\n\n      this.mode = null;\n      this.truncate = line.indexOf('-') === 0 || line.indexOf('_') === 0;\n      break;\n    default:\n      // In script mode, depends on type of tag\n      if (this.mode) {\n        // If '//' is found without a line break, add a line break.\n        switch (this.mode) {\n        case Template.modes.EVAL:\n        case Template.modes.ESCAPED:\n        case Template.modes.RAW:\n          if (line.lastIndexOf('//') > line.lastIndexOf('\\n')) {\n            line += '\\n';\n          }\n        }\n        switch (this.mode) {\n        // Just executing code\n        case Template.modes.EVAL:\n          this.source += '    ; ' + line + '\\n';\n          break;\n          // Exec, esc, and output\n        case Template.modes.ESCAPED:\n          this.source += '    ; __append(escapeFn(' + stripSemi(line) + '))' + '\\n';\n          break;\n          // Exec and output\n        case Template.modes.RAW:\n          this.source += '    ; __append(' + stripSemi(line) + ')' + '\\n';\n          break;\n        case Template.modes.COMMENT:\n          // Do nothing\n          break;\n          // Literal <%% mode, append as raw output\n        case Template.modes.LITERAL:\n          this._addOutput(line);\n          break;\n        }\n      }\n      // In string mode, just add the output\n      else {\n        this._addOutput(line);\n      }\n    }\n\n    if (self.opts.compileDebug && newLineCount) {\n      this.currentLine += newLineCount;\n      this.source += '    ; __line = ' + this.currentLine + '\\n';\n    }\n  }\n};\n\n/**\n * Escape characters reserved in XML.\n *\n * This is simply an export of {@link module:utils.escapeXML}.\n *\n * If `markup` is `undefined` or `null`, the empty string is returned.\n *\n * @param {String} markup Input string\n * @return {String} Escaped string\n * @public\n * @func\n * */\nexports.escapeXML = utils.escapeXML;\n\n/**\n * Express.js support.\n *\n * This is an alias for {@link module:ejs.renderFile}, in order to support\n * Express.js out-of-the-box.\n *\n * @func\n */\n\nexports.__express = exports.renderFile;\n\n/**\n * Version of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.VERSION = _VERSION_STRING;\n\n/**\n * Name for detection of EJS.\n *\n * @readonly\n * @type {String}\n * @public\n */\n\nexports.name = _NAME;\n\n/* istanbul ignore if */\nif (typeof window != 'undefined') {\n  window.ejs = exports;\n}\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n  object = parent(object, path);\n\n  var key = toKey(last(path));\n  return !(object != null && hasOwnProperty.call(object, key)) || delete object[key];\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nmodule.exports = unset;\n", "import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;", "import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;", "/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n", "'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n", "import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n", "import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n", "export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "'use strict';\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n", "'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, strictNumbers, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data +\n                           (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    case 'number': return '(typeof ' + data + EQUAL + '\"' + dataType + '\"' +\n                          (strictNumbers ? (AND + OK + 'isFinite(' + data + ')') : '') + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data, strictNumbers) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, strictNumbers, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, strictNumbers, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n  for (var key in schema) if (!rules[key]) return key;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/([^\\\\])' \\+ '/g, '$1');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n", "'use strict';\n\nvar util = require('./util');\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n", "'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n", "'use strict';\n\nvar URI = require('uri-js')\n  , equal = require('fast-deep-equal')\n  , util = require('./util')\n  , SchemaObject = require('./schema_obj')\n  , traverse = require('json-schema-traverse');\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = URI.parse(ref)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (Object.keys(root.schema).length === 0 || refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.fragment = parsedRef.fragment || '';\n  if (parsedRef.fragment.slice(0,1) != '/') return;\n  var parts = parsedRef.fragment.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = URI.parse(id);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  return URI.serialize(p).split('#')[0] + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return URI.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n", "'use strict';\n\nvar resolve = require('./resolve');\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n", "'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n", "'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);\n      else throw new Error($keywordsMsg);\n    }\n  }\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [\"\"];\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n      else throw new Error($defaultMsg);\n    }\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, it.opts.strictNumbers, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; var ' + ($coerced) + ' = undefined; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ') && ' + ($data) + '.length == 1) { ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + '; if (' + (it.util.checkDataType(it.schema.type, $data, it.opts.strictNumbers)) + ') ' + ($coerced) + ' = ' + ($data) + '; } ';\n        }\n        out += ' if (' + ($coerced) + ' !== undefined) ; ';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($type == 'string') {\n              out += ' else if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' else if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' else if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' else if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' else if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' else {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } if (' + ($coerced) + ' !== undefined) {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data, it.opts.strictNumbers)) + ') { ';\n          }\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n", "'use strict';\n\nvar resolve = require('./resolve')\n  , util = require('./util')\n  , errorClasses = require('./error_classes')\n  , stableStringify = require('fast-json-stable-stringify');\n\nvar validateGenerator = require('../dotjs/validate');\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar ucs2length = util.ucs2length;\nvar equal = require('fast-deep-equal');\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var validate = compilation.validate;\n    var result = validate.apply(this, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      logger: self.logger,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode, _schema);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      self.logger.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v === undefined) {\n      removeLocalRef(ref);\n    } else {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function removeLocalRef(ref) {\n    delete refs[ref];\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && !!refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    if (self._opts.validateSchema !== false) {\n      var deps = rule.definition.dependencies;\n      if (deps && !deps.every(function(keyword) {\n        return Object.prototype.hasOwnProperty.call(parentSchema, keyword);\n      }))\n        throw new Error('parent schema must have all required keywords: ' + deps.join(','));\n\n      var validateSchema = rule.definition.validateSchema;\n      if (validateSchema) {\n        var valid = validateSchema(schema);\n        if (!valid) {\n          var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n          if (self._opts.validateSchema == 'log') self.logger.error(message);\n          else throw new Error(message);\n        }\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n", "'use strict';\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n", "'use strict';\n\nvar util = require('./util');\n\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nvar HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-)*(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-)*(?:[0-9a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[a-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nvar JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: HOSTNAME,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction isLeapYear(year) {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var year = +matches[1];\n  var month = +matches[2];\n  var day = +matches[3];\n\n  return month >= 1 && month <= 12 && day >= 1 &&\n          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return ((hour <= 23 && minute <= 59 && second <= 59) ||\n          (hour == 23 && minute == 59 && second == 60)) &&\n         (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n", "'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return (it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all));\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_comment(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $comment = it.util.toQuotedString($schema);\n  if (it.opts.$comment === true) {\n    out += ' console.log(' + ($comment) + ');';\n  } else if (typeof it.opts.$comment == 'function') {\n    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = (it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all));\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    if ($property == '__proto__') continue;\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_if(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $thenSch = it.schema['then'],\n    $elseSch = it.schema['else'],\n    $thenPresent = $thenSch !== undefined && (it.opts.strictKeywords ? (typeof $thenSch == 'object' && Object.keys($thenSch).length > 0) || $thenSch === false : it.util.schemaHasRules($thenSch, it.RULES.all)),\n    $elsePresent = $elseSch !== undefined && (it.opts.strictKeywords ? (typeof $elseSch == 'object' && Object.keys($elseSch).length > 0) || $elseSch === false : it.util.schemaHasRules($elseSch, it.RULES.all)),\n    $currentBaseId = $it.baseId;\n  if ($thenPresent || $elsePresent) {\n    var $ifClause;\n    $it.createErrors = false;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    out += '  ' + (it.validate($it)) + ' ';\n    $it.baseId = $currentBaseId;\n    $it.createErrors = true;\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    if ($thenPresent) {\n      out += ' if (' + ($nextValid) + ') {  ';\n      $it.schema = it.schema['then'];\n      $it.schemaPath = it.schemaPath + '.then';\n      $it.errSchemaPath = it.errSchemaPath + '/then';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'then\\'; ';\n      } else {\n        $ifClause = '\\'then\\'';\n      }\n      out += ' } ';\n      if ($elsePresent) {\n        out += ' else { ';\n      }\n    } else {\n      out += ' if (!' + ($nextValid) + ') { ';\n    }\n    if ($elsePresent) {\n      $it.schema = it.schema['else'];\n      $it.schemaPath = it.schemaPath + '.else';\n      $it.errSchemaPath = it.errSchemaPath + '/else';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'else\\'; ';\n      } else {\n        $ifClause = '\\'else\\'';\n      }\n      out += ' } ';\n    }\n    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('if') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match \"\\' + ' + ($ifClause) + ' + \\'\" schema\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' }   ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && (it.opts.strictKeywords ? (typeof $additionalItems == 'object' && Object.keys($additionalItems).length > 0) || $additionalItems === false : it.util.schemaHasRules($additionalItems, it.RULES.all))) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if (!($isData || typeof $schema == 'number' || $schema === undefined)) {\n    throw new Error($keyword + ' must be number');\n  }\n  if (!($isDataExcl || $schemaExcl === undefined || typeof $schemaExcl == 'number' || typeof $schemaExcl == 'boolean')) {\n    throw new Error($exclusiveKeyword + ' must be number or boolean');\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!($isData || typeof $schema == 'number')) {\n    throw new Error($keyword + ' must be number');\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $prevValid = 'prevValid' + $lvl,\n    $passingSchemas = 'passingSchemas' + $lvl;\n  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}).filter(notProto),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties).filter(notProto),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) {\n    var $requiredHash = it.util.toHash($required);\n  }\n\n  function notProto(p) {\n    return p !== '__proto__';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if ((it.opts.strictKeywords ? (typeof $sch == 'object' && Object.keys($sch).length > 0) || $sch === false : it.util.schemaHasRules($sch, it.RULES.all))) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;';\n  if ((it.opts.strictKeywords ? (typeof $schema == 'object' && Object.keys($schema).length > 0) || $schema === false : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && (it.opts.strictKeywords ? (typeof $propertySch == 'object' && Object.keys($propertySch).length > 0) || $propertySch === false : it.util.schemaHasRules($propertySch, it.RULES.all)))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n", "'use strict';\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + (it.util[$method]($itemType, 'item', it.opts.strictNumbers, true)) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\n\n//all requires must be explicit because browserify won't work with dynamic requires\nmodule.exports = {\n  '$ref': require('./ref'),\n  allOf: require('./allOf'),\n  anyOf: require('./anyOf'),\n  '$comment': require('./comment'),\n  const: require('./const'),\n  contains: require('./contains'),\n  dependencies: require('./dependencies'),\n  'enum': require('./enum'),\n  format: require('./format'),\n  'if': require('./if'),\n  items: require('./items'),\n  maximum: require('./_limit'),\n  minimum: require('./_limit'),\n  maxItems: require('./_limitItems'),\n  minItems: require('./_limitItems'),\n  maxLength: require('./_limitLength'),\n  minLength: require('./_limitLength'),\n  maxProperties: require('./_limitProperties'),\n  minProperties: require('./_limitProperties'),\n  multipleOf: require('./multipleOf'),\n  not: require('./not'),\n  oneOf: require('./oneOf'),\n  pattern: require('./pattern'),\n  properties: require('./properties'),\n  propertyNames: require('./propertyNames'),\n  required: require('./required'),\n  uniqueItems: require('./uniqueItems'),\n  validate: require('./validate')\n};\n", "'use strict';\n\nvar ruleModules = require('../dotjs')\n  , toHash = require('./util').toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\n  ];\n\n  var ALL = [ 'type', '$comment' ];\n  var KEYWORDS = [\n    '$schema', '$id', 'id', '$data', '$async', 'title',\n    'description', 'default', 'definitions',\n    'examples', 'readOnly', 'writeOnly',\n    'contentMediaType', 'contentEncoding',\n    'additionalItems', 'then', 'else'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n", "'use strict';\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n", "'use strict';\n\nvar MissingRefError = require('./error_classes').MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n", "'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n", "'use strict';\n\nvar metaSchema = require('./refs/json-schema-draft-07.json');\n\nmodule.exports = {\n  $id: 'https://github.com/ajv-validator/ajv/blob/master/lib/definition_schema.js',\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {not: {required: ['macro']}}\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {type: 'boolean'},\n    statements: {type: 'boolean'},\n    dependencies: {\n      type: 'array',\n      items: {type: 'string'}\n    },\n    metaSchema: {type: 'object'},\n    modifying: {type: 'boolean'},\n    valid: {type: 'boolean'},\n    $data: {type: 'boolean'},\n    async: {type: 'boolean'},\n    errors: {\n      anyOf: [\n        {type: 'boolean'},\n        {const: 'full'}\n      ]\n    }\n  }\n};\n", "'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\nvar definitionSchema = require('./definition_schema');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword,\n  validate: validateKeyword\n};\n\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    this.validateKeyword(definition, true);\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      for (var i=0; i<dataType.length; i++)\n        _addRule(keyword, dataType[i], definition);\n    } else {\n      _addRule(keyword, dataType, definition);\n    }\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if (definition.$data && this._opts.$data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\n\n/**\n * Validate keyword definition\n * @this  Ajv\n * @param {Object} definition keyword definition object.\n * @param {Boolean} throwError true to throw exception if definition is invalid\n * @return {boolean} validation result\n */\nfunction validateKeyword(definition, throwError) {\n  validateKeyword.errors = null;\n  var v = this._validateKeyword = this._validateKeyword\n                                  || this.compile(definitionSchema, true);\n\n  if (v(definition)) return true;\n  validateKeyword.errors = v.errors;\n  if (throwError)\n    throw new Error('custom keyword definition is invalid: '  + this.errorsText(v.errors));\n  else\n    return false;\n}\n", "'use strict';\n\nvar compileSchema = require('./compile')\n  , resolve = require('./compile/resolve')\n  , Cache = require('./cache')\n  , SchemaObject = require('./compile/schema_obj')\n  , stableStringify = require('fast-json-stable-stringify')\n  , formats = require('./compile/formats')\n  , rules = require('./compile/rules')\n  , $dataMetaSchema = require('./data')\n  , util = require('./compile/util');\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = require('./compile/async');\nvar customKeyword = require('./keyword');\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\nAjv.prototype.validateKeyword = customKeyword.validate;\n\nvar errorClasses = require('./compile/error_classes');\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes', 'strictDefaults' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  setLogger(this);\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  if (opts.keywords) addInitialKeywords(this);\n  addDefaultMetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  if (opts.nullable) this.addKeyword('nullable', {metaSchema: {type: 'boolean'}});\n  addInitialSchemas(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async !== true) this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n * @return {Ajv} this for method chaining\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return this;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n  return this;\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n * @return {Ajv} this for method chaining\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n  return this;\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    this.logger.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var valid = this.validate($schema, schema);\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') this.logger.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n * @return {Ajv} this for method chaining\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return this;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return this;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return this;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n  return this;\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  catch(e) {\n    delete schemaObj.validate;\n    throw e;\n  }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(this, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case 'auto': return _get$IdOrId;\n    case 'id': return _getId;\n    default: return _get$Id;\n  }\n}\n\n/* @this   Ajv */\nfunction _getId(schema) {\n  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n/* @this   Ajv */\nfunction _get$Id(schema) {\n  if (schema.id) this.logger.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n * @return {Ajv} this for method chaining\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n  return this;\n}\n\n\nfunction addDefaultMetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = require('./refs/data.json');\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = require('./refs/json-schema-draft-07.json');\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction addInitialKeywords(self) {\n  for (var name in self._opts.keywords) {\n    var keyword = self._opts.keywords[name];\n    self.addKeyword(name, keyword);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n\n\nfunction setLogger(self) {\n  var logger = self._opts.logger;\n  if (logger === false) {\n    self.logger = {log: noop, warn: noop, error: noop};\n  } else {\n    if (logger === undefined) logger = console;\n    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n      throw new Error('logger must implement log, warn and error methods');\n    self.logger = logger;\n  }\n}\n\n\nfunction noop() {}\n", "export * from './api';\nexport * from './extensionLogger';\nexport * from './project';\nexport * from './specification/schemaAccess';\n\nexport * from '@sap/ux-specification-types';\n", "/**\n * This file implements the interface 'Specification' from ./types and serves as API to specification\n */\nimport { FioriElementsVersion, SchemaType, TemplateType, CustomExtensionType } from '@sap/ux-specification-types';\nimport type {\n    CustomExtensionData,\n    ExportResults,\n    File,\n    GenerateSchemaParameters,\n    ExportConfigParameters,\n    ImportConfigParameters,\n    ImportProjectParameters,\n    ApiVersion,\n    UI5Version,\n    GenerateCustomExtensionParams\n} from '@sap/ux-specification-types';\nimport {\n    generateListReportInterfaceV2,\n    generateObjectPageInterfaceV2,\n    generateOVPInterfaceV2,\n    generateAnalyticalListPageInterfaceV2\n} from './sync/v2/generate';\nimport {\n    generateFreestyleInterfaceV4,\n    generateListReportInterfaceV4,\n    generateObjectPageInterfaceV4\n} from './sync/v4/generate';\nimport { exportPageV2 } from './sync/v2/export/exportPage';\nimport {\n    createListReportConfig as createListReportConfigV2,\n    createObjectPageConfigV2,\n    createOverviewPageConfig as createOverviewPageConfigV2,\n    createAnalyticalListPageConfig as createAnalyticalListPageConfigV2\n} from './sync/v2/import';\nimport { exportPageV4 } from './sync/v4/export/export';\nimport { createListReportConfig as createListReportConfigV4, createObjectPageConfigV4 } from './sync/v4/import';\nimport { importProjectSchemaAndConfig, importProjectSchema as importProjectSchemaOnly } from './sync/common';\nimport type { Editor } from 'mem-fs-editor';\nimport {\n    enableFPM,\n    generateControllerExtension,\n    generateCustomAction,\n    generateCustomColumn,\n    generateCustomPage,\n    generateCustomSection,\n    generateCustomView,\n    generateObjectPage\n} from '@sap-ux/fe-fpm-writer';\n\nconst FPMWriterMap = new Map<CustomExtensionType, (basePath: string, data: CustomExtensionData, fs?: Editor) => Editor>(\n    [\n        [CustomExtensionType.CustomPage, generateCustomPage],\n        [CustomExtensionType.CustomColumn, generateCustomColumn],\n        [CustomExtensionType.CustomSection, generateCustomSection],\n        [CustomExtensionType.ObjectPage, generateObjectPage],\n        [CustomExtensionType.CustomAction, generateCustomAction],\n        [CustomExtensionType.CustomView, generateCustomView],\n        [CustomExtensionType.ControllerExtension, generateControllerExtension]\n    ]\n);\n\n/**\n * Return the generic (project independent) JSON schema\n * @param specification - reference to spec\n * @param version - Fiori elements version (v2 or v4)\n * @param schemaType - type of the schema, e.g. ListReport, ObjectPage\n */\nexport { getGenericSchema } from './specification/schemaAccess';\n\n/**\n * Generate JSON schema for a given Fiori elements version and page type\n * @param generateParameters: the input structure that contains the version, schema type, and parameters\n */\nexport function generateSchema(generateParameters: GenerateSchemaParameters): object {\n    let schema: object;\n    if (generateParameters[FioriElementsVersion.v2]) {\n        /**\n         * Handle v2 schema generation\n         */\n        const v2Params = generateParameters[FioriElementsVersion.v2];\n        if (v2Params[SchemaType.ListReport]) {\n            const { genericSchema, entitySet, annotations, manifest, fragments, logger } =\n                v2Params[SchemaType.ListReport];\n            schema = generateListReportInterfaceV2(genericSchema, entitySet, annotations, manifest, fragments, logger);\n        } else if (v2Params[SchemaType.ObjectPage]) {\n            const { genericSchema, entitySet, annotations, manifest, fragments, logger } =\n                v2Params[SchemaType.ObjectPage];\n            schema = generateObjectPageInterfaceV2(genericSchema, entitySet, annotations, manifest, fragments, logger);\n        } else if (v2Params[SchemaType.OverviewPage]) {\n            const { genericSchema, manifest } = v2Params[SchemaType.OverviewPage];\n            schema = generateOVPInterfaceV2(genericSchema, manifest);\n        } else if (v2Params[SchemaType.AnalyticalListPage]) {\n            const { genericSchema, entitySet, annotations, manifest, fragments, logger } =\n                v2Params[SchemaType.AnalyticalListPage];\n            schema = generateAnalyticalListPageInterfaceV2(\n                genericSchema,\n                entitySet,\n                annotations,\n                manifest,\n                fragments,\n                logger\n            );\n        }\n    } else if (generateParameters[FioriElementsVersion.v4]) {\n        /**\n         * Handle v4 schema generation\n         */\n        const v4Params = generateParameters[FioriElementsVersion.v4];\n        if (v4Params[SchemaType.ListReport]) {\n            const { genericSchema, entitySet, annotations, logger, manifest } = v4Params[SchemaType.ListReport];\n            schema = generateListReportInterfaceV4(\n                TemplateType.ListReportObjectPageV4,\n                genericSchema,\n                entitySet,\n                annotations,\n                logger,\n                manifest\n            );\n        } else if (v4Params[SchemaType.ObjectPage]) {\n            const { genericSchema, entitySet, annotations, manifest, logger, fragments } =\n                v4Params[SchemaType.ObjectPage];\n            schema = generateObjectPageInterfaceV4(genericSchema, entitySet, annotations, manifest, logger, fragments);\n        } else if (v4Params[SchemaType.AnalyticalListPage]) {\n            const { genericSchema, entitySet, annotations, logger, manifest } = v4Params[SchemaType.AnalyticalListPage];\n            //As of now, the LR logic can also be applied to ALP\n            schema = generateListReportInterfaceV4(\n                TemplateType.AnalyticalListPageV4,\n                genericSchema,\n                entitySet,\n                annotations,\n                logger,\n                manifest\n            );\n        } else if (v4Params[SchemaType.FreestylePage]) {\n            const { genericSchema, entitySet, annotations, logger, manifest } = v4Params[SchemaType.FreestylePage];\n            schema = generateFreestyleInterfaceV4(\n                TemplateType.FreestylePageV4,\n                genericSchema,\n                annotations,\n                manifest,\n                entitySet,\n                logger\n            );\n        }\n    }\n    return schema;\n}\n\n/**\n * Exports a config (src/*.json, src/pages/*.json) to flex changes and manifest settings\n * @param exportParameters - parameters to control the export\n */\nexport function exportConfig(exportParameters: ExportConfigParameters): ExportResults {\n    let exportResults: ExportResults;\n    const ui5Config: UI5Version = { ui5Version: exportParameters.ui5Version, layer: exportParameters.layer };\n    if (exportParameters[FioriElementsVersion.v2]) {\n        /**\n         * Handle v2 export\n         */\n        const v2Params = exportParameters[FioriElementsVersion.v2];\n        exportResults = exportPageV2(v2Params, ui5Config);\n    } else if (exportParameters[FioriElementsVersion.v4]) {\n        /**\n         * Handle v4 export\n         */\n        const v4Params = exportParameters[FioriElementsVersion.v4];\n        exportResults = exportPageV4(v4Params, ui5Config);\n    }\n    return exportResults;\n}\n\n/**\n * Imports manifest settings and flex changes to a config (src/*.json, src/pages/*.json)\n * @param importParameters - parameters to control the import\n */\nexport function importConfig(importParameters: ImportConfigParameters): object | undefined {\n    let config;\n    if (importParameters[FioriElementsVersion.v2]) {\n        /**\n         * Handle v2 import\n         */\n        const v2Params = importParameters[FioriElementsVersion.v2];\n        if (v2Params[SchemaType.ListReport]) {\n            config = createListReportConfigV2(v2Params[SchemaType.ListReport]);\n        } else if (v2Params[SchemaType.ObjectPage]) {\n            config = createObjectPageConfigV2(v2Params[SchemaType.ObjectPage]);\n        } else if (v2Params[SchemaType.OverviewPage]) {\n            config = createOverviewPageConfigV2(v2Params[SchemaType.OverviewPage]);\n        } else if (v2Params[SchemaType.AnalyticalListPage]) {\n            config = createAnalyticalListPageConfigV2(v2Params[SchemaType.AnalyticalListPage]);\n        }\n    } else if (importParameters[FioriElementsVersion.v4]) {\n        /**\n         * Handle v4 import\n         */\n        const v4Params = importParameters[FioriElementsVersion.v4];\n        if (v4Params[SchemaType.ListReport]) {\n            config = createListReportConfigV4(v4Params[SchemaType.ListReport], SchemaType.ListReport);\n        } else if (v4Params[SchemaType.ObjectPage]) {\n            config = createObjectPageConfigV4(v4Params[SchemaType.ObjectPage]);\n        } else if (v4Params[SchemaType.AnalyticalListPage]) {\n            config = createListReportConfigV4(v4Params[SchemaType.AnalyticalListPage], SchemaType.AnalyticalListPage);\n        }\n    }\n    return config;\n}\n\n/**\n * Evaluates all project files and generates app schemas and configs out of it\n * @param importParameters - parameters to control the import; here: all relevant project files\n * @returns a list of files, comprising app schemas and configs\n */\nexport async function importProject(importParameters: ImportProjectParameters): Promise<File[]> {\n    return importProjectSchemaAndConfig(importParameters);\n}\n\n/**\n * Evaluates all project files and generates app schemas out of it, but no configs\n * @param importParameters - parameters to control the import; here: all relevant project files\n * @returns a list of files, comprising all app schemas\n */\nexport async function importProjectSchema(importParameters: ImportProjectParameters): Promise<File[]> {\n    return importProjectSchemaOnly(importParameters);\n}\n\n/**\n * Returns specification API version.\n * @return {ApiVersion} Object of API version.\n */\nexport function getApiVersion(): ApiVersion {\n    return {\n        version: '5',\n        fpmWriter: '4'\n    };\n}\n\n/**\n * Calls the FPM Writer for generating a custom extension\n *\n * @param customExtensionParams parameters for generating the custom extension\n * @returns {Editor} Instance of mem-fs-editor\n */\nexport function generateCustomExtension(customExtensionParams: GenerateCustomExtensionParams): Editor | undefined {\n    const fpmWriterFunction = FPMWriterMap.get(customExtensionParams.customExtension);\n    if (fpmWriterFunction && typeof fpmWriterFunction === 'function') {\n        enableFPM(customExtensionParams.basePath, {});\n        return fpmWriterFunction(\n            customExtensionParams.basePath,\n            customExtensionParams.data,\n            customExtensionParams.fsEditor\n        );\n    } else {\n        return;\n    }\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { MetadataInstanceInterface } from './decoration/factory';\nimport type {\n    Manifest,\n    ExtensionLogger,\n    anyFacetType,\n    FacetConfig,\n    FacetConfigs,\n    FacetSection,\n    FileData,\n    SchemaFilePath\n} from '@sap/ux-specification-types';\nimport {\n    DirName,\n    FacetBase,\n    FacetTitlePrefix,\n    MANIFESTPATH,\n    SchemaTag,\n    TemplateType,\n    UIVOCABULARY,\n    VOCWITHSLASH,\n    v4,\n    v2,\n    ALPViewType,\n    FioriElementsVersion,\n    ManifestSection,\n    PageType,\n    LogSeverity,\n    PageTypeV4,\n    SchemaType\n} from '@sap/ux-specification-types';\nimport type {\n    CollectionFacet,\n    DataField,\n    DataFieldAbstractTypes,\n    DataFieldForAction,\n    DataFieldForAnnotation,\n    DataFieldWithIntentBasedNavigation,\n    DataFieldWithUrl,\n    ReferenceFacet,\n    ReferenceURLFacet\n} from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type {\n    AnnotationTerm,\n    ConvertedMetadata,\n    EntityType,\n    RawMetadata,\n    PropertyPath\n} from '@sap-ux/vocabularies-types';\n\nimport i18next from 'i18next';\nimport merge from 'deepmerge';\nimport { convert } from '@sap-ux/annotation-converter';\nimport { merge as mergeParser, parse } from '@sap-ux/edmx-parser';\nimport { UIAnnotationTypes, UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { CommunicationAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/Communication';\nimport { log } from '../../extensionLogger';\nimport type { PropertyAnnotations } from '@sap-ux/vocabularies-types/vocabularies/Edm_Types';\n\nexport const DEFINITION_LINK_PREFIX = '#/definitions/';\n\n/**\n * Function returns annotation path for schema based on received params.\n * @param entityTypeName - Entity type name.\n * @param term - Annotation term.\n * @param qualifier - Annotation qualifier.\n * @returns Annotation path based on received params\n */\nexport const createAnnotationPath = (entityTypeName: string, term: string, qualifier?: string): string => {\n    let annotationPath = `/${entityTypeName}/@${term}`;\n    if (qualifier) {\n        annotationPath += `#${qualifier}`;\n    }\n    return annotationPath;\n};\n\n/**\n * Parses, merges, and converts a list of annotation files with aid of tools from annotation-vocabularies-tools\n * @param annotationFiles - The list of all annotation files, in JSON format\n * @returns the complete service information\n */\nexport function parseAndMergeAndConvert(annotationFiles: FileData[], logger: ExtensionLogger): ConvertedMetadata {\n    const parseResult: RawMetadata[] = [];\n    let converterOutput: ConvertedMetadata;\n    try {\n        if (annotationFiles) {\n            annotationFiles.forEach(function (annotationData: FileData) {\n                parseResult.push(parse(annotationData.fileContent, annotationData.dataSourceUri));\n            });\n        }\n        if (parseResult.length > 0) {\n            converterOutput = convert(mergeParser(...parseResult));\n        }\n    } catch (error) {\n        log(\n            logger,\n            {\n                severity: LogSeverity.Error,\n                message: i18next.t('ANNOERR')\n            },\n            ...error\n        );\n    }\n    return converterOutput;\n}\n\nexport const getAnnotationPropertyValue = (annotationProperty: DataField['Value']): string =>\n    annotationProperty?.value || annotationProperty?.path;\n\n/**\n * Checks for Common.Label and overwrites the label from it if present\n * @param {PropertyAnnotations} annotations - property annotations\n * @param {EntityType} entityType - entity type\n * @param {string} label - label, to be actualized\n */\nexport function evaluateCommonLabel(annotations: PropertyAnnotations, entityType: EntityType, label: string): string {\n    if (annotations?.Common?.Label) {\n        if (typeof annotations.Common.Label === 'string') {\n            label = annotations.Common.Label;\n        } else if (annotations.Common.Label['type'] === 'Path') {\n            const targetProperty = entityType.resolvePath(annotations.Common.Label['path']);\n            if (targetProperty.value) {\n                label = targetProperty.value;\n            } else if (typeof targetProperty.Common?.Label === 'string') {\n                label = targetProperty.annotations.Common.Label;\n            }\n        } else if (typeof annotations.Common?.Label?.toString() === 'string') {\n            label = annotations.Common.Label.toString();\n        }\n    }\n    return label;\n}\n\n/**\n * Determines the label for a property path\n * @param {PropertyPath} propertyPath - property path\n * @param {EntityType} entityType - entity type\n * @returns label, derived from Common.Label or from property value\n */\nexport function getLabelForPropertyPath(propertyPath: PropertyPath, entityType: EntityType): string {\n    let label = propertyPath.value;\n    if (propertyPath.$target) {\n        label = evaluateCommonLabel(propertyPath.$target.annotations, entityType, label);\n    }\n    return label;\n}\n\n/**\n * Determines the label for a LineItem record\n * @param {DataFieldAbstractType} field - Line item record\n * @param {EntityType} entityType - entity type\n * @returns label, derived from Common.Label or from property value\n */\nexport function getLabelForDataField(field: DataFieldAbstractTypes, entityType: EntityType): string {\n    let label: string, property;\n    if (field['Value']) {\n        if (typeof field['Value'] === 'string') {\n            property = entityType.entityProperties.find((ep) => ep.name === field['Value']);\n        } else {\n            property = entityType.resolvePath(field['Value'].path);\n            if (!property) {\n                property = field['Value'].$target;\n            }\n        }\n    } else if (field['Target'] && field['Target'].$target && field['Target'].$target.Value) {\n        property = field['Target'].$target.Value.$target;\n    }\n    if (property?.annotations?.Common?.Label) {\n        label = evaluateCommonLabel(property.annotations, entityType, label);\n    }\n    return label;\n}\n\n/**\n * Function to resolve the dataField label\n * @param dataFieldLabel - Given dataField label; might be of type string, or an object in case of a path reference\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @returns undefined or the right string value\n */\nfunction getLabel(dataFieldLabel: any, entityType: EntityType): string {\n    if (typeof dataFieldLabel === 'string') {\n        return dataFieldLabel;\n    } else if (typeof dataFieldLabel === 'object' && dataFieldLabel.path) {\n        const property = entityType.resolvePath(dataFieldLabel.path);\n        if (!property || property.length === 0) {\n            return undefined;\n        } else {\n            const singleProperty = property[0];\n            if (singleProperty?.annotations?.Common?.Label) {\n                const label: string = dataFieldLabel;\n                return evaluateCommonLabel(singleProperty.annotations, entityType, label);\n            }\n        }\n    } else {\n        return undefined;\n    }\n}\n\nfunction getTitleForDataField(dataField: DataField, entityType: EntityType, dataFieldLabel: string): string {\n    const propertyCommonLabel = getLabelForDataField(dataField as DataFieldAbstractTypes, entityType);\n    return (\n        dataFieldLabel ||\n        propertyCommonLabel ||\n        (dataField.Value.$target ? dataField.Value.$target.name : dataField.Value.value || dataField.Value.path)\n    );\n}\n\n/**\n * Determines the description of a data field, e.g. for the column header\n * @param dataFieldAbstract - the given record of the line item annotation\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n */\nexport function getDataFieldDescription(dataFieldAbstract: DataFieldAbstractTypes, entityType: EntityType): string {\n    let title = '',\n        propertyCommonLabel,\n        dataField;\n    const dataFieldLabel = getLabel(dataFieldAbstract.Label, entityType);\n\n    switch (dataFieldAbstract.$Type) {\n        case UIAnnotationTypes.DataField:\n            dataField = dataFieldAbstract as DataField;\n            title = getTitleForDataField(dataField, entityType, dataFieldLabel);\n            break;\n        case UIAnnotationTypes.DataFieldWithUrl:\n            dataField = dataFieldAbstract as DataFieldWithUrl;\n            propertyCommonLabel = getLabelForDataField(dataFieldAbstract, entityType);\n            title =\n                dataFieldLabel ||\n                propertyCommonLabel ||\n                (typeof dataField.Value === 'string' ? dataField.Value : dataField.Value.path);\n            break;\n        case UIAnnotationTypes.DataFieldForAnnotation:\n            dataField = dataFieldAbstract as DataFieldForAnnotation;\n            propertyCommonLabel = getLabelForDataField(dataFieldAbstract, entityType);\n            title = dataFieldLabel || propertyCommonLabel || dataField.Target.$target.Title || dataField.Target.value;\n            break;\n        case UIAnnotationTypes.DataFieldForAction:\n        case UIAnnotationTypes.DataFieldWithAction:\n        case UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n            dataField = dataFieldAbstract as DataFieldForAction;\n            if (dataFieldLabel) {\n                title = typeof dataFieldLabel === 'string' ? dataFieldLabel : (dataField.Action as string);\n            } else {\n                title = dataFieldAbstract.Action as string;\n            }\n            break;\n        case UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n            dataField = dataFieldAbstract as DataFieldWithIntentBasedNavigation;\n            propertyCommonLabel = getLabelForDataField(dataFieldAbstract, entityType);\n            title = propertyCommonLabel || dataField.Value.path;\n            break;\n        case UIAnnotationTypes.DataFieldWithNavigationPath:\n            dataField = dataFieldAbstract;\n            title = getTitleForDataField(dataField, entityType, dataFieldLabel);\n            break;\n        default:\n            break;\n    }\n    return title;\n}\n\n/**\n * Prepare string for reference use in schema\n * @param refInput string to be character checked and replaced\n * @returns string with replaced characters\n */\nexport function prepareRef(refInput: string): string {\n    return refInput.replace('#', '::').replace(/\\//g, ':2f');\n}\n\n/**\n * Return the page type for a given V2 page in manifest\n * @param name - page component name\n */\nexport function getPageTypeV2(name: string): PageType | undefined {\n    if (name) {\n        const templatePart = `${v2.FE_TEMPLATE_V2}.`;\n        return name.split(templatePart)[1] as PageType;\n    }\n}\n\n/**\n * Return the page type for a given V4 page in manifest\n * @param name - page component name\n */\nexport function getPageTypeV4(v4App: v4.SapUiAppPageV4 | v4.SapUi5RoutingTargetCustomPageV4): PageTypeV4 | undefined {\n    if ((v4App as v4.SapUiAppPageV4).name && (v4App as v4.SapUiAppPageV4).name !== v4.FE_TEMPLATE_V4_CUSTOM_PAGE) {\n        const templatePart = `${v4.FE_TEMPLATE_V4}.`;\n        return (v4App as v4.SapUiAppPageV4).name.split(templatePart)[1] as PageTypeV4;\n    } else if ((v4App as v4.SapUiAppPageV4)?.name === v4.FE_TEMPLATE_V4_CUSTOM_PAGE) {\n        return PageTypeV4.FPMCustomPage;\n    } else if (\n        (v4App as v4.SapUi5RoutingTargetCustomPageV4).viewId ||\n        (v4App as v4.SapUi5RoutingTargetCustomPageV4).viewName\n    ) {\n        return PageTypeV4.CustomPage;\n    }\n}\n\nfunction getTargetAnnotationName(targetAnnotation: any, keyForRelatedFacetKeys = false): string {\n    const termWithQualifier = `${targetAnnotation.term}#${targetAnnotation.qualifier}`;\n    return `${!keyForRelatedFacetKeys ? '@' : ''}${\n        targetAnnotation.qualifier ? termWithQualifier : targetAnnotation.term\n    }`;\n}\n\n/**\n * Finds the alias for a given namespace in the references' section of the converted service metadata\n * @param {string} namespace - complete namespace, e.g. 'com.sap.vocabularies.UI.v1'\n * @param {ConvertedMetadata} oDataServiceAVT - combined service metadata, as returned by annotation vocabularies tools\n * @returns alias for the given namespace\n */\nexport function findAlias(namespace: string, oDataServiceAVT: ConvertedMetadata): string | undefined {\n    if (!oDataServiceAVT) {\n        return;\n    }\n    let aliasReference = oDataServiceAVT.references.find((reference) => {\n        return reference.namespace === namespace;\n    });\n    if (!aliasReference) {\n        aliasReference = oDataServiceAVT.references.find((reference) => {\n            return reference.alias === namespace;\n        });\n    }\n    if (!aliasReference) {\n        aliasReference = oDataServiceAVT.references.find((reference) => {\n            return (\n                reference.alias.toUpperCase() ===\n                namespace.split('SAP__')[namespace.split('SAP__').length - 1].toUpperCase()\n            );\n        });\n    }\n    return aliasReference?.alias;\n}\n\n/**\n * Determines the target annotation\n * @param navigationParts - parts of the target annotation path\n * @param entityType - entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @returns the target annotation\n */\nfunction determineTargetAnnotation(\n    navigationParts: string[],\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata\n): any {\n    const lastNavigationPart = navigationParts[navigationParts.length - 1];\n    const annotation = lastNavigationPart.substring(lastNavigationPart.lastIndexOf('.') + 1, lastNavigationPart.length);\n    const alias = findAlias(\n        lastNavigationPart.substring(0, lastNavigationPart.lastIndexOf('.')).replace('@', ''),\n        oDataServiceAVT\n    );\n    return entityType?.annotations[alias]?.[annotation];\n}\n\n/**\n * Adjust key by considering navigation\n * @param key - given key\n * @param keyForRelatedFacetKeys - construct key for 'keyForRelatedFacetKeys' property(used to define custom sections) - we should not add '@' symbol there.\n * @param navigationParts - parts of the target annotation path\n */\nfunction adjustKey(key: string, navigationParts: string[], keyForRelatedFacetKeys: boolean): string {\n    const uiClass = navigationParts[navigationParts.length - 1].split('#')[0];\n    if (uiClass.includes('.LineItem')) {\n        const pathParts = key.split('::');\n        pathParts[pathParts.length - 1] = `${!keyForRelatedFacetKeys ? '@' : ''}${UIAnnotationTerms.LineItem}`;\n        key = pathParts.join('::');\n    } else {\n        key = uiClass.replace('@UI', `${!keyForRelatedFacetKeys ? '@' : ''}com.sap.vocabularies.UI.v1`);\n    }\n    return key;\n}\n\nfunction getKeyAndEntityTypeOfReferenceFacet(\n    oDataServiceAVT: ConvertedMetadata,\n    key: string,\n    entityType: EntityType,\n    propertyValue: string,\n    oDataVersion = FioriElementsVersion.v2,\n    keyForRelatedFacetKeys = false\n): { key: string; entityType: EntityType; stopProcessing: boolean } {\n    let stopProcessing = false;\n    const navigationParts = propertyValue.split('/');\n    const navigation = navigationParts.length > 1;\n    if (navigation) {\n        entityType = entityType.resolvePath(propertyValue.substring(0, propertyValue.lastIndexOf('/')))?.targetType;\n    }\n    key = adjustKey(key, navigationParts, keyForRelatedFacetKeys);\n\n    const targetAnnotation = determineTargetAnnotation(navigationParts, entityType, oDataServiceAVT);\n    if (targetAnnotation) {\n        const separator = oDataVersion === FioriElementsVersion.v2 ? '::' : '#';\n        key = getTargetAnnotationName(targetAnnotation, keyForRelatedFacetKeys).replace('#', separator);\n    } else {\n        stopProcessing = true;\n        return { key, entityType, stopProcessing };\n    }\n\n    if (navigation) {\n        const navSeparator = oDataVersion === FioriElementsVersion.v2 ? '::' : '/';\n        navigationParts.pop();\n        const navigationIDs = [...navigationParts].join(navSeparator);\n        key = `${navigationIDs}${navSeparator}${key}`;\n    }\n    return { key, entityType, stopProcessing };\n}\n\n/**\n * Resolve page section(get key and label->description).\n * @param facetDefinition - the actual annotation record\n * @param keyForRelatedFacetKeys - construct key for 'keyForRelatedFacetKeys' property(used to define custom sections) - we should not add '@' symbol there.\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @returns {FacetSection} - object comprising the relevant facet information\n */\nexport function getSectionFacet(\n    facetDefinition: anyFacetType,\n    sourceEntityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    logger?: ExtensionLogger,\n    oDataVersion = FioriElementsVersion.v2,\n    keyForRelatedFacetKeys = false\n): FacetSection | undefined {\n    //Take facet ID as fallback\n    const facetName = facetDefinition.fullyQualifiedName.substring(facetDefinition.fullyQualifiedName.lastIndexOf('@'));\n    let key: string = facetDefinition.ID ? facetDefinition.ID.toString() : facetName;\n\n    let entityType = sourceEntityType; //default\n\n    //If reference facet: overwrite with target annotation if present\n    if (facetDefinition.$Type !== UIAnnotationTypes.CollectionFacet && 'Target' in facetDefinition) {\n        const propertyValue = getAnnotationPropertyValue(facetDefinition.Target);\n        if (!propertyValue) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOTARGET', { target: facetDefinition.Target })\n            });\n            return;\n        }\n        const {\n            key: newKey,\n            entityType: newEntityType,\n            stopProcessing\n        } = getKeyAndEntityTypeOfReferenceFacet(\n            oDataServiceAVT,\n            key,\n            entityType,\n            propertyValue,\n            oDataVersion,\n            keyForRelatedFacetKeys\n        );\n        if (stopProcessing) {\n            return;\n        }\n        key = newKey;\n        entityType = newEntityType;\n    }\n    key = key.replace(/\\//gi, '::');\n    return key\n        ? {\n              key,\n              ...(facetDefinition.Label && { label: facetDefinition.Label.toString() }),\n              ...(facetDefinition.ID && { ID: facetDefinition.ID.toString() }),\n              entityType\n          }\n        : undefined;\n}\n\n/**\n * Finds the alias for a given namespace in the references' section of the converted service metadata.\n * An empty object is created if the path element does not exist yet.\n * Exception: if an empty array is the next element  of the 'path' definition, an empty array is created instead of an empty object.\n * @param {object} manifest - manifest that is being modified during export\n * @param {string} path - path of the property in the manifest\n * @param {string} targetAnnotation - target annotation (optional)\n * @param {string} targetAnnotationEncoded - target annotation in its encoded form, as used in manifest settings\n * @param {boolean} importScenario - indicates if the function is called for the import, else it is the export\n * @returns returns section of the manifest based on path, generates an empty object in case it does not exists\n */\nexport const getManifestSectionByPathV4 = (\n    manifest: object,\n    path: string,\n    targetAnnotation?: string,\n    targetAnnotationEncoded?: string\n): object | undefined => {\n    if (!path) {\n        return undefined;\n    }\n    let manifestSection = manifest;\n    const pathElements = path.split('/');\n    for (let index = 0; index < pathElements.length; index++) {\n        const element = pathElements[index];\n        if (element === '[]') {\n            continue;\n        }\n        const decodedElement =\n            targetAnnotationEncoded && targetAnnotationEncoded === element\n                ? targetAnnotation\n                : element.replace('??', '/');\n        //?? can be used in path functions to encode /\n        if (!manifestSection[decodedElement]) {\n            if (pathElements[index + 1] === '[]') {\n                manifestSection[decodedElement] = [];\n            } else {\n                manifestSection[decodedElement] = {};\n            }\n        }\n        manifestSection = manifestSection[decodedElement];\n    }\n    return manifestSection;\n};\n\nexport function getSchemaKeyOfLineItemRecord(lineItemRecord: DataFieldAbstractTypes): string {\n    let schemaKey, target, value;\n    switch (lineItemRecord.$Type) {\n        case UIAnnotationTypes.DataField:\n            schemaKey = getAnnotationPropertyValue(lineItemRecord.Value);\n            break;\n        case UIAnnotationTypes.DataFieldWithUrl:\n            schemaKey =\n                typeof lineItemRecord.Value === 'string'\n                    ? lineItemRecord.Value\n                    : getAnnotationPropertyValue(lineItemRecord.Value);\n            break;\n        case UIAnnotationTypes.DataFieldForAnnotation:\n            target = lineItemRecord.Target.value;\n            if (target) {\n                schemaKey =\n                    'DataFieldForAnnotation:::sTarget::' +\n                    target\n                        .replace('@UI', '@com.sap.vocabularies.UI.v1')\n                        .replace('@Communication', '@com.sap.vocabularies.Communication.v1')\n                        .replace('@Contact', '@com.sap.vocabularies.Contact.v1');\n            }\n            break;\n        case UIAnnotationTypes.DataFieldForAction:\n            if (lineItemRecord.Inline) {\n                schemaKey = `DataFieldForAction:::sAction::${prepareRef(lineItemRecord.Action as string)}`;\n            }\n            break;\n        case UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n            value = getAnnotationPropertyValue(lineItemRecord.Value);\n            schemaKey = `DataFieldWithIntentBasedNavigation:::sProperty::${value}:::sSemanticObject::${lineItemRecord.SemanticObject}:::sAction::${lineItemRecord.Action}`;\n            break;\n        case UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n            if (lineItemRecord.Inline) {\n                schemaKey = `DataFieldForIntentBasedNavigation:::sSemanticObject::${\n                    lineItemRecord.SemanticObject\n                }:::sAction::${prepareRef(lineItemRecord.Action as string)}`;\n            }\n            break;\n        case UIAnnotationTypes.DataFieldWithNavigationPath:\n            value = getAnnotationPropertyValue(lineItemRecord.Value);\n            target = getAnnotationPropertyValue(lineItemRecord.Target);\n            schemaKey = 'DataFieldWithNavigationPath:::sProperty::' + value + ':::sTarget::' + target;\n            break;\n        default:\n            break;\n    }\n\n    return schemaKey;\n}\n\n/**\n * Determines if type of given annotation term is of UIAnnotationTerm\n * @param {string} path path in manifest\n * @param {string} alias for a given namespace\n * @param {EntityType} entityType - the entity type\n * @returns UI annotation term type\n */\nfunction getUIAnnotationTerm(path: string, alias: string, entityType: EntityType): UIAnnotationTerms | undefined {\n    if (path.includes(UIAnnotationTerms.Chart) || path.includes(alias + '.Chart')) {\n        return UIAnnotationTerms.Chart;\n    } else if (path.includes(UIAnnotationTerms.Identification) || path.includes(alias + '.Identification')) {\n        return UIAnnotationTerms.Identification;\n    } else if ((entityType && path.includes(UIAnnotationTerms.LineItem)) || path.includes(alias + '.LineItem')) {\n        return UIAnnotationTerms.LineItem;\n    } else if (path.includes(UIAnnotationTerms.FieldGroup) || path.includes(alias + '.FieldGroup')) {\n        return UIAnnotationTerms.FieldGroup;\n    } else if (path.includes(UIAnnotationTerms.DataPoint) || path.includes(alias + '.DataPoint')) {\n        return UIAnnotationTerms.DataPoint;\n    } else if (path.includes(UIAnnotationTerms.PresentationVariant) || path.includes(alias + '.PresentationVariant')) {\n        return UIAnnotationTerms.PresentationVariant;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Determines if type of given annotation term is of CommunicationAnnotationTerm\n * @param {string} path path in manifest\n * @param {string} alias for a given namespace\n * @param {EntityType} entityType - the entity type\n * @returns Communication annotation term type\n */\nfunction getCommunicationAnnotationTerm(path: string, alias: string): CommunicationAnnotationTerms | undefined {\n    if (path.includes('com.sap.vocabularies.Communication.v1.Contact') || path.includes(alias + '.Contact')) {\n        return CommunicationAnnotationTerms.Contact;\n    } else if (path.includes('com.sap.vocabularies.Communication.v1.Address') || path.includes(alias + '.Address')) {\n        return CommunicationAnnotationTerms.Address;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Determines the type of given annotation term\n * @param {string} path path in manifest\n * @param {string} alias for a given namespace\n * @param {EntityType} entityType - the entity type\n * @returns annotation term type\n */\nfunction getAnnotationTerm(\n    path: string,\n    alias: string,\n    entityType: EntityType\n): UIAnnotationTerms | CommunicationAnnotationTerms | undefined {\n    return getUIAnnotationTerm(path, alias, entityType) || getCommunicationAnnotationTerm(path, alias);\n}\n\n/**\n * Evaluates the target annotation of a reference facet and actualizes the facets for the config\n * @param {AnnotationTerm} annotationRecord - the actual annotation record\n * @param {FacetConfigs} facets - list of facets in config format, to be updated\n * @param {EntityType} entityType - the entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nfunction evaluateTargetAnnotation(\n    section: FacetSection,\n    annotationRecord: AnnotationTerm<ReferenceFacet>,\n    facets: FacetConfigs,\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    oDataVersion = FioriElementsVersion.v2,\n    logger?: ExtensionLogger\n): void {\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    let path = section ? section.key : '';\n    const targetEntityType = section.entityType;\n    const annotationTerm = getAnnotationTerm(path, alias, entityType);\n\n    switch (annotationTerm) {\n        case UIAnnotationTerms.Chart: {\n            facets[path] = { base: FacetBase.Chart };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            break;\n        }\n        case UIAnnotationTerms.Identification: {\n            facets[path] = { base: FacetBase.Identification };\n            facets[path].entityType = targetEntityType;\n            facets[path].target = annotationRecord?.Target?.$target;\n            break;\n        }\n        case UIAnnotationTerms.LineItem: {\n            if (!path.includes(UIAnnotationTerms.LineItem) && path.includes('.LineItem')) {\n                const pathParts = path.split('::');\n                pathParts[pathParts.length - 1] = `@${UIAnnotationTerms.LineItem}`;\n                path = pathParts.join('::');\n            }\n            facets[path] = { base: FacetBase.LineItem };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            break;\n        }\n        case UIAnnotationTerms.FieldGroup: {\n            facets[path] = { base: FacetBase.Form };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            break;\n        }\n        case UIAnnotationTerms.DataPoint: {\n            facets[path] = { base: FacetBase.DataPoint };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            facets[path].Label = annotationRecord?.Target?.$target['Title'];\n            break;\n        }\n        case UIAnnotationTerms.PresentationVariant: {\n            facets[path] = { base: FacetBase.PresentationVariant };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            break;\n        }\n        case CommunicationAnnotationTerms.Contact: {\n            facets[path] = { base: FacetBase.Contact };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            break;\n        }\n        case CommunicationAnnotationTerms.Address: {\n            facets[path] = { base: FacetBase.Address };\n            facets[path].target = annotationRecord?.Target?.$target;\n            facets[path].entityType = targetEntityType;\n            break;\n        }\n        default: {\n            facets[path] = { base: FacetBase.Unknown };\n        }\n    }\n\n    if (facets[path]) {\n        facets[path].annotationPath = `/${annotationRecord.fullyQualifiedName.replace(\n            '@com.sap.vocabularies',\n            VOCWITHSLASH\n        )}`;\n        if (annotationRecord.Label) {\n            facets[path].Label = annotationRecord.Label as string;\n        }\n        // Add Facet ID\n        if (annotationRecord.ID) {\n            facets[path]['ID'] = annotationRecord.ID as string;\n        } else if (oDataVersion === FioriElementsVersion.v4) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOID4SECTION', { facet: annotationRecord.fullyQualifiedName })\n            });\n        }\n        if (section && section.entityType) {\n            facets[path].entityType = section.entityType;\n        }\n    }\n}\n\n/**\n * Adds the information from facets to the config\n * @param {AnnotationTerm} annotationRecord - the actual annotation record\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {string} serviceName - name of the service of the app\n * @param {string} entityName - the entity (type) name\n * @param {FacetConfigs} facets - list of facets in config format, to be updated\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nfunction addFacetToConfig(\n    annotationRecord:\n        | AnnotationTerm<CollectionFacet>\n        | AnnotationTerm<ReferenceFacet>\n        | AnnotationTerm<ReferenceURLFacet>,\n    oDataServiceAVT: ConvertedMetadata,\n    serviceName: string,\n    entityType: EntityType,\n    facets: FacetConfigs,\n    oDataVersion = FioriElementsVersion.v2,\n    logger?: ExtensionLogger\n): void {\n    const section: FacetSection = getSectionFacet(\n        annotationRecord,\n        entityType,\n        oDataServiceAVT,\n        logger,\n        oDataVersion,\n        false\n    );\n    if (section) {\n        switch (annotationRecord.$Type) {\n            case UIAnnotationTypes.ReferenceFacet: {\n                evaluateTargetAnnotation(\n                    section,\n                    annotationRecord,\n                    facets,\n                    entityType,\n                    oDataServiceAVT,\n                    oDataVersion,\n                    logger\n                );\n                break;\n            }\n            case UIAnnotationTypes.CollectionFacet: {\n                const annotationPath = `/${entityType.fullyQualifiedName}/${\n                    annotationRecord.fullyQualifiedName.split(entityType.fullyQualifiedName)[1]\n                }`;\n                const facet = (facets[section.key] = {\n                    base: FacetBase.CollectionFacet,\n                    facets: {},\n                    ID: section.ID,\n                    annotationPath: annotationPath,\n                    Label: section.label\n                });\n                annotationRecord.Facets?.forEach((collectionItem) => {\n                    addFacetToConfig(\n                        collectionItem,\n                        oDataServiceAVT,\n                        serviceName,\n                        entityType,\n                        facet.facets,\n                        oDataVersion,\n                        logger\n                    );\n                });\n                break;\n            }\n        }\n    }\n}\n\n/**\n * Retrieve header facet configurations that can be used to generate ObjectPage schemas\n * @param {QualifiedName} entityTypeName - the name of the actual entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function getObjectPageHeaderFacets(\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    oDataVersion = FioriElementsVersion.v2,\n    logger?: ExtensionLogger\n): FacetConfigs | undefined {\n    const facets: FacetConfigs = {};\n    if (!entityType || !entityType.annotations) {\n        return;\n    }\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    const facetAnnotation = alias && entityType.annotations[alias] && entityType.annotations[alias].HeaderFacets;\n    if (facetAnnotation) {\n        const lastDot = entityType.fullyQualifiedName.lastIndexOf('.');\n        const serviceName = entityType.fullyQualifiedName.substring(0, lastDot);\n\n        // Add facets to configuration\n        facetAnnotation.forEach((item) => {\n            addFacetToConfig(item, oDataServiceAVT, serviceName, entityType, facets, oDataVersion, logger);\n        });\n    }\n    return facets;\n}\n\n/**\n * Retrieve facet configurations that can be used to generate ObjectPage schemas\n * @param {QualifiedName} entityTypeName - the name of the actual entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function getObjectPageFacets(\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    oDataVersion = FioriElementsVersion.v2,\n    logger?: ExtensionLogger\n): FacetConfigs | undefined {\n    const facets: FacetConfigs = {};\n    if (!entityType || !entityType.annotations) {\n        return;\n    }\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    const facetAnnotation = alias && entityType.annotations[alias] && entityType.annotations[alias].Facets;\n    if (facetAnnotation) {\n        const lastDot = entityType.fullyQualifiedName.lastIndexOf('.');\n        const serviceName = entityType.fullyQualifiedName.substring(0, lastDot);\n\n        // Add facets to configuration\n        facetAnnotation.forEach((item) => {\n            addFacetToConfig(item, oDataServiceAVT, serviceName, entityType, facets, oDataVersion, logger);\n        });\n    }\n    return facets;\n}\n\n/**\n * Returns the version of Fiori elements (v2/v4) from a given manifest\n * @param manifest - the manifest.json file\n */\nexport function getVersionFromManifest(manifest: Manifest): FioriElementsVersion {\n    if (manifest[ManifestSection.generic] || manifest[ManifestSection.ovp]) {\n        return FioriElementsVersion.v2;\n    } else {\n        return FioriElementsVersion.v4;\n    }\n}\n\n/**\n * Determines the template type of a V2 app\n * @param manifest - the manifest.json file\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @returns {TemplateType} the template type\n */\nexport function determineV2Template(manifest: Manifest, logger: ExtensionLogger): TemplateType | undefined {\n    let templateType: TemplateType;\n    if (manifest[ManifestSection.generic]) {\n        const v2Pages = manifest[ManifestSection.generic].pages;\n        if (!v2Pages) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOPAGES', { appId: manifest['sap.app']['id'] }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return;\n        }\n        for (const pageKey in v2Pages) {\n            const v2Page = v2Pages[pageKey];\n            if (getPageTypeV2(v2Page.component.name) === PageType.AnalyticalListPage) {\n                templateType = TemplateType.AnalyticalListPageV2;\n                break;\n            } else if (getPageTypeV2(v2Page.component.name) === PageType.ListReport) {\n                templateType = TemplateType.ListReportObjectPageV2;\n                break;\n            }\n        }\n    } else {\n        if (!templateType) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOTEMPLATE', { section: ManifestSection.generic }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n        }\n    }\n    return templateType;\n}\n\n/**\n * Determines the template type, based on the given manifest routing target entries of the app\n * @param v4Pages - pages from routing targets\n * @returns {TemplateType | undefined} the template type\n */\nfunction determineV4TemplateFromPages(v4Pages: v4.SapUi5RoutingTargetsV4): TemplateType | undefined {\n    let templateType: TemplateType;\n    for (const pageKey in v4Pages) {\n        const v4Page = v4Pages[pageKey] as v4.SapUiAppPageV4;\n        const pageType = getPageTypeV4(v4Page);\n        if (pageType === PageTypeV4.AnalyticalListPage) {\n            templateType = TemplateType.AnalyticalListPageV4;\n            break;\n        } else if (pageType === PageTypeV4.ListReport) {\n            const viewPath = (v4Page.options?.settings?.views?.paths as v4.SapUi5ALPPaths)?.[0];\n            if (viewPath && (viewPath[ALPViewType.Primary] || viewPath[ALPViewType.Secondary])) {\n                templateType = TemplateType.AnalyticalListPageV4;\n            } else {\n                templateType = TemplateType.ListReportObjectPageV4;\n            }\n            break;\n        } else if (pageType === PageTypeV4.ObjectPage) {\n            templateType = TemplateType.ListReportObjectPageV4;\n            //fixed now for FEOP scenario, bit continue to check if LR/ALP exists\n        } else if ([PageTypeV4.CustomPage, PageTypeV4.FPMCustomPage].includes(pageType)) {\n            templateType = TemplateType.FreestylePageV4;\n            break;\n        }\n    }\n    return templateType;\n}\n\n/**\n * Determines the template type of a V4 app\n * @param manifest - the manifest.json file\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @returns {TemplateType} the template type\n */\nexport function determineV4Template(manifest: Manifest, logger: ExtensionLogger): TemplateType | undefined {\n    const v4Pages =\n        manifest[ManifestSection.ui5].routing &&\n        (manifest[ManifestSection.ui5].routing.targets as v4.SapUi5RoutingTargetsV4);\n    // if there are no pages in routing targets, we use LROPV4 as default template type\n    if (!v4Pages || Object.keys(v4Pages).length === 0) {\n        log(logger, {\n            severity: LogSeverity.Info,\n            message: i18next.t('NOPAGES', { appId: manifest['sap.app']['id'] }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing']\n            }\n        });\n        return TemplateType.ListReportObjectPageV4;\n    }\n    // else try to determine template type from routing targets\n    const templateType = determineV4TemplateFromPages(v4Pages);\n    if (!templateType) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOTEMPLATE', { section: ManifestSection.ui5 }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing', 'targets']\n            }\n        });\n    }\n    return templateType;\n}\n\n/**\n * Determines the template type, based on the given manifest entries of the app\n * @param manifest - the manifest.json file\n * @param {FioriElementsVersion} fioriElementsVersion - OData or FE version\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @returns {TemplateType} the template type\n */\nexport function getTemplateTypeFromManifest(\n    manifest: Manifest,\n    fioriElementsVersion: FioriElementsVersion,\n    logger: ExtensionLogger\n): TemplateType | undefined {\n    let templateType: TemplateType;\n    if (manifest[ManifestSection.ovp]) {\n        templateType = TemplateType.OverviewPageV2;\n    } else if (fioriElementsVersion === FioriElementsVersion.v2) {\n        templateType = determineV2Template(manifest, logger);\n    } else if (fioriElementsVersion === FioriElementsVersion.v4) {\n        templateType = determineV4Template(manifest, logger);\n    } else {\n        if (!templateType) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOFE'),\n                location: {\n                    path: MANIFESTPATH\n                }\n            });\n        }\n    }\n    return templateType;\n}\n\n/**\n * Adds title and description to a section or header section in an app schema\n * @param facet - intermediate facet structure comprising annotation information\n * @param section - section in the app schema\n * @param facetKey - key of the facet\n */\nexport function addSectionTitleAndDescription(facet: FacetConfig, section: Definition, facetKey: string): void {\n    if (facet?.ID) {\n        section.title = FacetTitlePrefix + facet.ID;\n        section[SchemaTag.key] = `ID: ${facet.ID}`;\n    } else {\n        section.title = facetKey.replace(/@com.sap/g, 'com.sap');\n    }\n    // Description\n    if (facet?.Label) {\n        section.description = facet.Label;\n    } else if (facet?.ID) {\n        section.description = facet.ID;\n    } else {\n        section.description = facetKey.substring(facetKey.lastIndexOf('.') + 1);\n    }\n}\n\n/**\n * Adds target title or description to a section or header section in an app schema\n * @param facet - intermediate facet structure comprising annotation information\n * @param section - section in the app schema\n * @param facetKey - key of the facet\n */\nexport function addTargetTitleAndSectionDescription(facet: FacetConfig, section: Definition, facetKey: string): void {\n    addSectionTitleAndDescription(facet, section, facetKey);\n    if (facet?.Label) {\n        section.description = facet?.Label;\n    } else if (facet?.['Title']) {\n        section.description = facet['Title'];\n    } else if (facet?.target?.['Title']) {\n        section.description = facet.target['Title'];\n    }\n}\n\n/**\n * Creates a default object for a new section or subsection, and adds the ID as title if present.\n * @param facet Facet configuration, to be analyzed\n * @returns the new section object\n */\nexport function createDefaultSection(appSchema: Definition, facet: FacetConfig, facetKey: string): Definition {\n    if (!facet) {\n        return undefined;\n    }\n    let section: Definition;\n    if (appSchema.definitions.ObjectPageSection) {\n        //base type in V2, with properties\n        section = JSON.parse(JSON.stringify(appSchema.definitions.ObjectPageSection));\n    } else {\n        section = {\n            type: 'object',\n            properties: {},\n            additionalProperties: false\n        };\n        section[SchemaTag.isViewNode] = true;\n    }\n    section[SchemaTag.annotationPath] = facet.annotationPath;\n    addSectionTitleAndDescription(facet, section, facetKey);\n    return section;\n}\n\n/**\n * Retrieve page section data(so far id/key and label/description).\n * @param {EntityType} entityType The actual entityType\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param {FioriElementsVersion} oDataVersion - OData version\n * @param {boolean} [checkUnresolvableFacets=false] - Check and avoid facets and sections without ID and Target.\n * @returns {FacetSection[]} - Array of facets or sections\n */\nexport function getObjectPageFacetSection(\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    logger?: ExtensionLogger,\n    oDataVersion = FioriElementsVersion.v2,\n    checkUnresolvableFacets = false\n): FacetSection[] {\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    let sections: FacetSection[] = [];\n    if (entityType) {\n        const facetAnnotation =\n            alias && entityType.annotations && entityType.annotations[alias] && entityType.annotations[alias].Facets;\n\n        if (facetAnnotation) {\n            sections = facetAnnotation.reduce(function (\n                result: FacetSection[],\n                item:\n                    | AnnotationTerm<CollectionFacet>\n                    | AnnotationTerm<ReferenceFacet>\n                    | AnnotationTerm<ReferenceURLFacet>\n            ) {\n                if (checkUnresolvableFacets && !item['ID'] && !('Target' in item && item['Target'])) {\n                    return result;\n                }\n                const section: FacetSection = getSectionFacet(\n                    item,\n                    entityType,\n                    oDataServiceAVT,\n                    logger,\n                    oDataVersion,\n                    true\n                );\n                if (section) {\n                    result.push(section);\n                }\n                return result;\n            },\n            sections);\n        }\n        return sections;\n    }\n}\n\n/**\n * Cleans empty sub-structures from the export result for manifest\n * @param manifest - manifest.json part of the export result\n * @param path  - path in the manifest\n * @param targetAnnotation - target annotation (optional, in case of sections, subsections)\n * @param targetAnnotationEncoded - encoded version of the target annotation, as represented in the manifest\n */\nexport const deleteEmptyStructure = (\n    manifest: object,\n    path: string,\n    targetAnnotation?: string,\n    targetAnnotationEncoded?: string\n): void => {\n    if (!path) {\n        return;\n    }\n    let manifestSection = manifest;\n    const pathArray = path.split('/');\n    pathArray.forEach(function (element) {\n        const decodedElement =\n            targetAnnotationEncoded && targetAnnotationEncoded === element\n                ? targetAnnotation\n                : element.replace('??', '/');\n        if (!manifestSection[decodedElement]) {\n            return;\n        }\n        if (Object.keys(manifestSection[decodedElement]).length === 0) {\n            if (Array.isArray(manifestSection)) {\n                manifestSection.splice(Number(decodedElement), 1);\n            } else {\n                delete manifestSection[decodedElement];\n            }\n            pathArray.pop();\n            deleteEmptyStructure(manifest, pathArray.join('/'), targetAnnotation, targetAnnotationEncoded);\n            return;\n        }\n        manifestSection = manifestSection && manifestSection[decodedElement];\n    });\n};\n\n/**\n * Method which returns generic schema file name.\n * @param {SchemaType | PageType} schemaType Schema type or Page type.\n * @return {string} File name of generic schema.\n */\nconst getGenericSchemaFileName = (schemaType: SchemaType | PageType | PageTypeV4): string => {\n    if (schemaType === SchemaType.FreestylePage) {\n        return PageType.CustomPage;\n    }\n    return `${schemaType}`;\n};\n\n/**\n * Method which returns schema file name and path depending on passed schema or page type.\n * @param {SchemaType | PageType} schemaType Schema type or Page type.\n * @param {string} [entitySet] Entity set string.\n * @return {SchemaFilePath} File path info.\n */\nexport const getSchemaFilePath = (\n    schemaType: SchemaType | PageType | PageTypeV4,\n    entitySet?: string\n): SchemaFilePath => {\n    const schemaFile: SchemaFilePath = {\n        filename: '',\n        path: ''\n    };\n    switch (schemaType) {\n        // Application schema\n        case SchemaType.Application: {\n            // File name\n            schemaFile.filename = `App`;\n            // Full path\n            schemaFile.path = `./${DirName.Schemas}/${schemaFile.filename}`;\n            break;\n        }\n        // List report and object page\n        case SchemaType.ListReport:\n        case SchemaType.ObjectPage: {\n            // File name\n            schemaFile.filename = entitySet ? `${schemaType}_${entitySet}` : getGenericSchemaFileName(schemaType);\n            // Full path\n            schemaFile.path = `../${DirName.Schemas}/${schemaFile.filename}`;\n            break;\n        }\n        case PageTypeV4.FPMCustomPage: {\n            // File name\n            schemaFile.filename = getGenericSchemaFileName(PageTypeV4.CustomPage);\n            // Full path\n            schemaFile.path = `../${DirName.Schemas}/${schemaFile.filename}`;\n            break;\n        }\n        // Other page configs\n        default: {\n            // File name\n            schemaFile.filename = getGenericSchemaFileName(schemaType);\n            // Full path\n            schemaFile.path = `../${DirName.Schemas}/${schemaFile.filename}`;\n            break;\n        }\n    }\n    schemaFile.path += '.json';\n    return schemaFile;\n};\n\n/**\n * Method which generates id of page according to passed parameters.\n * @param appVersion - Fiori Elements version - V2 or V4.\n * @param pageType - Page type.\n * @param entitySet - Entity Set.\n * @param viewId - Custom page's viewId (optional).\n * @returns {string} Generated page id\n */\n\nexport function generatePageId(pageType: PageType | PageTypeV4, entitySet: string, viewId?: string): string {\n    if (pageType === PageType.CustomPage) {\n        const names = viewId && viewId.split('.');\n        return names && names[names.length - 1] + 'Page';\n    }\n    const parts: string[] = [];\n    parts.push(pageType);\n    if (entitySet) {\n        parts.push(entitySet);\n    }\n    return parts.join('_');\n}\n\nexport type NextDefinition = {\n    configObject?: object;\n    targetDefinition?: object;\n    title?: string;\n};\n\nfunction fillArrayFromAnyOfReference(\n    element: Definition,\n    appSchema: Definition,\n    currentConfigObject: object,\n    definitionArray: any[]\n) {\n    const $ref = element.$ref;\n    if ($ref) {\n        const definitionKey = $ref.split(DEFINITION_LINK_PREFIX)[1];\n        if (appSchema.definitions[definitionKey]) {\n            const controlProperty = appSchema.definitions[definitionKey]['controlProperty'];\n            if ($ref.includes(currentConfigObject[controlProperty])) {\n                definitionArray.push(definitionKey);\n            }\n        }\n    }\n}\n\n/**\n * Fills an array of next definitions from given references in the JSON schema\n * @param propertyDefinition - Definition of the current property in schema\n * @param currentConfigObject - Current object in the config JSON. Evaluated to get the right value of a controlling property,\n *                              for making the right choice in case of multiple options (anyOf)\n * @param appSchema - app-specific JSON schema\n * @returns an array of definitions to proceed with\n */\nfunction fillArrayFromPropertyDefinition(\n    propertyDefinition: Definition,\n    currentConfigObject: object,\n    appSchema: Definition\n): any[] {\n    const definitionArray = [];\n    if (propertyDefinition.$ref) {\n        definitionArray.push(propertyDefinition.$ref.split(DEFINITION_LINK_PREFIX)[1]);\n    } else if (propertyDefinition.anyOf) {\n        if (currentConfigObject) {\n            propertyDefinition.anyOf.forEach((element) => {\n                fillArrayFromAnyOfReference(element as Definition, appSchema, currentConfigObject, definitionArray);\n            });\n        }\n        if (definitionArray.length === 0) {\n            return undefined;\n        }\n    }\n    return definitionArray;\n}\n\n/**\n * Determines the next definition to be handled, based on the definition array.\n * It also creates the Metadata instance for the next definition, to subsequently access metadata like the syncRule\n * @param definitionArray - Array of definitions, as determined by fillArrayFromNextDefinition\n * @param appSchema - app-specific JSON schema\n * @param title - default title\n * @param currentConfigObject - Current object in the config JSON.\n * @param key - actual key\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n * @param pageType - page type\n * @param propertyDefinition - Definition of the current property in schema\n * @returns {NextDefinition} - Next target definition to process\n */\nfunction determineNextDefinitionFromDefinitionArray(\n    definitionArray: any[],\n    appSchema: object,\n    title: string,\n    currentConfigObject: object,\n    key: string,\n    factory: MetadataInstanceInterface,\n    pageType: PageType | PageTypeV4,\n    propertyDefinition: object\n): NextDefinition {\n    let nextDefinition: NextDefinition = {\n        configObject: undefined,\n        targetDefinition: {},\n        title: ''\n    };\n    if (definitionArray.length) {\n        const lastDefinition = definitionArray[definitionArray.length - 1];\n        nextDefinition.targetDefinition = appSchema['definitions'][lastDefinition];\n\n        if (nextDefinition?.targetDefinition?.['$ref'] || nextDefinition?.targetDefinition?.['type'] === 'array') {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            nextDefinition = getNextTargetDefinition(\n                appSchema,\n                title,\n                currentConfigObject,\n                nextDefinition.targetDefinition,\n                key,\n                factory,\n                pageType\n            );\n            return nextDefinition;\n        }\n        if (definitionArray.length > 1) {\n            definitionArray.forEach((element) => {\n                if (element !== '') {\n                    nextDefinition.targetDefinition['properties'] = {\n                        ...nextDefinition.targetDefinition['properties'],\n                        ...appSchema['definitions'][element]['properties']\n                    };\n                }\n            });\n        }\n        nextDefinition.title = nextDefinition?.targetDefinition?.['title']\n            ? nextDefinition.targetDefinition['title']\n            : title;\n        const factoryKey = lastDefinition?.split('<')[0];\n        const targetObject = currentConfigObject ? currentConfigObject : {};\n        nextDefinition.configObject = factory.createInstance(\n            pageType,\n            factoryKey,\n            targetObject,\n            nextDefinition?.targetDefinition?.['controlProperty']\n        );\n    } else {\n        //e.g. sections ==> loop over all properties = subsections or other\n        nextDefinition.targetDefinition = propertyDefinition;\n        nextDefinition.title = nextDefinition.targetDefinition['title']\n            ? nextDefinition.targetDefinition['title']\n            : key;\n        nextDefinition.configObject = currentConfigObject;\n    }\n    return nextDefinition;\n}\n\n/**\n * Recursive function to determine the next config part, next definition in the app schema and the title\n * @param appSchema - app-specific JSON schema\n * @param title - default title\n * @param currentConfigObject - current part of the configuration that gets traversed\n * @param propertyDefinition - definition of a given property in the app schema\n * @param key - actual key\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n * @param pageType - page type\n */\nexport function getNextTargetDefinition(\n    appSchema: object,\n    title: string,\n    currentConfigObject: object,\n    propertyDefinition: object,\n    key: string,\n    factory: MetadataInstanceInterface,\n    pageType: PageType | PageTypeV4\n): NextDefinition {\n    let nextDefinition: NextDefinition;\n    if (propertyDefinition['type'] === 'array') {\n        nextDefinition = getNextTargetDefinition(\n            appSchema,\n            title,\n            currentConfigObject,\n            propertyDefinition['items'],\n            key,\n            factory,\n            pageType\n        );\n        return nextDefinition;\n    }\n    const definitionArray = fillArrayFromPropertyDefinition(propertyDefinition, currentConfigObject, appSchema);\n    if (!definitionArray) {\n        return undefined;\n    }\n    nextDefinition = determineNextDefinitionFromDefinitionArray(\n        definitionArray,\n        appSchema,\n        title,\n        currentConfigObject,\n        key,\n        factory,\n        pageType,\n        propertyDefinition\n    );\n    return nextDefinition;\n}\n\n/**\n * Custom array merge function called by deepmerge's merge function\n *\n * @param {*} target Target array\n * @param {*} source Source array\n * @param {*} options options object provided by deepmerge's merge function\n * @returns\n */\nexport const arrayCombineMerge = (target, source, options): string[] => {\n    const destination = target.slice();\n    source.forEach((item, index) => {\n        if (typeof destination[index] === 'undefined') {\n            destination[index] = options.cloneUnlessOtherwiseSpecified(item, options);\n        } else if (options.isMergeableObject(item)) {\n            destination[index] = merge(target[index], item, options);\n        } else if (target.indexOf(item) === -1) {\n            destination.push(item);\n        }\n    });\n    return destination;\n};\n\n/**\n * Converts an enum into a CSV\n * @param {object} manifestSection - manifestSection where the key exists\n * @param {object} configPart - Property as mentioned in config file\n * @param {string} key - Property to be exported to manifest\n */\nexport function convertEnumToCSV(manifestSection, configPart, key: string): void {\n    manifestSection[key] = JSON.parse(JSON.stringify(configPart[key]));\n    // convert enum array to joined string\n    const field = configPart[key];\n    manifestSection[key] = field.join();\n}\n\n/**\n * Converts an action ID from the internal format (schema, config) to the stable ID representation\n * @param actionId - the (unique) internal format of the action ID\n * @returns the converted action ID\n */\nexport function convertActionKeyToStableId(actionId: string): string {\n    return (actionId.indexOf('??') > -1 ? actionId.split('??')[1] : actionId).replace(/@/g, '::');\n}\n\n/**\n * Method returns definition key for passed '$ref' property by removing 'definition' prefix\n * @param $ref - definition reference.\n * @returns Definition key.\n */\nexport function getDefinitionKey($ref: string): string {\n    return $ref.split(DEFINITION_LINK_PREFIX)[1];\n}\n", "export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "import defineProperty from \"./defineProperty.js\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}", "export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}", "export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}", "import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}", "export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}", "export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}", "import _typeof from '@babel/runtime/helpers/esm/typeof';\nimport _objectSpread from '@babel/runtime/helpers/esm/objectSpread';\nimport _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\nimport _possibleConstructorReturn from '@babel/runtime/helpers/esm/possibleConstructorReturn';\nimport _getPrototypeOf from '@babel/runtime/helpers/esm/getPrototypeOf';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inherits from '@babel/runtime/helpers/esm/inherits';\n\nvar consoleLogger = {\n  type: 'logger',\n  log: function log(args) {\n    this.output('log', args);\n  },\n  warn: function warn(args) {\n    this.output('warn', args);\n  },\n  error: function error(args) {\n    this.output('error', args);\n  },\n  output: function output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\n\nvar Logger = function () {\n  function Logger(concreteLogger) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Logger);\n\n    this.init(concreteLogger, options);\n  }\n\n  _createClass(Logger, [{\n    key: \"init\",\n    value: function init(concreteLogger) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.prefix = options.prefix || 'i18next:';\n      this.logger = concreteLogger || consoleLogger;\n      this.options = options;\n      this.debug = options.debug;\n    }\n  }, {\n    key: \"setDebug\",\n    value: function setDebug(bool) {\n      this.debug = bool;\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.forward(args, 'log', '', true);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.forward(args, 'warn', '', true);\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.forward(args, 'error', '');\n    }\n  }, {\n    key: \"deprecate\",\n    value: function deprecate() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n    }\n  }, {\n    key: \"forward\",\n    value: function forward(args, lvl, prefix, debugOnly) {\n      if (debugOnly && !this.debug) return null;\n      if (typeof args[0] === 'string') args[0] = \"\".concat(prefix).concat(this.prefix, \" \").concat(args[0]);\n      return this.logger[lvl](args);\n    }\n  }, {\n    key: \"create\",\n    value: function create(moduleName) {\n      return new Logger(this.logger, _objectSpread({}, {\n        prefix: \"\".concat(this.prefix, \":\").concat(moduleName, \":\")\n      }, this.options));\n    }\n  }]);\n\n  return Logger;\n}();\n\nvar baseLogger = new Logger();\n\nvar EventEmitter = function () {\n  function EventEmitter() {\n    _classCallCheck(this, EventEmitter);\n\n    this.observers = {};\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"on\",\n    value: function on(events, listener) {\n      var _this = this;\n\n      events.split(' ').forEach(function (event) {\n        _this.observers[event] = _this.observers[event] || [];\n\n        _this.observers[event].push(listener);\n      });\n      return this;\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      if (!this.observers[event]) return;\n\n      if (!listener) {\n        delete this.observers[event];\n        return;\n      }\n\n      this.observers[event] = this.observers[event].filter(function (l) {\n        return l !== listener;\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (this.observers[event]) {\n        var cloned = [].concat(this.observers[event]);\n        cloned.forEach(function (observer) {\n          observer.apply(void 0, args);\n        });\n      }\n\n      if (this.observers['*']) {\n        var _cloned = [].concat(this.observers['*']);\n\n        _cloned.forEach(function (observer) {\n          observer.apply(observer, [event].concat(args));\n        });\n      }\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nfunction defer() {\n  var res;\n  var rej;\n  var promise = new Promise(function (resolve, reject) {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(function (m) {\n    if (s[m]) t[m] = s[m];\n  });\n}\n\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n\n  var stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    var key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n  }\n\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\n\nfunction setPath(object, path, newValue) {\n  var _getLastOfPath = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath.obj,\n      k = _getLastOfPath.k;\n\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  var _getLastOfPath2 = getLastOfPath(object, path, Object),\n      obj = _getLastOfPath2.obj,\n      k = _getLastOfPath2.k;\n\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  var _getLastOfPath3 = getLastOfPath(object, path),\n      obj = _getLastOfPath3.obj,\n      k = _getLastOfPath3.k;\n\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  var value = getPath(data, key);\n\n  if (value !== undefined) {\n    return value;\n  }\n\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (var prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, function (s) {\n      return _entityMap[s];\n    });\n  }\n\n  return data;\n}\nvar isIE10 = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;\n\nfunction deepFind(obj, path) {\n  var keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  var paths = path.split(keySeparator);\n  var current = obj;\n\n  for (var i = 0; i < paths.length; ++i) {\n    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {\n      return undefined;\n    }\n\n    if (current[paths[i]] === undefined) {\n      var j = 2;\n      var p = paths.slice(i, i + j).join(keySeparator);\n      var mix = current[p];\n\n      while (mix === undefined && paths.length > i + j) {\n        j++;\n        p = paths.slice(i, i + j).join(keySeparator);\n        mix = current[p];\n      }\n\n      if (mix === undefined) return undefined;\n      if (typeof mix === 'string') return mix;\n      if (p && typeof mix[p] === 'string') return mix[p];\n      var joinedPath = paths.slice(i + j).join(keySeparator);\n      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);\n      return undefined;\n    }\n\n    current = current[paths[i]];\n  }\n\n  return current;\n}\n\nvar ResourceStore = function (_EventEmitter) {\n  _inherits(ResourceStore, _EventEmitter);\n\n  function ResourceStore(data) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n\n    _classCallCheck(this, ResourceStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceStore).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.data = data || {};\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    if (_this.options.ignoreJSONStructure === undefined) {\n      _this.options.ignoreJSONStructure = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(ResourceStore, [{\n    key: \"addNamespaces\",\n    value: function addNamespaces(ns) {\n      if (this.options.ns.indexOf(ns) < 0) {\n        this.options.ns.push(ns);\n      }\n    }\n  }, {\n    key: \"removeNamespaces\",\n    value: function removeNamespaces(ns) {\n      var index = this.options.ns.indexOf(ns);\n\n      if (index > -1) {\n        this.options.ns.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(lng, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n      var path = [lng, ns];\n      if (key && typeof key !== 'string') path = path.concat(key);\n      if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n      }\n\n      var result = getPath(this.data, path);\n      if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n      return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n    }\n  }, {\n    key: \"addResource\",\n    value: function addResource(lng, ns, key, value) {\n      var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        silent: false\n      };\n      var keySeparator = this.options.keySeparator;\n      if (keySeparator === undefined) keySeparator = '.';\n      var path = [lng, ns];\n      if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        value = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      setPath(this.data, path, value);\n      if (!options.silent) this.emit('added', lng, ns, key, value);\n    }\n  }, {\n    key: \"addResources\",\n    value: function addResources(lng, ns, resources) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        silent: false\n      };\n\n      for (var m in resources) {\n        if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n          silent: true\n        });\n      }\n\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"addResourceBundle\",\n    value: function addResourceBundle(lng, ns, resources, deep, overwrite) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n        silent: false\n      };\n      var path = [lng, ns];\n\n      if (lng.indexOf('.') > -1) {\n        path = lng.split('.');\n        deep = resources;\n        resources = ns;\n        ns = path[1];\n      }\n\n      this.addNamespaces(ns);\n      var pack = getPath(this.data, path) || {};\n\n      if (deep) {\n        deepExtend(pack, resources, overwrite);\n      } else {\n        pack = _objectSpread({}, pack, resources);\n      }\n\n      setPath(this.data, path, pack);\n      if (!options.silent) this.emit('added', lng, ns, resources);\n    }\n  }, {\n    key: \"removeResourceBundle\",\n    value: function removeResourceBundle(lng, ns) {\n      if (this.hasResourceBundle(lng, ns)) {\n        delete this.data[lng][ns];\n      }\n\n      this.removeNamespaces(ns);\n      this.emit('removed', lng, ns);\n    }\n  }, {\n    key: \"hasResourceBundle\",\n    value: function hasResourceBundle(lng, ns) {\n      return this.getResource(lng, ns) !== undefined;\n    }\n  }, {\n    key: \"getResourceBundle\",\n    value: function getResourceBundle(lng, ns) {\n      if (!ns) ns = this.options.defaultNS;\n      if (this.options.compatibilityAPI === 'v1') return _objectSpread({}, {}, this.getResource(lng, ns));\n      return this.getResource(lng, ns);\n    }\n  }, {\n    key: \"getDataByLanguage\",\n    value: function getDataByLanguage(lng) {\n      return this.data[lng];\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.data;\n    }\n  }]);\n\n  return ResourceStore;\n}(EventEmitter);\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor: function addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle: function handle(processors, value, key, options, translator) {\n    var _this = this;\n\n    processors.forEach(function (processor) {\n      if (_this.processors[processor]) value = _this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nvar checkedLoadedFor = {};\n\nvar Translator = function (_EventEmitter) {\n  _inherits(Translator, _EventEmitter);\n\n  function Translator(services) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Translator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Translator).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, _assertThisInitialized(_this));\n    _this.options = options;\n\n    if (_this.options.keySeparator === undefined) {\n      _this.options.keySeparator = '.';\n    }\n\n    _this.logger = baseLogger.create('translator');\n    return _this;\n  }\n\n  _createClass(Translator, [{\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng) {\n      if (lng) this.language = lng;\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        interpolation: {}\n      };\n      var resolved = this.resolve(key, options);\n      return resolved && resolved.res !== undefined;\n    }\n  }, {\n    key: \"extractFromKey\",\n    value: function extractFromKey(key, options) {\n      var nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n      if (nsSeparator === undefined) nsSeparator = ':';\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n      var namespaces = options.ns || this.options.defaultNS;\n\n      if (nsSeparator && key.indexOf(nsSeparator) > -1) {\n        var m = key.match(this.interpolator.nestingRegexp);\n\n        if (m && m.length > 0) {\n          return {\n            key: key,\n            namespaces: namespaces\n          };\n        }\n\n        var parts = key.split(nsSeparator);\n        if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n        key = parts.join(keySeparator);\n      }\n\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      return {\n        key: key,\n        namespaces: namespaces\n      };\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(keys, options, lastKey) {\n      var _this2 = this;\n\n      if (_typeof(options) !== 'object' && this.options.overloadTranslationOptionHandler) {\n        options = this.options.overloadTranslationOptionHandler(arguments);\n      }\n\n      if (!options) options = {};\n      if (keys === undefined || keys === null) return '';\n      if (!Array.isArray(keys)) keys = [String(keys)];\n      var keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n\n      var _this$extractFromKey = this.extractFromKey(keys[keys.length - 1], options),\n          key = _this$extractFromKey.key,\n          namespaces = _this$extractFromKey.namespaces;\n\n      var namespace = namespaces[namespaces.length - 1];\n      var lng = options.lng || this.language;\n      var appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n\n      if (lng && lng.toLowerCase() === 'cimode') {\n        if (appendNamespaceToCIMode) {\n          var nsSeparator = options.nsSeparator || this.options.nsSeparator;\n          return namespace + nsSeparator + key;\n        }\n\n        return key;\n      }\n\n      var resolved = this.resolve(keys, options);\n      var res = resolved && resolved.res;\n      var resUsedKey = resolved && resolved.usedKey || key;\n      var resExactUsedKey = resolved && resolved.exactUsedKey || key;\n      var resType = Object.prototype.toString.apply(res);\n      var noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n      var joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n      var handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n      var handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n\n      if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n        if (!options.returnObjects && !this.options.returnObjects) {\n          if (!this.options.returnedObjectHandler) {\n            this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n          }\n\n          return this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, _objectSpread({}, options, {\n            ns: namespaces\n          })) : \"key '\".concat(key, \" (\").concat(this.language, \")' returned an object instead of string.\");\n        }\n\n        if (keySeparator) {\n          var resTypeIsArray = resType === '[object Array]';\n          var copy = resTypeIsArray ? [] : {};\n          var newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n\n          for (var m in res) {\n            if (Object.prototype.hasOwnProperty.call(res, m)) {\n              var deepKey = \"\".concat(newKeyToUse).concat(keySeparator).concat(m);\n              copy[m] = this.translate(deepKey, _objectSpread({}, options, {\n                joinArrays: false,\n                ns: namespaces\n              }));\n              if (copy[m] === deepKey) copy[m] = res[m];\n            }\n          }\n\n          res = copy;\n        }\n      } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n        res = res.join(joinArrays);\n        if (res) res = this.extendTranslation(res, keys, options, lastKey);\n      } else {\n        var usedDefault = false;\n        var usedKey = false;\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var hasDefaultValue = Translator.hasDefaultValue(options);\n        var defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count) : '';\n        var defaultValue = options[\"defaultValue\".concat(defaultValueSuffix)] || options.defaultValue;\n\n        if (!this.isValidLookup(res) && hasDefaultValue) {\n          usedDefault = true;\n          res = defaultValue;\n        }\n\n        if (!this.isValidLookup(res)) {\n          usedKey = true;\n          res = key;\n        }\n\n        var updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n\n        if (usedKey || usedDefault || updateMissing) {\n          this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n\n          if (keySeparator) {\n            var fk = this.resolve(key, _objectSpread({}, options, {\n              keySeparator: false\n            }));\n            if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n          }\n\n          var lngs = [];\n          var fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n\n          if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n            for (var i = 0; i < fallbackLngs.length; i++) {\n              lngs.push(fallbackLngs[i]);\n            }\n          } else if (this.options.saveMissingTo === 'all') {\n            lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n          } else {\n            lngs.push(options.lng || this.language);\n          }\n\n          var send = function send(l, k, fallbackValue) {\n            if (_this2.options.missingKeyHandler) {\n              _this2.options.missingKeyHandler(l, namespace, k, updateMissing ? fallbackValue : res, updateMissing, options);\n            } else if (_this2.backendConnector && _this2.backendConnector.saveMissing) {\n              _this2.backendConnector.saveMissing(l, namespace, k, updateMissing ? fallbackValue : res, updateMissing, options);\n            }\n\n            _this2.emit('missingKey', l, namespace, k, res);\n          };\n\n          if (this.options.saveMissing) {\n            if (this.options.saveMissingPlurals && needsPluralHandling) {\n              lngs.forEach(function (language) {\n                _this2.pluralResolver.getSuffixes(language).forEach(function (suffix) {\n                  send([language], key + suffix, options[\"defaultValue\".concat(suffix)] || defaultValue);\n                });\n              });\n            } else {\n              send(lngs, key, defaultValue);\n            }\n          }\n        }\n\n        res = this.extendTranslation(res, keys, options, resolved, lastKey);\n        if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = \"\".concat(namespace, \":\").concat(key);\n        if (usedKey && this.options.parseMissingKeyHandler) res = this.options.parseMissingKeyHandler(res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"extendTranslation\",\n    value: function extendTranslation(res, key, options, resolved, lastKey) {\n      var _this3 = this;\n\n      if (this.i18nFormat && this.i18nFormat.parse) {\n        res = this.i18nFormat.parse(res, options, resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n          resolved: resolved\n        });\n      } else if (!options.skipInterpolation) {\n        if (options.interpolation) this.interpolator.init(_objectSpread({}, options, {\n          interpolation: _objectSpread({}, this.options.interpolation, options.interpolation)\n        }));\n        var skipOnVariables = options.interpolation && options.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;\n        var nestBef;\n\n        if (skipOnVariables) {\n          var nb = res.match(this.interpolator.nestingRegexp);\n          nestBef = nb && nb.length;\n        }\n\n        var data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n        if (this.options.interpolation.defaultVariables) data = _objectSpread({}, this.options.interpolation.defaultVariables, data);\n        res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n\n        if (skipOnVariables) {\n          var na = res.match(this.interpolator.nestingRegexp);\n          var nestAft = na && na.length;\n          if (nestBef < nestAft) options.nest = false;\n        }\n\n        if (options.nest !== false) res = this.interpolator.nest(res, function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          if (lastKey && lastKey[0] === args[0] && !options.context) {\n            _this3.logger.warn(\"It seems you are nesting recursively key: \".concat(args[0], \" in key: \").concat(key[0]));\n\n            return null;\n          }\n\n          return _this3.translate.apply(_this3, args.concat([key]));\n        }, options);\n        if (options.interpolation) this.interpolator.reset();\n      }\n\n      var postProcess = options.postProcess || this.options.postProcess;\n      var postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n\n      if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n        res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? _objectSpread({\n          i18nResolved: resolved\n        }, options) : options, this);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"resolve\",\n    value: function resolve(keys) {\n      var _this4 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var found;\n      var usedKey;\n      var exactUsedKey;\n      var usedLng;\n      var usedNS;\n      if (typeof keys === 'string') keys = [keys];\n      keys.forEach(function (k) {\n        if (_this4.isValidLookup(found)) return;\n\n        var extracted = _this4.extractFromKey(k, options);\n\n        var key = extracted.key;\n        usedKey = key;\n        var namespaces = extracted.namespaces;\n        if (_this4.options.fallbackNS) namespaces = namespaces.concat(_this4.options.fallbackNS);\n        var needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n        var needsContextHandling = options.context !== undefined && typeof options.context === 'string' && options.context !== '';\n        var codes = options.lngs ? options.lngs : _this4.languageUtils.toResolveHierarchy(options.lng || _this4.language, options.fallbackLng);\n        namespaces.forEach(function (ns) {\n          if (_this4.isValidLookup(found)) return;\n          usedNS = ns;\n\n          if (!checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] && _this4.utils && _this4.utils.hasLoadedNamespace && !_this4.utils.hasLoadedNamespace(usedNS)) {\n            checkedLoadedFor[\"\".concat(codes[0], \"-\").concat(ns)] = true;\n\n            _this4.logger.warn(\"key \\\"\".concat(usedKey, \"\\\" for languages \\\"\").concat(codes.join(', '), \"\\\" won't get resolved as namespace \\\"\").concat(usedNS, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n          }\n\n          codes.forEach(function (code) {\n            if (_this4.isValidLookup(found)) return;\n            usedLng = code;\n            var finalKey = key;\n            var finalKeys = [finalKey];\n\n            if (_this4.i18nFormat && _this4.i18nFormat.addLookupKeys) {\n              _this4.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n            } else {\n              var pluralSuffix;\n              if (needsPluralHandling) pluralSuffix = _this4.pluralResolver.getSuffix(code, options.count);\n              if (needsPluralHandling && needsContextHandling) finalKeys.push(finalKey + pluralSuffix);\n              if (needsContextHandling) finalKeys.push(finalKey += \"\".concat(_this4.options.contextSeparator).concat(options.context));\n              if (needsPluralHandling) finalKeys.push(finalKey += pluralSuffix);\n            }\n\n            var possibleKey;\n\n            while (possibleKey = finalKeys.pop()) {\n              if (!_this4.isValidLookup(found)) {\n                exactUsedKey = possibleKey;\n                found = _this4.getResource(code, ns, possibleKey, options);\n              }\n            }\n          });\n        });\n      });\n      return {\n        res: found,\n        usedKey: usedKey,\n        exactUsedKey: exactUsedKey,\n        usedLng: usedLng,\n        usedNS: usedNS\n      };\n    }\n  }, {\n    key: \"isValidLookup\",\n    value: function isValidLookup(res) {\n      return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n    }\n  }, {\n    key: \"getResource\",\n    value: function getResource(code, ns, key) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n      return this.resourceStore.getResource(code, ns, key, options);\n    }\n  }], [{\n    key: \"hasDefaultValue\",\n    value: function hasDefaultValue(options) {\n      var prefix = 'defaultValue';\n\n      for (var option in options) {\n        if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return Translator;\n}(EventEmitter);\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nvar LanguageUtil = function () {\n  function LanguageUtil(options) {\n    _classCallCheck(this, LanguageUtil);\n\n    this.options = options;\n    this.whitelist = this.options.supportedLngs || false;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n\n  _createClass(LanguageUtil, [{\n    key: \"getScriptPartFromCode\",\n    value: function getScriptPartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return null;\n      var p = code.split('-');\n      if (p.length === 2) return null;\n      p.pop();\n      if (p[p.length - 1].toLowerCase() === 'x') return null;\n      return this.formatLanguageCode(p.join('-'));\n    }\n  }, {\n    key: \"getLanguagePartFromCode\",\n    value: function getLanguagePartFromCode(code) {\n      if (!code || code.indexOf('-') < 0) return code;\n      var p = code.split('-');\n      return this.formatLanguageCode(p[0]);\n    }\n  }, {\n    key: \"formatLanguageCode\",\n    value: function formatLanguageCode(code) {\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        var specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n        var p = code.split('-');\n\n        if (this.options.lowerCaseLng) {\n          p = p.map(function (part) {\n            return part.toLowerCase();\n          });\n        } else if (p.length === 2) {\n          p[0] = p[0].toLowerCase();\n          p[1] = p[1].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        } else if (p.length === 3) {\n          p[0] = p[0].toLowerCase();\n          if (p[1].length === 2) p[1] = p[1].toUpperCase();\n          if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n          if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n          if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n        }\n\n        return p.join('-');\n      }\n\n      return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(code) {\n      this.logger.deprecate('languageUtils.isWhitelisted', 'function \"isWhitelisted\" will be renamed to \"isSupportedCode\" in the next major - please make sure to rename it\\'s usage asap.');\n      return this.isSupportedCode(code);\n    }\n  }, {\n    key: \"isSupportedCode\",\n    value: function isSupportedCode(code) {\n      if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n        code = this.getLanguagePartFromCode(code);\n      }\n\n      return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n    }\n  }, {\n    key: \"getBestMatchFromCodes\",\n    value: function getBestMatchFromCodes(codes) {\n      var _this = this;\n\n      if (!codes) return null;\n      var found;\n      codes.forEach(function (code) {\n        if (found) return;\n\n        var cleanedLng = _this.formatLanguageCode(code);\n\n        if (!_this.options.supportedLngs || _this.isSupportedCode(cleanedLng)) found = cleanedLng;\n      });\n\n      if (!found && this.options.supportedLngs) {\n        codes.forEach(function (code) {\n          if (found) return;\n\n          var lngOnly = _this.getLanguagePartFromCode(code);\n\n          if (_this.isSupportedCode(lngOnly)) return found = lngOnly;\n          found = _this.options.supportedLngs.find(function (supportedLng) {\n            if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n          });\n        });\n      }\n\n      if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n      return found;\n    }\n  }, {\n    key: \"getFallbackCodes\",\n    value: function getFallbackCodes(fallbacks, code) {\n      if (!fallbacks) return [];\n      if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n      if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n      if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n      if (!code) return fallbacks[\"default\"] || [];\n      var found = fallbacks[code];\n      if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n      if (!found) found = fallbacks[this.formatLanguageCode(code)];\n      if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n      if (!found) found = fallbacks[\"default\"];\n      return found || [];\n    }\n  }, {\n    key: \"toResolveHierarchy\",\n    value: function toResolveHierarchy(code, fallbackCode) {\n      var _this2 = this;\n\n      var fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n      var codes = [];\n\n      var addCode = function addCode(c) {\n        if (!c) return;\n\n        if (_this2.isSupportedCode(c)) {\n          codes.push(c);\n        } else {\n          _this2.logger.warn(\"rejecting language code not found in supportedLngs: \".concat(c));\n        }\n      };\n\n      if (typeof code === 'string' && code.indexOf('-') > -1) {\n        if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n        if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n        if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n      } else if (typeof code === 'string') {\n        addCode(this.formatLanguageCode(code));\n      }\n\n      fallbackCodes.forEach(function (fc) {\n        if (codes.indexOf(fc) < 0) addCode(_this2.formatLanguageCode(fc));\n      });\n      return codes;\n    }\n  }]);\n\n  return LanguageUtil;\n}();\n\nvar sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nvar _rulesPluralsTypes = {\n  1: function _(n) {\n    return Number(n > 1);\n  },\n  2: function _(n) {\n    return Number(n != 1);\n  },\n  3: function _(n) {\n    return 0;\n  },\n  4: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function _(n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function _(n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function _(n) {\n    return Number(n >= 2);\n  },\n  10: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function _(n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function _(n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function _(n) {\n    return Number(n !== 0);\n  },\n  14: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function _(n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function _(n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function _(n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function _(n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function _(n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function _(n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\n\nfunction createRules() {\n  var rules = {};\n  sets.forEach(function (set) {\n    set.lngs.forEach(function (l) {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\n\nvar PluralResolver = function () {\n  function PluralResolver(languageUtils) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, PluralResolver);\n\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.rules = createRules();\n  }\n\n  _createClass(PluralResolver, [{\n    key: \"addRule\",\n    value: function addRule(lng, obj) {\n      this.rules[lng] = obj;\n    }\n  }, {\n    key: \"getRule\",\n    value: function getRule(code) {\n      return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n    }\n  }, {\n    key: \"needsPlural\",\n    value: function needsPlural(code) {\n      var rule = this.getRule(code);\n      return rule && rule.numbers.length > 1;\n    }\n  }, {\n    key: \"getPluralFormsOfKey\",\n    value: function getPluralFormsOfKey(code, key) {\n      return this.getSuffixes(code).map(function (suffix) {\n        return key + suffix;\n      });\n    }\n  }, {\n    key: \"getSuffixes\",\n    value: function getSuffixes(code) {\n      var _this = this;\n\n      var rule = this.getRule(code);\n\n      if (!rule) {\n        return [];\n      }\n\n      return rule.numbers.map(function (number) {\n        return _this.getSuffix(code, number);\n      });\n    }\n  }, {\n    key: \"getSuffix\",\n    value: function getSuffix(code, count) {\n      var _this2 = this;\n\n      var rule = this.getRule(code);\n\n      if (rule) {\n        var idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n        var suffix = rule.numbers[idx];\n\n        if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          if (suffix === 2) {\n            suffix = 'plural';\n          } else if (suffix === 1) {\n            suffix = '';\n          }\n        }\n\n        var returnSuffix = function returnSuffix() {\n          return _this2.options.prepend && suffix.toString() ? _this2.options.prepend + suffix.toString() : suffix.toString();\n        };\n\n        if (this.options.compatibilityJSON === 'v1') {\n          if (suffix === 1) return '';\n          if (typeof suffix === 'number') return \"_plural_\".concat(suffix.toString());\n          return returnSuffix();\n        } else if (this.options.compatibilityJSON === 'v2') {\n          return returnSuffix();\n        } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n          return returnSuffix();\n        }\n\n        return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n      }\n\n      this.logger.warn(\"no plural rule found for: \".concat(code));\n      return '';\n    }\n  }]);\n\n  return PluralResolver;\n}();\n\nvar Interpolator = function () {\n  function Interpolator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Interpolator);\n\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n\n    this.format = options.interpolation && options.interpolation.format || function (value) {\n      return value;\n    };\n\n    this.init(options);\n  }\n\n  _createClass(Interpolator, [{\n    key: \"init\",\n    value: function init() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!options.interpolation) options.interpolation = {\n        escapeValue: true\n      };\n      var iOpts = options.interpolation;\n      this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n      this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n      this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n      this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n      this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n      this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n      this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n      this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n      this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n      this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n      this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n      this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n      this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n      this.resetRegExp();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.options) this.init(this.options);\n    }\n  }, {\n    key: \"resetRegExp\",\n    value: function resetRegExp() {\n      var regexpStr = \"\".concat(this.prefix, \"(.+?)\").concat(this.suffix);\n      this.regexp = new RegExp(regexpStr, 'g');\n      var regexpUnescapeStr = \"\".concat(this.prefix).concat(this.unescapePrefix, \"(.+?)\").concat(this.unescapeSuffix).concat(this.suffix);\n      this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n      var nestingRegexpStr = \"\".concat(this.nestingPrefix, \"(.+?)\").concat(this.nestingSuffix);\n      this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(str, data, lng, options) {\n      var _this = this;\n\n      var match;\n      var value;\n      var replaces;\n      var defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n\n      function regexSafe(val) {\n        return val.replace(/\\$/g, '$$$$');\n      }\n\n      var handleFormat = function handleFormat(key) {\n        if (key.indexOf(_this.formatSeparator) < 0) {\n          var path = getPathWithDefaults(data, defaultData, key);\n          return _this.alwaysFormat ? _this.format(path, undefined, lng, _objectSpread({}, options, data, {\n            interpolationkey: key\n          })) : path;\n        }\n\n        var p = key.split(_this.formatSeparator);\n        var k = p.shift().trim();\n        var f = p.join(_this.formatSeparator).trim();\n        return _this.format(getPathWithDefaults(data, defaultData, k), f, lng, _objectSpread({}, options, data, {\n          interpolationkey: k\n        }));\n      };\n\n      this.resetRegExp();\n      var missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n      var skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables || this.options.interpolation.skipOnVariables;\n      var todos = [{\n        regex: this.regexpUnescape,\n        safeValue: function safeValue(val) {\n          return regexSafe(val);\n        }\n      }, {\n        regex: this.regexp,\n        safeValue: function safeValue(val) {\n          return _this.escapeValue ? regexSafe(_this.escape(val)) : regexSafe(val);\n        }\n      }];\n      todos.forEach(function (todo) {\n        replaces = 0;\n\n        while (match = todo.regex.exec(str)) {\n          value = handleFormat(match[1].trim());\n\n          if (value === undefined) {\n            if (typeof missingInterpolationHandler === 'function') {\n              var temp = missingInterpolationHandler(str, match, options);\n              value = typeof temp === 'string' ? temp : '';\n            } else if (skipOnVariables) {\n              value = match[0];\n              continue;\n            } else {\n              _this.logger.warn(\"missed to pass in variable \".concat(match[1], \" for interpolating \").concat(str));\n\n              value = '';\n            }\n          } else if (typeof value !== 'string' && !_this.useRawValueToEscape) {\n            value = makeString(value);\n          }\n\n          var safeValue = todo.safeValue(value);\n          str = str.replace(match[0], safeValue);\n\n          if (skipOnVariables) {\n            todo.regex.lastIndex += safeValue.length;\n            todo.regex.lastIndex -= match[0].length;\n          } else {\n            todo.regex.lastIndex = 0;\n          }\n\n          replaces++;\n\n          if (replaces >= _this.maxReplaces) {\n            break;\n          }\n        }\n      });\n      return str;\n    }\n  }, {\n    key: \"nest\",\n    value: function nest(str, fc) {\n      var _this2 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var match;\n      var value;\n\n      var clonedOptions = _objectSpread({}, options);\n\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n\n      function handleHasOptions(key, inheritedOptions) {\n        var sep = this.nestingOptionsSeparator;\n        if (key.indexOf(sep) < 0) return key;\n        var c = key.split(new RegExp(\"\".concat(sep, \"[ ]*{\")));\n        var optionsString = \"{\".concat(c[1]);\n        key = c[0];\n        optionsString = this.interpolate(optionsString, clonedOptions);\n        optionsString = optionsString.replace(/'/g, '\"');\n\n        try {\n          clonedOptions = JSON.parse(optionsString);\n          if (inheritedOptions) clonedOptions = _objectSpread({}, inheritedOptions, clonedOptions);\n        } catch (e) {\n          this.logger.warn(\"failed parsing options string in nesting for key \".concat(key), e);\n          return \"\".concat(key).concat(sep).concat(optionsString);\n        }\n\n        delete clonedOptions.defaultValue;\n        return key;\n      }\n\n      while (match = this.nestingRegexp.exec(str)) {\n        var formatters = [];\n        var doReduce = false;\n\n        if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n          var r = match[1].split(this.formatSeparator).map(function (elem) {\n            return elem.trim();\n          });\n          match[1] = r.shift();\n          formatters = r;\n          doReduce = true;\n        }\n\n        value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n        if (value && match[0] === str && typeof value !== 'string') return value;\n        if (typeof value !== 'string') value = makeString(value);\n\n        if (!value) {\n          this.logger.warn(\"missed to resolve \".concat(match[1], \" for nesting \").concat(str));\n          value = '';\n        }\n\n        if (doReduce) {\n          value = formatters.reduce(function (v, f) {\n            return _this2.format(v, f, options.lng, _objectSpread({}, options, {\n              interpolationkey: match[1].trim()\n            }));\n          }, value.trim());\n        }\n\n        str = str.replace(match[0], value);\n        this.regexp.lastIndex = 0;\n      }\n\n      return str;\n    }\n  }]);\n\n  return Interpolator;\n}();\n\nfunction remove(arr, what) {\n  var found = arr.indexOf(what);\n\n  while (found !== -1) {\n    arr.splice(found, 1);\n    found = arr.indexOf(what);\n  }\n}\n\nvar Connector = function (_EventEmitter) {\n  _inherits(Connector, _EventEmitter);\n\n  function Connector(backend, store, services) {\n    var _this;\n\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, Connector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.backend = backend;\n    _this.store = store;\n    _this.services = services;\n    _this.languageUtils = services.languageUtils;\n    _this.options = options;\n    _this.logger = baseLogger.create('backendConnector');\n    _this.state = {};\n    _this.queue = [];\n\n    if (_this.backend && _this.backend.init) {\n      _this.backend.init(services, options.backend, options);\n    }\n\n    return _this;\n  }\n\n  _createClass(Connector, [{\n    key: \"queueLoad\",\n    value: function queueLoad(languages, namespaces, options, callback) {\n      var _this2 = this;\n\n      var toLoad = [];\n      var pending = [];\n      var toLoadLanguages = [];\n      var toLoadNamespaces = [];\n      languages.forEach(function (lng) {\n        var hasAllNamespaces = true;\n        namespaces.forEach(function (ns) {\n          var name = \"\".concat(lng, \"|\").concat(ns);\n\n          if (!options.reload && _this2.store.hasResourceBundle(lng, ns)) {\n            _this2.state[name] = 2;\n          } else if (_this2.state[name] < 0) ; else if (_this2.state[name] === 1) {\n            if (pending.indexOf(name) < 0) pending.push(name);\n          } else {\n            _this2.state[name] = 1;\n            hasAllNamespaces = false;\n            if (pending.indexOf(name) < 0) pending.push(name);\n            if (toLoad.indexOf(name) < 0) toLoad.push(name);\n            if (toLoadNamespaces.indexOf(ns) < 0) toLoadNamespaces.push(ns);\n          }\n        });\n        if (!hasAllNamespaces) toLoadLanguages.push(lng);\n      });\n\n      if (toLoad.length || pending.length) {\n        this.queue.push({\n          pending: pending,\n          loaded: {},\n          errors: [],\n          callback: callback\n        });\n      }\n\n      return {\n        toLoad: toLoad,\n        pending: pending,\n        toLoadLanguages: toLoadLanguages,\n        toLoadNamespaces: toLoadNamespaces\n      };\n    }\n  }, {\n    key: \"loaded\",\n    value: function loaded(name, err, data) {\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      if (err) this.emit('failedLoading', lng, ns, err);\n\n      if (data) {\n        this.store.addResourceBundle(lng, ns, data);\n      }\n\n      this.state[name] = err ? -1 : 2;\n      var loaded = {};\n      this.queue.forEach(function (q) {\n        pushPath(q.loaded, [lng], ns);\n        remove(q.pending, name);\n        if (err) q.errors.push(err);\n\n        if (q.pending.length === 0 && !q.done) {\n          Object.keys(q.loaded).forEach(function (l) {\n            if (!loaded[l]) loaded[l] = [];\n\n            if (q.loaded[l].length) {\n              q.loaded[l].forEach(function (ns) {\n                if (loaded[l].indexOf(ns) < 0) loaded[l].push(ns);\n              });\n            }\n          });\n          q.done = true;\n\n          if (q.errors.length) {\n            q.callback(q.errors);\n          } else {\n            q.callback();\n          }\n        }\n      });\n      this.emit('loaded', loaded);\n      this.queue = this.queue.filter(function (q) {\n        return !q.done;\n      });\n    }\n  }, {\n    key: \"read\",\n    value: function read(lng, ns, fcName) {\n      var _this3 = this;\n\n      var tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 350;\n      var callback = arguments.length > 5 ? arguments[5] : undefined;\n      if (!lng.length) return callback(null, {});\n      return this.backend[fcName](lng, ns, function (err, data) {\n        if (err && data && tried < 5) {\n          setTimeout(function () {\n            _this3.read.call(_this3, lng, ns, fcName, tried + 1, wait * 2, callback);\n          }, wait);\n          return;\n        }\n\n        callback(err, data);\n      });\n    }\n  }, {\n    key: \"prepareLoading\",\n    value: function prepareLoading(languages, namespaces) {\n      var _this4 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!this.backend) {\n        this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n        return callback && callback();\n      }\n\n      if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n      if (typeof namespaces === 'string') namespaces = [namespaces];\n      var toLoad = this.queueLoad(languages, namespaces, options, callback);\n\n      if (!toLoad.toLoad.length) {\n        if (!toLoad.pending.length) callback();\n        return null;\n      }\n\n      toLoad.toLoad.forEach(function (name) {\n        _this4.loadOne(name);\n      });\n    }\n  }, {\n    key: \"load\",\n    value: function load(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {}, callback);\n    }\n  }, {\n    key: \"reload\",\n    value: function reload(languages, namespaces, callback) {\n      this.prepareLoading(languages, namespaces, {\n        reload: true\n      }, callback);\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(name) {\n      var _this5 = this;\n\n      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var s = name.split('|');\n      var lng = s[0];\n      var ns = s[1];\n      this.read(lng, ns, 'read', undefined, undefined, function (err, data) {\n        if (err) _this5.logger.warn(\"\".concat(prefix, \"loading namespace \").concat(ns, \" for language \").concat(lng, \" failed\"), err);\n        if (!err && data) _this5.logger.log(\"\".concat(prefix, \"loaded namespace \").concat(ns, \" for language \").concat(lng), data);\n\n        _this5.loaded(name, err, data);\n      });\n    }\n  }, {\n    key: \"saveMissing\",\n    value: function saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n        this.logger.warn(\"did not save key \\\"\".concat(key, \"\\\" as the namespace \\\"\").concat(namespace, \"\\\" was not yet loaded\"), 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        return;\n      }\n\n      if (key === undefined || key === null || key === '') return;\n\n      if (this.backend && this.backend.create) {\n        this.backend.create(languages, namespace, key, fallbackValue, null, _objectSpread({}, options, {\n          isUpdate: isUpdate\n        }));\n      }\n\n      if (!languages || !languages[0]) return;\n      this.store.addResource(languages[0], namespace, key, fallbackValue);\n    }\n  }]);\n\n  return Connector;\n}(EventEmitter);\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    whitelist: false,\n    nonExplicitWhitelist: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: true,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      var ret = {};\n      if (_typeof(args[1]) === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n\n      if (_typeof(args[2]) === 'object' || _typeof(args[3]) === 'object') {\n        var options = args[3] || args[2];\n        Object.keys(options).forEach(function (key) {\n          ret[key] = options[key];\n        });\n      }\n\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: function format(value, _format, lng, options) {\n        return value;\n      },\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: false\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n\n  if (options.whitelist) {\n    if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {\n      options.whitelist = options.whitelist.concat(['cimode']);\n    }\n\n    options.supportedLngs = options.whitelist;\n  }\n\n  if (options.nonExplicitWhitelist) {\n    options.nonExplicitSupportedLngs = options.nonExplicitWhitelist;\n  }\n\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n\n  return options;\n}\n\nfunction noop() {}\n\nvar I18n = function (_EventEmitter) {\n  _inherits(I18n, _EventEmitter);\n\n  function I18n() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, I18n);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(I18n).call(this));\n\n    if (isIE10) {\n      EventEmitter.call(_assertThisInitialized(_this));\n    }\n\n    _this.options = transformOptions(options);\n    _this.services = {};\n    _this.logger = baseLogger;\n    _this.modules = {\n      external: []\n    };\n\n    if (callback && !_this.isInitialized && !options.isClone) {\n      if (!_this.options.initImmediate) {\n        _this.init(options, callback);\n\n        return _possibleConstructorReturn(_this, _assertThisInitialized(_this));\n      }\n\n      setTimeout(function () {\n        _this.init(options, callback);\n      }, 0);\n    }\n\n    return _this;\n  }\n\n  _createClass(I18n, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      if (options.whitelist && !options.supportedLngs) {\n        this.logger.deprecate('whitelist', 'option \"whitelist\" will be renamed to \"supportedLngs\" in the next major - please make sure to rename this option asap.');\n      }\n\n      if (options.nonExplicitWhitelist && !options.nonExplicitSupportedLngs) {\n        this.logger.deprecate('whitelist', 'options \"nonExplicitWhitelist\" will be renamed to \"nonExplicitSupportedLngs\" in the next major - please make sure to rename this option asap.');\n      }\n\n      this.options = _objectSpread({}, get(), this.options, transformOptions(options));\n      this.format = this.options.interpolation.format;\n      if (!callback) callback = noop;\n\n      function createClassOnDemand(ClassOrObject) {\n        if (!ClassOrObject) return null;\n        if (typeof ClassOrObject === 'function') return new ClassOrObject();\n        return ClassOrObject;\n      }\n\n      if (!this.options.isClone) {\n        if (this.modules.logger) {\n          baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n        } else {\n          baseLogger.init(null, this.options);\n        }\n\n        var lu = new LanguageUtil(this.options);\n        this.store = new ResourceStore(this.options.resources, this.options);\n        var s = this.services;\n        s.logger = baseLogger;\n        s.resourceStore = this.store;\n        s.languageUtils = lu;\n        s.pluralResolver = new PluralResolver(lu, {\n          prepend: this.options.pluralSeparator,\n          compatibilityJSON: this.options.compatibilityJSON,\n          simplifyPluralSuffix: this.options.simplifyPluralSuffix\n        });\n        s.interpolator = new Interpolator(this.options);\n        s.utils = {\n          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n        };\n        s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n        s.backendConnector.on('*', function (event) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n\n        if (this.modules.languageDetector) {\n          s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n          s.languageDetector.init(s, this.options.detection, this.options);\n        }\n\n        if (this.modules.i18nFormat) {\n          s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n          if (s.i18nFormat.init) s.i18nFormat.init(this);\n        }\n\n        this.translator = new Translator(this.services, this.options);\n        this.translator.on('*', function (event) {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          _this2.emit.apply(_this2, [event].concat(args));\n        });\n        this.modules.external.forEach(function (m) {\n          if (m.init) m.init(_this2);\n        });\n      }\n\n      if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n        var codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n      }\n\n      if (!this.services.languageDetector && !this.options.lng) {\n        this.logger.warn('init: no languageDetector is used and no lng is defined');\n      }\n\n      var storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n      storeApi.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store;\n\n          return (_this2$store = _this2.store)[fcName].apply(_this2$store, arguments);\n        };\n      });\n      var storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n      storeApiChained.forEach(function (fcName) {\n        _this2[fcName] = function () {\n          var _this2$store2;\n\n          (_this2$store2 = _this2.store)[fcName].apply(_this2$store2, arguments);\n\n          return _this2;\n        };\n      });\n      var deferred = defer();\n\n      var load = function load() {\n        var finish = function finish(err, t) {\n          if (_this2.isInitialized) _this2.logger.warn('init: i18next is already initialized. You should call init just once!');\n          _this2.isInitialized = true;\n          if (!_this2.options.isClone) _this2.logger.log('initialized', _this2.options);\n\n          _this2.emit('initialized', _this2.options);\n\n          deferred.resolve(t);\n          callback(err, t);\n        };\n\n        if (_this2.languages && _this2.options.compatibilityAPI !== 'v1' && !_this2.isInitialized) return finish(null, _this2.t.bind(_this2));\n\n        _this2.changeLanguage(_this2.options.lng, finish);\n      };\n\n      if (this.options.resources || !this.options.initImmediate) {\n        load();\n      } else {\n        setTimeout(load, 0);\n      }\n\n      return deferred;\n    }\n  }, {\n    key: \"loadResources\",\n    value: function loadResources(language) {\n      var _this3 = this;\n\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n      var usedCallback = callback;\n      var usedLng = typeof language === 'string' ? language : this.language;\n      if (typeof language === 'function') usedCallback = language;\n\n      if (!this.options.resources || this.options.partialBundledLanguages) {\n        if (usedLng && usedLng.toLowerCase() === 'cimode') return usedCallback();\n        var toLoad = [];\n\n        var append = function append(lng) {\n          if (!lng) return;\n\n          var lngs = _this3.services.languageUtils.toResolveHierarchy(lng);\n\n          lngs.forEach(function (l) {\n            if (toLoad.indexOf(l) < 0) toLoad.push(l);\n          });\n        };\n\n        if (!usedLng) {\n          var fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n          fallbacks.forEach(function (l) {\n            return append(l);\n          });\n        } else {\n          append(usedLng);\n        }\n\n        if (this.options.preload) {\n          this.options.preload.forEach(function (l) {\n            return append(l);\n          });\n        }\n\n        this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);\n      } else {\n        usedCallback(null);\n      }\n    }\n  }, {\n    key: \"reloadResources\",\n    value: function reloadResources(lngs, ns, callback) {\n      var deferred = defer();\n      if (!lngs) lngs = this.languages;\n      if (!ns) ns = this.options.ns;\n      if (!callback) callback = noop;\n      this.services.backendConnector.reload(lngs, ns, function (err) {\n        deferred.resolve();\n        callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"use\",\n    value: function use(module) {\n      if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n      if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n\n      if (module.type === 'backend') {\n        this.modules.backend = module;\n      }\n\n      if (module.type === 'logger' || module.log && module.warn && module.error) {\n        this.modules.logger = module;\n      }\n\n      if (module.type === 'languageDetector') {\n        this.modules.languageDetector = module;\n      }\n\n      if (module.type === 'i18nFormat') {\n        this.modules.i18nFormat = module;\n      }\n\n      if (module.type === 'postProcessor') {\n        postProcessor.addPostProcessor(module);\n      }\n\n      if (module.type === '3rdParty') {\n        this.modules.external.push(module);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lng, callback) {\n      var _this4 = this;\n\n      this.isLanguageChangingTo = lng;\n      var deferred = defer();\n      this.emit('languageChanging', lng);\n\n      var done = function done(err, l) {\n        if (l) {\n          _this4.language = l;\n          _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n\n          _this4.translator.changeLanguage(l);\n\n          _this4.isLanguageChangingTo = undefined;\n\n          _this4.emit('languageChanged', l);\n\n          _this4.logger.log('languageChanged', l);\n        } else {\n          _this4.isLanguageChangingTo = undefined;\n        }\n\n        deferred.resolve(function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n        if (callback) callback(err, function () {\n          return _this4.t.apply(_this4, arguments);\n        });\n      };\n\n      var setLng = function setLng(lngs) {\n        if (!lng && !lngs && _this4.services.languageDetector) lngs = [];\n        var l = typeof lngs === 'string' ? lngs : _this4.services.languageUtils.getBestMatchFromCodes(lngs);\n\n        if (l) {\n          if (!_this4.language) {\n            _this4.language = l;\n            _this4.languages = _this4.services.languageUtils.toResolveHierarchy(l);\n          }\n\n          if (!_this4.translator.language) _this4.translator.changeLanguage(l);\n          if (_this4.services.languageDetector) _this4.services.languageDetector.cacheUserLanguage(l);\n        }\n\n        _this4.loadResources(l, function (err) {\n          done(err, l);\n        });\n      };\n\n      if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n        setLng(this.services.languageDetector.detect());\n      } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n        this.services.languageDetector.detect(setLng);\n      } else {\n        setLng(lng);\n      }\n\n      return deferred;\n    }\n  }, {\n    key: \"getFixedT\",\n    value: function getFixedT(lng, ns) {\n      var _this5 = this;\n\n      var fixedT = function fixedT(key, opts) {\n        var options;\n\n        if (_typeof(opts) !== 'object') {\n          for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n            rest[_key3 - 2] = arguments[_key3];\n          }\n\n          options = _this5.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n        } else {\n          options = _objectSpread({}, opts);\n        }\n\n        options.lng = options.lng || fixedT.lng;\n        options.lngs = options.lngs || fixedT.lngs;\n        options.ns = options.ns || fixedT.ns;\n        return _this5.t(key, options);\n      };\n\n      if (typeof lng === 'string') {\n        fixedT.lng = lng;\n      } else {\n        fixedT.lngs = lng;\n      }\n\n      fixedT.ns = ns;\n      return fixedT;\n    }\n  }, {\n    key: \"t\",\n    value: function t() {\n      var _this$translator;\n\n      return this.translator && (_this$translator = this.translator).translate.apply(_this$translator, arguments);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var _this$translator2;\n\n      return this.translator && (_this$translator2 = this.translator).exists.apply(_this$translator2, arguments);\n    }\n  }, {\n    key: \"setDefaultNamespace\",\n    value: function setDefaultNamespace(ns) {\n      this.options.defaultNS = ns;\n    }\n  }, {\n    key: \"hasLoadedNamespace\",\n    value: function hasLoadedNamespace(ns) {\n      var _this6 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.isInitialized) {\n        this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n        return false;\n      }\n\n      if (!this.languages || !this.languages.length) {\n        this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n        return false;\n      }\n\n      var lng = this.languages[0];\n      var fallbackLng = this.options ? this.options.fallbackLng : false;\n      var lastLng = this.languages[this.languages.length - 1];\n      if (lng.toLowerCase() === 'cimode') return true;\n\n      var loadNotPending = function loadNotPending(l, n) {\n        var loadState = _this6.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n\n        return loadState === -1 || loadState === 2;\n      };\n\n      if (options.precheck) {\n        var preResult = options.precheck(this, loadNotPending);\n        if (preResult !== undefined) return preResult;\n      }\n\n      if (this.hasResourceBundle(lng, ns)) return true;\n      if (!this.services.backendConnector.backend) return true;\n      if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n      return false;\n    }\n  }, {\n    key: \"loadNamespaces\",\n    value: function loadNamespaces(ns, callback) {\n      var _this7 = this;\n\n      var deferred = defer();\n\n      if (!this.options.ns) {\n        callback && callback();\n        return Promise.resolve();\n      }\n\n      if (typeof ns === 'string') ns = [ns];\n      ns.forEach(function (n) {\n        if (_this7.options.ns.indexOf(n) < 0) _this7.options.ns.push(n);\n      });\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"loadLanguages\",\n    value: function loadLanguages(lngs, callback) {\n      var deferred = defer();\n      if (typeof lngs === 'string') lngs = [lngs];\n      var preloaded = this.options.preload || [];\n      var newLngs = lngs.filter(function (lng) {\n        return preloaded.indexOf(lng) < 0;\n      });\n\n      if (!newLngs.length) {\n        if (callback) callback();\n        return Promise.resolve();\n      }\n\n      this.options.preload = preloaded.concat(newLngs);\n      this.loadResources(function (err) {\n        deferred.resolve();\n        if (callback) callback(err);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"dir\",\n    value: function dir(lng) {\n      if (!lng) lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;\n      if (!lng) return 'rtl';\n      var rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam'];\n      return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';\n    }\n  }, {\n    key: \"createInstance\",\n    value: function createInstance() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      return new I18n(options, callback);\n    }\n  }, {\n    key: \"cloneInstance\",\n    value: function cloneInstance() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n      var mergedOptions = _objectSpread({}, this.options, options, {\n        isClone: true\n      });\n\n      var clone = new I18n(mergedOptions);\n      var membersToCopy = ['store', 'services', 'language'];\n      membersToCopy.forEach(function (m) {\n        clone[m] = _this8[m];\n      });\n      clone.services = _objectSpread({}, this.services);\n      clone.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      clone.translator = new Translator(clone.services, clone.options);\n      clone.translator.on('*', function (event) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          args[_key4 - 1] = arguments[_key4];\n        }\n\n        clone.emit.apply(clone, [event].concat(args));\n      });\n      clone.init(mergedOptions, callback);\n      clone.translator.options = clone.options;\n      clone.translator.backendConnector.services.utils = {\n        hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n      };\n      return clone;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        options: this.options,\n        store: this.store,\n        language: this.language,\n        languages: this.languages\n      };\n    }\n  }]);\n\n  return I18n;\n}(EventEmitter);\n\nvar i18next = new I18n();\n\nexport default i18next;\n", "import type { ExtensionLogger, LogSeverity, Location } from '@sap/ux-specification-types';\nimport { LogSeverityLabel } from '@sap/ux-specification-types';\n\n/**\n * Internal representation of one log entry\n */\ninterface LogEntry {\n    severity: LogSeverity;\n    message: string;\n    location?: Location;\n}\n\n/**\n * Function to create a new log entry and add it to the logger.\n * If no logger is passed, puts the message to the console\n * @param logger - the logger instance\n * @param message - the log message\n * @param meta - option list of strings/objects\n */\nexport const log = (logger: ExtensionLogger, logEntry: LogEntry, ...meta: (object | string | number)[]): void => {\n    if (logger) {\n        logger[logEntry.severity](logEntry.message, logEntry.location, ...meta);\n    } else {\n        if (logEntry.location) {\n            if (logEntry.location.range) {\n                console.log(\n                    `${LogSeverityLabel[logEntry.severity]}: ${logEntry.message}, location: ${\n                        logEntry.location.path\n                    }, ${logEntry.location.range}`,\n                    ...meta\n                );\n            } else {\n                console.log(\n                    `${LogSeverityLabel[logEntry.severity]}: ${logEntry.message}, location: ${logEntry.location.path}`,\n                    ...meta\n                );\n            }\n        } else {\n            console.log(`${LogSeverityLabel[logEntry.severity]}: ${logEntry.message}`, ...meta);\n        }\n    }\n};\n", "import type { AnnotationTerm, ConvertedMetadata, EntityType } from '@sap-ux/vocabularies-types';\nimport type { LineItem } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { UIAnnotationTerms, UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type {\n    v2,\n    FacetConfigs,\n    FacetConfig,\n    FileData,\n    GenerateAppSchemaParameters,\n    ExtensionLogger\n} from '@sap/ux-specification-types';\nimport {\n    ArtifactType,\n    ControlType,\n    SectionType,\n    FioriElementsVersion,\n    ManifestSection,\n    METADATAPATH,\n    FacetBase,\n    FacetTitlePrefix,\n    DefinitionName,\n    MANIFESTPATH,\n    LogSeverity,\n    PropertyName,\n    SchemaTag\n} from '@sap/ux-specification-types';\nimport type {} from '../../common';\nimport {\n    getObjectPageFacets,\n    createDefaultSection,\n    getObjectPageFacetSection,\n    DEFINITION_LINK_PREFIX,\n    addFieldsType,\n    addDefinitionForRelatedFacetKeys,\n    addSectionTitleAndDescription,\n    handleAddressContact,\n    handleForm,\n    addPatternForBindingChangeOfEnumOP,\n    getActionNameAndId,\n    addFooterActions,\n    addHeaderActions,\n    replaceAlias,\n    addCommonHeaderSchema,\n    prepareRef,\n    determineEntitySetOfFacet,\n    addEnumForSingleTabVariant\n} from '../../common';\nimport { addLineItemsType, addTableColumnExtensions } from './utils';\nimport { findObjectPageV2 } from '../import';\nimport { log } from '../../../extensionLogger';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../i18n/i18n';\nimport { SectionTypeV2 } from '../types';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Adds flexChange properties for sub(sections)\n * @param appSchema - app schema in general\n * @param schemaSection - current section\n * @param property - property that will be enhanced\n * @param sectionType - type of section\n */\nfunction addFlexChangeForSection(\n    appSchema: Definition,\n    schemaSection: Definition,\n    property: string,\n    sectionType: SectionTypeV2\n) {\n    schemaSection.properties[property][SchemaTag.artifactType] = ArtifactType.FlexChange;\n    let controlType: ControlType;\n    switch (sectionType) {\n        case SectionTypeV2.Section:\n        case SectionTypeV2.SectionForm:\n        case SectionTypeV2.SectionChart:\n        case SectionTypeV2.SectionTable:\n            controlType = ControlType.Section;\n            break;\n        case SectionTypeV2.SubSection:\n            controlType = ControlType.SubSection;\n            break;\n        case SectionTypeV2.SubSectionForm:\n            controlType = ControlType.Group;\n            break;\n        case SectionTypeV2.SubSectionChart:\n            controlType = ControlType.SmartChart;\n            break;\n        case SectionTypeV2.SubSectionTable:\n            controlType = ControlType.SmartTable;\n            break;\n    }\n    if (!controlType) {\n        return;\n    }\n    addPatternForBindingChangeOfEnumOP(appSchema, schemaSection, property);\n    schemaSection.properties[property][SchemaTag.controlType] = controlType;\n}\n\n/**\n * Callback for adding a single action to headerActions of V2\n * @param {EntityType} entityType - current entity type\n * @param {object} appSchema Schema of the app\n * @param actionAnnotation - annotation as present in AVT ConvertedMetadata\n * @param headerActions - list of header actions, to be enhanced\n */\nfunction addHeaderActionCallBackV2(\n    entityType,\n    appSchema: Definition,\n    actionAnnotation: any,\n    headerActions: {\n        type: string;\n        properties: {};\n        description: string;\n        additionalProperties: boolean;\n        isViewNode: boolean;\n    },\n    oDataServiceAVT: ConvertedMetadata\n): any {\n    return (item, index) => {\n        if (!item['Determining'] && item.$Type === UIAnnotationTypes.DataFieldForAction) {\n            const action = replaceAlias(item.Action, oDataServiceAVT);\n            const { actionName, actionId } = getActionNameAndId(action, entityType);\n            const description = item.Label || actionName;\n            const actionDefinitionKey = `HeaderAction<${prepareRef(actionId)}>`;\n            appSchema.definitions[actionDefinitionKey] = JSON.parse(\n                JSON.stringify(appSchema.definitions['HeaderAction'])\n            );\n            const convertedIdentification = actionAnnotation.fullyQualifiedName.replace(\n                `@${UIAnnotationTerms.Identification}`,\n                `/@${UIAnnotationTerms.Identification}`\n            );\n            appSchema.definitions[actionDefinitionKey][\n                SchemaTag.annotationPath\n            ] = `/${convertedIdentification}/${index}`;\n            (appSchema.definitions[actionDefinitionKey] as Definition).description = description;\n            appSchema.definitions[actionDefinitionKey][SchemaTag.key] = `Action: ${actionName}`;\n\n            headerActions.properties[actionId] = {\n                $ref: `${DEFINITION_LINK_PREFIX}${actionDefinitionKey}`\n            };\n        }\n    };\n}\n\n/**\n * Method ensures that definitions for custom columns are created for passed entitySet.\n * @param {object} appSchema App schema in general\n * @param {object} manifest manifest.json of the app\n * @param {string} entitySetName Entity set name.\n * @param {string} entityTypeName Entity type name.\n * @param {ConvertedMetadata} oDataServiceAVT Complete service information, as returned by annotation vocabularies tool\n * @param {FacetConfig} facet information\n * @param {string} facetKey - key of the facet, as listed in FacetConfigs\n * @param {FileData[]} [fragments] Array with XML fragments.\n * @return {string} Name of custom columns definition.\n */\nfunction ensureCustomColumnDefinitionExists(\n    appSchema: Definition,\n    manifest: object,\n    entitySetName: string,\n    entityTypeName: string,\n    oDataServiceAVT: ConvertedMetadata,\n    facet: FacetConfig,\n    facetKey: string,\n    fragments?: FileData[]\n): string {\n    let suffix, customColumnsDefinitionName;\n    if (facet.ID && facet.Label) {\n        suffix = facet.ID + facet.Label.replace(/\\s+/g, '');\n    } else if (facet.ID) {\n        suffix = facet.ID;\n    } else if (facet.Label) {\n        suffix = facet.Label.replace(/\\s+/g, '');\n    }\n    if (suffix) {\n        customColumnsDefinitionName = `${DefinitionName.CustomColumns}<${entitySetName}><${facetKey}><${suffix}>`;\n    } else {\n        customColumnsDefinitionName = `${DefinitionName.CustomColumns}<${entitySetName}><${facetKey}>`;\n    }\n\n    if (appSchema.definitions[customColumnsDefinitionName]) {\n        // Definition is already created - we do not need to create it again\n        return customColumnsDefinitionName;\n    }\n    // Create type specific 'TableCustomColumn' definition - use entity set as type.\n    const customColumnDefinitionName = `${DefinitionName.CustomColumn}<${entitySetName}>`;\n    const customColumnDefinition = JSON.parse(JSON.stringify(appSchema.definitions['TableCustomColumn']));\n    appSchema.definitions[customColumnDefinitionName] = customColumnDefinition;\n    // Update definitions for type specific custom columns\n    const pageKeys = [];\n    const entityType = oDataServiceAVT?.entityTypes.find((et) => et.name === entityTypeName);\n    const v2Page = findObjectPageV2(manifest[ManifestSection.generic].pages, entitySetName, pageKeys);\n    addTableColumnExtensions(\n        appSchema,\n        entityType,\n        v2Page,\n        manifest,\n        fragments,\n        customColumnsDefinitionName,\n        customColumnDefinitionName\n    );\n    return customColumnsDefinitionName;\n}\n\n/**\n * Method fills new app schema section with properties.\n * @param {Definition} appSchema App schema in general\n * @param {object} appSchemaSection app schema section to be filled\n * @param {SectionTypeV2} sectionType (sub)section type\n * @param {SectionTypeV2} mainSectionType main section type, used to fill app schema section\n */\nfunction addAppSchemaDefinition(\n    appSchema: Definition,\n    appSchemaSection: Definition,\n    sectionType: SectionTypeV2,\n    mainSectionType: SectionTypeV2\n): void {\n    appSchemaSection.properties = JSON.parse(\n        JSON.stringify((appSchema.definitions[mainSectionType] as Definition).properties)\n    );\n    if (appSchemaSection.properties.visible) {\n        addFlexChangeForSection(appSchema, appSchemaSection, 'visible', sectionType);\n    }\n}\n\n/**\n * Method adds reference to section property key.\n * @param {object} sections - schema of current sections definition\n * @param {string} key section key which will contain the reference\n * @param {string} definitionKey key which the section should point to\n */\nfunction addSectionReference(sections: Definition, key: string, definitionKey: string) {\n    sections.properties[key] = { $ref: `${DEFINITION_LINK_PREFIX}${definitionKey}` };\n}\n\n/**\n * Reuse function for all table types, copies and adapts the generic definition\n * @param tableType - Table type\n * @param facetId - facet ID, as derived for the given section\n * @param facet - facet or section information\n * @param appSchema - app-specific schema, to be updated\n */\nfunction addTableDefinition(tableType: string, facetId: string, facet: FacetConfig, appSchema: Definition): void {\n    const schemaId = prepareRef(`${tableType}<${facetId}>`);\n    appSchema.definitions[schemaId] = JSON.parse(JSON.stringify(appSchema.definitions[tableType]));\n    appSchema.definitions[schemaId]['properties']['columns']['$ref'] = DEFINITION_LINK_PREFIX + facetId;\n    (appSchema.definitions[schemaId] as Definition).properties.toolBar[\n        '$ref'\n    ] = `${DEFINITION_LINK_PREFIX}ObjectPageToolBar<${facetId}>`;\n    appSchema.definitions[schemaId][SchemaTag.annotationPath] = facet.annotationPath;\n    if (facet.ID !== undefined) {\n        (appSchema.definitions[schemaId] as Definition).title = FacetTitlePrefix + facet.ID;\n        appSchema.definitions[schemaId][SchemaTag.key] = `ID: ${facet.ID}`;\n    }\n    (appSchema.definitions[schemaId] as Definition).description = DefinitionName.Table;\n\n    //adjust quickVariantSelection\n    (appSchema.definitions[schemaId] as Definition).properties['quickVariantSelection'][\n        '$ref'\n    ] = `${DEFINITION_LINK_PREFIX}QuickVariantSelectionOP<${facetId}>`;\n    appSchema.definitions[`QuickVariantSelectionOP<${facetId}>`] = JSON.parse(\n        JSON.stringify(appSchema.definitions['QuickVariantSelectionOP'])\n    );\n    appSchema.definitions[`QuickVariant<${facetId}>`] = JSON.parse(\n        JSON.stringify(appSchema.definitions['QuickVariant'])\n    );\n    (\n        (appSchema.definitions[`QuickVariantSelectionOP<${facetId}>`] as Definition).properties.variants as Definition\n    ).patternProperties['^[0-9]+$']['$ref'] = `${DEFINITION_LINK_PREFIX}QuickVariant<${facetId}>`;\n\n    addEnumForSingleTabVariant(facet.entityType, appSchema, `QuickVariant<${facetId}>`);\n}\n\n/**\n * Adds definitions for line items in object page sections to the app schema\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {string} facetKey - key of the facet, as listed in FacetConfigs\n * @param {Definition} appSchema - app schema in general\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {FacetConfigs} facets - list of all facets\n * @param {SectionTypeV2} sectionType (sub)section type\n */\nfunction handleLineItem(\n    generateParameters: GenerateAppSchemaParameters,\n    facetKey: string,\n    appSchema: Definition,\n    facet: FacetConfig,\n    facets: FacetConfigs,\n    sectionType?: SectionTypeV2\n): void {\n    if (facet.base !== FacetBase.LineItem || !facetKey) {\n        //no properties\n        return;\n    }\n    const navigationProperty = facetKey.split('::')[0];\n    const schemaIdForOpSection = `${sectionType}<${facetKey}>`;\n\n    appSchema.definitions[schemaIdForOpSection] = createDefaultSection(appSchema, facet, facetKey);\n    const appSchemaSection = appSchema.definitions[schemaIdForOpSection] as Definition;\n    addAppSchemaDefinition(appSchema, appSchemaSection, sectionType, SectionTypeV2.SectionTable);\n    appSchemaSection.properties.table = JSON.parse(\n        JSON.stringify(appSchema.definitions[SectionTypeV2.SectionTable]['properties'][PropertyName.table])\n    );\n    (appSchemaSection.properties.table as Definition).anyOf = [\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageResponsiveTableWithMultiSelect<${facetKey}>`\n        },\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageResponsiveTableWithInlineDelete<${facetKey}>`\n        },\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageAnalyticalTable<${facetKey}>`\n        },\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageGridTable<${facetKey}>`\n        },\n        {\n            $ref: `${DEFINITION_LINK_PREFIX}ObjectPageTreeTable<${facetKey}>`\n        }\n    ];\n    appSchemaSection[SchemaTag.annotationPath] = facet.annotationPath;\n    addSectionTitleAndDescription(facet, appSchemaSection, facetKey);\n\n    addTableDefinition('ObjectPageResponsiveTableWithMultiSelect', facetKey, facet, appSchema);\n    addTableDefinition('ObjectPageResponsiveTableWithInlineDelete', facetKey, facet, appSchema);\n    addTableDefinition('ObjectPageGridTable', facetKey, facet, appSchema);\n    addTableDefinition('ObjectPageTreeTable', facetKey, facet, appSchema);\n    addTableDefinition('ObjectPageAnalyticalTable', facetKey, facet, appSchema);\n\n    let customColumnDefinitionKey;\n    // Find target entity\n    const targetEntitySet = determineEntitySetOfFacet(facet, generateParameters.serviceAVT);\n    if (targetEntitySet) {\n        // Make sure that custom columns definitions are created for passed entity\n        customColumnDefinitionKey = ensureCustomColumnDefinitionExists(\n            appSchema,\n            generateParameters.manifest,\n            targetEntitySet.name,\n            facet.entityType.name,\n            generateParameters.serviceAVT,\n            facet,\n            facetKey,\n            generateParameters.fragments\n        );\n    }\n    for (const facetItem in facets) {\n        if (facets[facetItem].base === FacetBase.LineItem && facetItem.includes(navigationProperty)) {\n            addLineItemsType(\n                appSchema,\n                facets[facetItem].target as AnnotationTerm<LineItem>,\n                facets[facetItem].entityType,\n                facetItem,\n                customColumnDefinitionKey\n            );\n        }\n    }\n}\n\n/**\n * Adds definitions for subsections in object page sections to the app schema\n * @param {Definition} appSchema - app schema in general\n * @param {string} definitionKey - key of app schema definition to be filled\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetId - key of the facet, as listed in FacetConfigs\n * @param {SectionTypeV2} sectionType (sub)section type\n */\nfunction handleSubSection(\n    appSchema: Definition,\n    definitionKey: string,\n    facet: FacetConfig,\n    facetId: string,\n    sectionType: SectionTypeV2\n): void {\n    appSchema.definitions[definitionKey] = createDefaultSection(appSchema, facet, facetId);\n    const appSchemaSection = appSchema.definitions[definitionKey] as Definition;\n    addAppSchemaDefinition(appSchema, appSchemaSection, sectionType, SectionTypeV2.SubSection);\n    appSchemaSection.properties.subsections = {\n        type: 'object',\n        description: 'Subsections',\n        properties: {},\n        additionalProperties: false\n    };\n    appSchemaSection.properties.subsections[SchemaTag.isViewNode] = true;\n}\n\n/**\n * Method fills new chart section with properties.\n * @param {Definition} appSchema App schema in general\n * @param {string} definitionKey - key of app schema definition to be filled\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetKey - facet key.\n * @param {SectionTypeV2} sectionType (sub)section type\n */\nfunction handleSectionChart(\n    appSchema: Definition,\n    definitionKey: string,\n    facet: FacetConfig,\n    facetKey: string,\n    sectionType: SectionTypeV2\n) {\n    appSchema.definitions[definitionKey] = createDefaultSection(appSchema, facet, facetKey);\n    const appSchemaSection = appSchema.definitions[definitionKey] as Definition;\n    addAppSchemaDefinition(appSchema, appSchemaSection, sectionType, SectionTypeV2.SectionChart);\n}\n\n/**\n * Method fills new form section in app schema with properties.\n * @param {Definition} appSchema App schema in general\n * @param {string} definitionKey - key of app schema definition to be filled\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetKey - facet key.\n * @param {SectionTypeV2} sectionType (sub)section type\n * @return {object} returns filled form section in app schema.\n */\nfunction handleAppSchemaFormSection(\n    appSchema: Definition,\n    definitionKey: string,\n    facet: FacetConfig,\n    facetKey: string,\n    sectionType: SectionTypeV2\n) {\n    appSchema.definitions[definitionKey] = createDefaultSection(appSchema, facet, facetKey);\n    const appSchemaSection = appSchema.definitions[definitionKey] as Definition;\n    addAppSchemaDefinition(appSchema, appSchemaSection, sectionType, SectionTypeV2.SectionForm);\n    appSchemaSection[SchemaTag.annotationPath] = facet.annotationPath;\n    appSchemaSection[SchemaTag.isViewNode] = true;\n    return appSchemaSection;\n}\n\n/**\n * Mapping of facet type to (sub)section type to enable correct further handling\n * @param {FacetBase} facetType - facet type to be mapped\n * @param {boolean} isSubSection - if section is subsection of section\n * @return {SectionTypeV2} sectionType (sub)section type\n */\nfunction getSectionType(facetType: FacetBase, isSubSection: boolean) {\n    const sectionTypeMapping = new Map<FacetBase, SectionTypeV2>([\n        [FacetBase.CollectionFacet, SectionTypeV2.Section],\n        [FacetBase.LineItem, SectionTypeV2.SectionTable],\n        [FacetBase.Chart, SectionTypeV2.SectionChart],\n        [FacetBase.Address, SectionTypeV2.SectionAddress],\n        [FacetBase.Contact, SectionTypeV2.SectionContact],\n        [FacetBase.Form, SectionTypeV2.SectionForm],\n        [FacetBase.Identification, SectionTypeV2.SectionForm]\n    ]);\n    const subSectionTypeMapping = new Map<FacetBase, SectionTypeV2>([\n        [FacetBase.CollectionFacet, SectionTypeV2.SubSection],\n        [FacetBase.LineItem, SectionTypeV2.SubSectionTable],\n        [FacetBase.Chart, SectionTypeV2.SubSectionChart],\n        [FacetBase.Address, SectionTypeV2.SubSectionAddress],\n        [FacetBase.Contact, SectionTypeV2.SubSectionContact],\n        [FacetBase.Form, SectionTypeV2.SubSectionForm],\n        [FacetBase.Identification, SectionTypeV2.SubSectionForm]\n    ]);\n    if (isSubSection) {\n        return subSectionTypeMapping.get(facetType);\n    } else {\n        return sectionTypeMapping.get(facetType);\n    }\n}\n\n/**\n * Method returns reference key, special handling of (sub)sections\n * @param {FacetConfig} facet facet or section information\n * @param {string} facetKey - facet key.\n * @param {SectionTypeV2} sectionType (sub)section type\n * @return {string} reference key\n */\nfunction getReferenceKey(facet, facetKey, sectionType): string {\n    let referenceKey = facetKey;\n    if (sectionType === (SectionTypeV2.Section || SectionTypeV2.SubSection)) {\n        referenceKey = referenceKey.replace(`@${UIAnnotationTerms.Facets}`, facet.base);\n    }\n    return `${referenceKey}`;\n}\n\n/**\n * Creates a section definition in app schema.\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {FacetConfigs} facets - list of all facets.\n * @param {string} facetKey - facet key.\n * @param {object} sections - schema of current sections definition.\n * @param {Definition} appSchema - app specific schema that potentially gets enhanced.\n * @param {boolean} isSubSection - if section is subsection of section\n */\nfunction addSection(\n    generateParameters: GenerateAppSchemaParameters,\n    facets: FacetConfigs,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    isSubSection = false\n): void {\n    const facet: FacetConfig = facets[facetKey];\n    const sectionType = getSectionType(facet.base, isSubSection);\n    const referenceKey = getReferenceKey(facet, facetKey, sectionType);\n    const definitionKey = `${sectionType}<${referenceKey}>`;\n    addSectionReference(sections, referenceKey, definitionKey);\n    switch (sectionType) {\n        case SectionTypeV2.Section:\n        case SectionTypeV2.SubSection: {\n            //handle collection facets\n            isSubSection = true;\n            handleSubSection(appSchema, definitionKey, facet, facetKey, sectionType);\n            const subSections = (appSchema.definitions[definitionKey] as Definition).properties\n                .subsections as Definition;\n            for (const key in facet.facets) {\n                addSection(generateParameters, facet.facets, key, subSections, appSchema, isSubSection);\n            }\n            break;\n        }\n        case SectionTypeV2.SectionTable:\n        case SectionTypeV2.SubSectionTable: {\n            handleLineItem(generateParameters, facetKey, appSchema, facet, facets, sectionType);\n            //add fields for createWithParameterDialog\n            const floorplanSuffix = 'OP';\n            addFieldsType(appSchema, facet.entityType, floorplanSuffix);\n            break;\n        }\n        case SectionTypeV2.SectionChart:\n        case SectionTypeV2.SubSectionChart: {\n            //handle reference facet (if comprising chart)\n            handleSectionChart(appSchema, definitionKey, facet, facetKey, sectionType);\n\n            break;\n        }\n        case SectionTypeV2.SectionForm:\n        case SectionTypeV2.SubSectionForm: {\n            const withActions = facet.base !== FacetBase.Identification;\n            const appSchemaSection = handleAppSchemaFormSection(appSchema, definitionKey, facet, facetKey, sectionType);\n            handleForm(SectionType.Section, facet, appSchemaSection, appSchema, FioriElementsVersion.v2, withActions);\n            break;\n        }\n        case SectionTypeV2.SectionAddress:\n        case SectionTypeV2.SectionContact: {\n            handleAddressContact(facet, facetKey, sections, appSchema, SectionType.Section, undefined, 'V2');\n            break;\n        }\n        case SectionTypeV2.SubSectionAddress:\n        case SectionTypeV2.SubSectionContact: {\n            handleAddressContact(\n                facet,\n                facetKey,\n                sections,\n                appSchema,\n                SectionType.Section,\n                SectionType.SubSection,\n                'V2'\n            );\n            break;\n        }\n        default: {\n            // Other facets -> only default properties of ObjectPageSection\n            sections.properties[facetKey] = createDefaultSection(appSchema, facet, facetKey);\n        }\n    }\n}\n\n/**\n * Adds the sections to the app schema\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {Definition} appSchema - app specific schema that potentially gets enhanced\n * @param {EntityType} entityType - current entity type\n * @param {string} entitySetName Entity set name\n * @param {SapUiAppPagesV2} pages - list of (manifest) pages\n */\nfunction addSections(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    entityType: EntityType,\n    entitySetName: string,\n    pages: v2.SapUiAppPagesV2\n): void {\n    const sections = appSchema.definitions[DefinitionName.Sections] as Definition;\n    sections[SchemaTag.isViewNode] = true;\n    if (entityType) {\n        sections[SchemaTag.annotationPath] = `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.Facets}`;\n    }\n\n    if (!pages) {\n        return;\n    }\n    // Get facet annotations\n    const facets: FacetConfigs = getObjectPageFacets(\n        entityType,\n        generateParameters.serviceAVT,\n        FioriElementsVersion.v2,\n        generateParameters.logger\n    );\n    if (!facets || Object.keys(facets).length === 0) {\n        return;\n    }\n\n    // Loop on all pages, look for the right entity set\n    for (const key in pages) {\n        const element = pages[key];\n        if (entitySetName.includes(element.entitySet)) {\n            // Loop on all facets (of the given entitySet)\n            for (const facetKey in facets) {\n                addSection(generateParameters, facets, facetKey, sections, appSchema);\n            }\n        } else {\n            addSections(generateParameters, appSchema, entityType, entitySetName, element.pages);\n        }\n    }\n\n    // Add custom sections\n    const customSections = appSchema.definitions['CustomSections'] as Definition;\n    for (const name in customSections.properties) {\n        sections.properties[name] = customSections.properties[name];\n    }\n}\n\n/**\n * Add Object Page Header to app-specific schema\n *\n * @param {object} appSchema Schema of the app\n * @param {EntityType} entityType - current entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n */\nfunction addHeader(appSchema: object, entityType: EntityType, oDataServiceAVT: ConvertedMetadata): void {\n    addCommonHeaderSchema(appSchema, entityType);\n\n    //Add header actions\n    addHeaderActions(appSchema, entityType, oDataServiceAVT, addHeaderActionCallBackV2);\n}\n\n/**\n * Adds the related facets keys 'enum' to the app schema\n * @param schema - app specific schema that potentially gets enhanced\n * @param {EntityType} entityType - current entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nfunction addRelatedFacetKeysType(\n    schema: object,\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    logger?: ExtensionLogger\n): void {\n    // Find sections from annotation\n    // And create new definition in schema as enum with description\n    const facetSections = getObjectPageFacetSection(entityType, oDataServiceAVT, logger, undefined, true);\n    if (facetSections) {\n        addDefinitionForRelatedFacetKeys(\n            schema,\n            ['ObjectPageCustomSectionFragment', 'ObjectPageCustomSectionView'],\n            facetSections,\n            ['ID', 'key']\n        );\n    }\n}\n\n/**\n * Generates an app specific schema out of the generic schema.\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema - generic JSON schema of an object page\n * @param entityTypeName - the base entity type of the given page\n *\n * @returns the app specific JSON schema\n */\nexport function generateObjectPageSchemaV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object,\n    entityTypeName: string\n): object {\n    // Initialize i18next\n    initI18n();\n\n    const appSchema = JSON.parse(JSON.stringify(genericSchema)) as Definition;\n\n    // Custom sections as part of sections\n    const additionalSections = {};\n    for (const name in appSchema.definitions['CustomSections']['properties']) {\n        additionalSections[name] = (appSchema.definitions['CustomSections'] as Definition).properties[name];\n    }\n\n    // Change reference to generated sections\n    appSchema.properties[PropertyName.sections] = {\n        $ref: DEFINITION_LINK_PREFIX + 'Sections'\n    };\n\n    const entitySet =\n        generateParameters.serviceAVT?.entitySets &&\n        generateParameters.serviceAVT.entitySets.find(\n            (es) => es.entityType.name === entityTypeName || es.name === entityTypeName\n        );\n    if (!entitySet) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYSET4NAME', { entityType: entityTypeName }),\n            location: {\n                path: METADATAPATH\n            }\n        });\n        return appSchema;\n    }\n    const entityType = entitySet?.entityType;\n    generateParameters.entitySet = entitySet;\n    const pages = generateParameters.manifest[ManifestSection.generic].pages;\n    if (!pages) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOPAGES', { appId: generateParameters.manifest['sap.app']['id'] }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return appSchema;\n    }\n\n    // Add header\n    addHeader(appSchema, entityType, generateParameters.serviceAVT);\n\n    // Add sections\n    appSchema.definitions[DefinitionName.Sections] = {\n        type: 'object',\n        properties: {},\n        description: 'Sections',\n        additionalProperties: false\n    };\n    addSections(generateParameters, appSchema, entityType, entitySet.name, pages);\n\n    // Custom section facets\n    addRelatedFacetKeysType(appSchema, entityType, generateParameters.serviceAVT, generateParameters.logger);\n\n    if (!appSchema.definitions.Sections) {\n        if (appSchema.definitions.RelatedFacetKeys && appSchema.definitions.RelatedFacetKeys['oneOf'].length) {\n            // If related facets exists - then we need sections definition\n            appSchema.definitions.Sections = {\n                type: 'object',\n                properties: additionalSections,\n                additionalProperties: false\n            };\n            appSchema.definitions.Sections[SchemaTag.isViewNode] = true;\n        } else {\n            delete appSchema.properties[PropertyName.sections];\n        }\n    }\n    addFooterActions(appSchema, generateParameters);\n\n    // Eliminate generic definitions\n    delete appSchema.definitions['GenericSections'];\n    delete appSchema.definitions['GenericSubSections'];\n    delete appSchema.definitions['ObjectPageSectionTableV2'];\n    delete appSchema.definitions['GenericColumns'];\n    delete appSchema.definitions['TableColumnAction'];\n    delete appSchema.definitions['ObjectPageSectionFormV2'];\n    delete appSchema.definitions['ObjectPageSectionTableV2'];\n    delete appSchema.definitions['ObjectPageSubSectionV2'];\n    delete appSchema.definitions['ObjectPageResponsiveTableWithMultiSelect'];\n    delete appSchema.definitions['ObjectPageResponsiveTableWithInlineDelete'];\n    delete appSchema.definitions['ObjectPageAnalyticalTable'];\n    delete appSchema.definitions['ObjectPageTreeTable'];\n    delete appSchema.definitions['ObjectPageGridTable'];\n    delete appSchema.definitions['ObjectPageToolBar'];\n    delete appSchema.definitions['ObjectPageToolBarActions'];\n    delete appSchema.definitions['ObjectPageForm'];\n    delete appSchema.definitions['ObjectPageFormFields'];\n    delete appSchema.definitions['ObjectPageFormActions'];\n\n    return appSchema;\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { ControlTypeFunction } from '@sap/ux-specification-types';\nimport {\n    FacetBase,\n    FacetTitlePrefix,\n    BindingPropertyRegexAsString,\n    VOCWITHSLASH,\n    PropertyName\n} from '@sap/ux-specification-types';\nimport { DEFINITION_LINK_PREFIX } from '../utils';\n\n/**\n * General export rule, joining all given breadcrumbs to the base ID\n * @param baseId - base ID, first part of the stable ID\n * @param idBreadcrumbs - array of ID parts\n */\nexport const buildControlIdFromParent = (baseId: string, idBreadcrumbs: string[]): string => {\n    return baseId + idBreadcrumbs.join('::');\n};\n\n/**\n * Export rule for pages\n * @param baseId - base ID, first part of the stable ID\n * @param idBreadcrumbs - array of ID parts\n * @param breadcrumbs - array of breadcrumbs\n */\nexport const buildControlIdForPage = (baseId: string, idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    return baseId + idBreadcrumbs.join('::') + breadcrumbs[0];\n};\n\n/**\n * Converts the section id to the right string for the stable id:\n * If the corresponsing facet has ID maintained, we must take this ID. If ID is not present, take the navigation path.\n * @param sectionId - old ID that shall get converted\n * @param breadcrumbs - array of breadcrumbs\n * @param title - title from JSON schema, comprising the facet ID\n */\nexport const convertSectionId = (sectionId: string, title: string): string => {\n    let convertedSectionId: string;\n    const prefix: string = FacetTitlePrefix;\n    if (title !== undefined && title.includes(prefix)) {\n        convertedSectionId = title.split(prefix)[1];\n    } else {\n        convertedSectionId = sectionId.replace(new RegExp('/@', 'g'), '::').replace(/@com.sap/g, 'com.sap');\n    }\n    return convertedSectionId;\n};\n\nexport function escapeId(sParam: string): string {\n    /* escape all characters not allowed in stable ids with :<hexcode>\n     * as we use : as escape character, also escape :\n     */\n    return sParam.replace(/[^-A-Za-z0-9_.:]/g, function (c) {\n        const sCode = c.charCodeAt(0).toString(16);\n        return `:${sCode.length === 1 ? '0' : ''}${sCode}`;\n    });\n}\n\n/**\n * Binding Change values, will be added on object pages  */\nexport enum BindingValue {\n    Editable = '{ui>/editable}',\n    NotEditable = '{= !${ui>/editable}}'\n}\n\n/**\n * Consolidates the list of id's and other breadcrumbs into one list, for finding the right stable ID for a column\n * @param idBreadcrumbs - array of ID parts\n * @param localBreadcrumbs - array of breadcrumbs\n * @param title - (section) title = facet ID\n * @returns the consolidated breadcrumbs' list\n */\nfunction mapBreadcrumbs(idBreadcrumbs: string[], localBreadcrumbs: string[], title: string) {\n    let sectionId: string;\n    idBreadcrumbs = idBreadcrumbs.map(function (item) {\n        if (item === PropertyName.sections) {\n            for (let index = 0; index < localBreadcrumbs.length; index++) {\n                const breadcrumb = localBreadcrumbs[index];\n                if (breadcrumb === PropertyName.sections) {\n                    sectionId = localBreadcrumbs[index + 1];\n                    if (sectionId.indexOf(FacetBase.LineItem) !== -1) {\n                        localBreadcrumbs[index + 1] = convertSectionId(sectionId, title) + '::Table';\n                        return localBreadcrumbs[index + 1];\n                    }\n                }\n            }\n        }\n        return item;\n    });\n    return { idBreadcrumbs };\n}\n\n/**\n * Export rule for table columns\n * @param baseId - base ID, first part of the stable ID\n * @param idBreadcrumbs - array of ID parts\n * @param breadcrumbs - array of breadcrumbs\n * @param controlType - controlType function of ecorators, not used here\n * @param title - title from JSON schema, comprising the facet ID\n */\nexport const buildColumnControlId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    title: string\n): string => {\n    let tableId = 'listReport'; //default\n    const localBreadcrumbs = [...breadcrumbs];\n\n    ({ idBreadcrumbs } = mapBreadcrumbs(idBreadcrumbs, localBreadcrumbs, title));\n    if (localBreadcrumbs[0] === PropertyName.sections) {\n        tableId = localBreadcrumbs[1]\n            .replace(/::com.sap.vocabularies/g, VOCWITHSLASH)\n            .replace(/::@com.sap.vocabularies/g, VOCWITHSLASH);\n    } else if (idBreadcrumbs[0] === PropertyName.table) {\n        tableId = idBreadcrumbs[0];\n    }\n    const lastIdPart = localBreadcrumbs[localBreadcrumbs.length - 1]\n        .replace(/::com.sap.vocabularies/g, VOCWITHSLASH)\n        .replace(/::@com.sap.vocabularies/g, VOCWITHSLASH)\n        .replace('sTarget/@', 'sTarget::@')\n        .replace('/', ':2f');\n    let fullId: string;\n    const splitPoint = lastIdPart.indexOf(':::');\n    if (lastIdPart.startsWith('DataField') && splitPoint > -1) {\n        fullId = `${baseId}template:::TableColumn:::${lastIdPart.substring(\n            0,\n            splitPoint\n        )}:::sSmartTableId::${tableId.replace('::Table', ':3a:3aTable')}:::${lastIdPart.substring(splitPoint + 3)}`;\n    } else {\n        fullId = `${baseId}${idBreadcrumbs.join('::')}-${lastIdPart}`;\n    }\n    return escapeId(fullId);\n};\n\n/**\n * Split up action breadcrumb and return different parts from it\n * @param breadcrumbs - array of breadcrumbs\n * @returns {object} - actionType, semanticObjectId, actionId of action\n */\nexport const getActionBreadcrumbParts = (\n    breadcrumbs: string[]\n): { actionType: string | undefined; semanticObjectId: string | undefined; actionId: string } => {\n    const actionIdParts = breadcrumbs[breadcrumbs.length - 1].split(':::');\n    let actionType, semanticObjectId, actionId;\n    if (actionIdParts.length > 2) {\n        actionType = actionIdParts[0];\n        semanticObjectId = actionIdParts[1].split('::')[1];\n        actionId = actionIdParts[2].split('::')[1];\n    } else if (actionIdParts.length === 2) {\n        actionType = actionIdParts[0];\n        actionId = actionIdParts[1].split('sAction::')[1];\n    } else {\n        actionId = actionIdParts[0];\n    }\n    return { actionType, semanticObjectId, actionId };\n};\n\n/**\n * Determines the valid pattern for a binding change\n * @param schemaDefinition - definition in the JSON schema\n * @returns the pattern as string\n */\nfunction determinePattern(schemaDefinition: Definition): string {\n    let pattern = BindingPropertyRegexAsString;\n    if (schemaDefinition.enum) {\n        let enumPattern;\n        schemaDefinition.enum.forEach((enumValue) => {\n            if (!enumValue.toString().startsWith('{')) {\n                enumPattern = enumPattern ? `${enumPattern}|${enumValue.toString()}` : enumValue.toString();\n            }\n        });\n        pattern = `^(${enumPattern})$|${pattern}`;\n    }\n    if (schemaDefinition['type'] && schemaDefinition['type'] === 'boolean') {\n        pattern = `^(false|true)$|${pattern}`;\n    }\n    return pattern;\n}\n\n/**\n * Reuseable function for strings that allow binding changes\n * @param schema - the complete JSON schema\n * @param definition - definition in the JSON schema, to be updated\n * @param propertyName - property in the properties' list of the given definition\n * @param bindingValues - values that shall be added to the resulting enum\n */\nconst addPatternForBindingChangeOfEnum = (\n    schema: object,\n    definition: object,\n    propertyName: string,\n    bindingValues?: BindingValue[]\n): void => {\n    const propertyList = definition && definition['properties'];\n    if (propertyList[propertyName].pattern) {\n        return; //as already processed\n    }\n    const originalDefinition = propertyList[propertyName];\n    let resultDefinition = originalDefinition;\n    const targetDefinition = originalDefinition.$ref\n        ? schema['definitions'][originalDefinition.$ref.split(DEFINITION_LINK_PREFIX)[1]]\n        : originalDefinition;\n    const description = originalDefinition.description ? originalDefinition.description : targetDefinition.description;\n    const pattern = determinePattern(targetDefinition);\n    if (targetDefinition['type'] && targetDefinition['type'] === 'boolean') {\n        resultDefinition = { enum: [false, true] };\n    }\n    if (bindingValues && resultDefinition['enum']) {\n        bindingValues.forEach((value) => {\n            if (resultDefinition['enum'].indexOf(value) === -1) {\n                resultDefinition['enum'].push(value);\n            }\n        });\n    }\n    propertyList[propertyName] = {\n        pattern: pattern,\n        anyOf: [\n            resultDefinition,\n            {\n                type: 'string'\n            }\n        ]\n    };\n    if (description) {\n        propertyList[propertyName].description = description;\n        delete originalDefinition.description;\n    }\n};\n\nexport const addPatternForBindingChangeOfEnumLR = (schema: object, definition: object, propertyName: string): void => {\n    addPatternForBindingChangeOfEnum(schema, definition, propertyName);\n};\n\nexport const addPatternForBindingChangeOfEnumOP = (schema: object, definition: object, propertyName: string): void => {\n    const bindingValues = Object.values(BindingValue);\n    addPatternForBindingChangeOfEnum(schema, definition, propertyName, bindingValues);\n};\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "import 'reflect-metadata';\nimport type { SyncRule, PageLayoutInformation, ValidityInformation } from '@sap/ux-specification-types';\n\nexport const reflectMetadataKey = Symbol('specificationMetadataKey');\nexport const syncRule = (propSpec: SyncRule): any => {\n    return Reflect.metadata(reflectMetadataKey, propSpec);\n};\n\nexport function getReflectMetadata(target: object, propertyName: string): SyncRule | undefined {\n    let rule: SyncRule;\n    if (target) {\n        rule = Reflect.getMetadata(reflectMetadataKey, target, propertyName);\n    }\n    return rule;\n}\n\nexport const pageLayoutInformation =\n    (pageInfo: PageLayoutInformation) =>\n    (constructor: Function): void => {\n        constructor.prototype.pageLayoutInformation = pageInfo;\n    };\n\nconst childIdKey = Symbol('childId');\nexport const childId = (id: string): any => {\n    return Reflect.metadata(childIdKey, id);\n};\n\nexport const getChildId = (target: any, propertyName: string): string => {\n    return Reflect.getMetadata(childIdKey, target, propertyName);\n};\n\nexport const getPageLayoutInformation = (target: any): PageLayoutInformation => {\n    return Object.getPrototypeOf(target).pageLayoutInformation;\n};\n\n/*\n * Validity decorator and functions for it\n */\n\nexport const validityMetadataKey = Symbol('validityMetadataKey');\nexport const validity = (propSpec: ValidityInformation): any => {\n    return Reflect.metadata(validityMetadataKey, propSpec);\n};\n\nexport function getTextForDeprecated(key: string, validityInformation?: ValidityInformation): string {\n    let text = `${key} is deprecated`;\n    if (validityInformation && validityInformation.deprecated) {\n        text = validityInformation.deprecated.since ? `${text} since ${validityInformation.deprecated.since}` : text;\n        text = validityInformation.deprecated.text ? `${text}. ${validityInformation.deprecated.text}` : text;\n    }\n\n    return text;\n}\n", "import type {\n    Manifest,\n    UI5Version,\n    ChangeDefinition,\n    ChangeDefinitionInCreation,\n    SyncRule\n} from '@sap/ux-specification-types';\nimport * as flexUtils from '@ui5/flexibility-utils';\nimport { FlexChangeLayer } from '@sap/ux-specification-types';\n\nconst changesUtils = flexUtils.default.change;\n\nconst defaultValues = {\n    isCustomer: false,\n    sapui5Version: ' ', // UI5 version should be set via exportConfig(). This is the fallback in case it's missing\n    creatingTool: 'SAPFioriTools',\n    type: 'propertyChange'\n};\n\n/**\n * Create a change as string (calls changeUtils from ui5-flexibility-utils)\n * @param change - properties required to create the change\n * @param manifest - the manifest.json file\n */\nexport function createChangeString(change: ChangeDefinitionInCreation, manifest: Manifest): string {\n    let changeString = '';\n    try {\n        for (const defaultValue in defaultValues) {\n            if (change[defaultValue] === undefined) {\n                change[defaultValue] = defaultValues[defaultValue];\n            }\n        }\n        changeString = changesUtils.createChangeString(change, manifest);\n    } catch (error) {\n        console.error(`Error while create flex change.`, error);\n    }\n    return changeString;\n}\n\n/**\n * Parse string and return the change as object (calls changeUtils from ui5-flexibility-utils)\n * @param changeString - string with serialized change\n */\nexport function parseChangeString(changeString: string): ChangeDefinition | boolean {\n    try {\n        return changesUtils.parse(changeString);\n    } catch (error) {\n        return false;\n    }\n}\n\n/**\n * Creates a flex change based on the given config information\n * @param configObject - current (sub)object of the configuration file\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param syncRule - export rule from the object classes decorator\n * @param ui5Version - SAP UI5 version\n * @param baseId - selector id of the current page\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param key - key of the given property\n * @param layer - layer\n * @returns {ChangeDefinitionInCreation} - the newly created flex change\n */\nexport function fillFlexChangeContent(\n    configObject: object,\n    syncRule: SyncRule,\n    ui5Version: UI5Version,\n    key: string,\n    controlId: string\n): ChangeDefinitionInCreation {\n    const isCustomer = ui5Version.layer ? ui5Version.layer === FlexChangeLayer.Customer : true;\n\n    const flexChange: ChangeDefinitionInCreation = {\n        controlId, //syncRule.flex.controlId(baseId, ids, breadcrumbs, syncRule.flex.controlType, title),\n        controlType: syncRule.flex.controlType(),\n        content: {\n            property: key\n        },\n        sapui5Version: ui5Version.ui5Version,\n        isCustomer\n    };\n    if (configObject[key] !== undefined) {\n        if (syncRule.flex.exportFlexValue) {\n            syncRule.flex.exportFlexValue(flexChange, configObject, key);\n        } else if (configObject[key].toString().startsWith('{')) {\n            flexChange.content.newBinding = configObject[key];\n            flexChange.type = 'propertyBindingChange';\n        } else {\n            flexChange.content.newValue = configObject[key];\n        }\n    } else {\n        flexChange.content.newValue = null;\n    }\n    return flexChange;\n}\n", "import { createChangeString } from '../flexUtils';\nimport type { Manifest, ChangeDefinitionInCreation } from '@sap/ux-specification-types';\n\nexport function exportToFlexChange(change: ChangeDefinitionInCreation, manifest: Manifest): string {\n    return createChangeString(change, manifest);\n}\n", "import { DEFINITION_LINK_PREFIX, getTextForDeprecated } from '../';\nimport { log } from '../../../extensionLogger';\nimport type { Definition } from 'typescript-json-schema';\nimport type { SyncRule, DeprecatedProperties, ExtensionLogger } from '@sap/ux-specification-types/dist';\nimport { LogSeverity, FacetTitlePrefix, DefinitionName } from '@sap/ux-specification-types/dist';\n\n/**\n * Transfers the value of a single manifest setting to the config\n * @param syncRule - Metadata rule\n * @param manifestSection - Section in manifest.json\n * @param propertyKey - Key of the property or setting\n * @param configPart - Part of the config JSON\n * @param sectionId - Section or facet ID\n * @param breadcrumbs - list of breadcrumbs or id's describing the keys of all hierarchy levels\n */\nexport function importProperty(\n    syncRule: SyncRule,\n    manifestSection: {},\n    propertyKey: string,\n    configPart: { [key: string]: any },\n    sectionId?: string,\n    breadcrumbs?: string[]\n): void {\n    const manifestKey = syncRule.manifest.key || propertyKey;\n    const importHandler = syncRule.manifest.import;\n    if (importHandler && typeof importHandler === 'function') {\n        const value = importHandler(manifestSection, sectionId, propertyKey, breadcrumbs);\n        if (value !== undefined) {\n            configPart[propertyKey] = value;\n        }\n    } else if (manifestSection[manifestKey] !== undefined) {\n        configPart[propertyKey] = manifestSection[manifestKey];\n    }\n}\n\n/**\n * Validation during import: check if properties are marked as deprecated.\n * If so, log them.\n * @param deprecatedProperties - existing list, to be actualized\n * @param manifestSection - Section in manifest.json\n * @param path - path to the section in manifest\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function checkDeprecatedProperties(\n    deprecatedProperties: DeprecatedProperties | undefined,\n    manifestSection: {},\n    path: string,\n    logger?: ExtensionLogger\n): void {\n    if (manifestSection && deprecatedProperties) {\n        for (const key in manifestSection) {\n            const deprecated = deprecatedProperties[key];\n            if (deprecated) {\n                log(logger, {\n                    severity: LogSeverity.Warning,\n                    message: getTextForDeprecated(key, deprecated),\n                    location: {\n                        path: 'webapp/manifest.json/',\n                        range: path.split('/')\n                    }\n                });\n                delete deprecatedProperties[key];\n            }\n        }\n    }\n}\n\n/**\n * Determines the title of a section representation in the app schema, main aspect is checking the facet ID\n * @param schemaSection - Section in manifest.json\n * @param jsonSchema - app specific schema\n */\nexport function getSectionTitle(schemaSection: Definition, jsonSchema: Definition): string | undefined {\n    if (schemaSection.$ref && !schemaSection.title) {\n        const refTitle = jsonSchema.definitions[schemaSection.$ref.split(DEFINITION_LINK_PREFIX)[1]] as Definition;\n        return getSectionTitle(refTitle, jsonSchema);\n    } else if (schemaSection.title) {\n        if (schemaSection.title.startsWith(FacetTitlePrefix)) {\n            return schemaSection.title.split(FacetTitlePrefix)[1].replace(/com.sap/g, '@com.sap');\n        } else {\n            return schemaSection.title.replace(/com.sap/g, '@com.sap');\n        }\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Method returns target by resolving custom column reference name.\n * For example - 'TableCustomColumns<dummyTarget>' is resolved as 'dummyTarget'.\n * @param {string} ref Reference key.\n * @returns {string | undefined} Resolved target.\n */\nexport function getTargetFromCustomColumnRef(ref: string): string | undefined {\n    const refParts = ref.split(`${DefinitionName.CustomColumns}<`);\n    if (refParts[1]) {\n        return refParts[1].split('>')[0];\n    }\n    return undefined;\n}\n\n/**\n * Removes part of a given config, if empty\n * @param {object} config - config part\n * @param {string} structure - part of config to be removed\n */\nexport function removeEmptyStructure(config: object, structure: string): void {\n    if (!config[structure]) {\n        return;\n    }\n    if (Object.keys(config[structure]).length < 1) {\n        delete config[structure];\n    }\n}\n", "import type { ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { DataFieldAbstractTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { UIAnnotationTerms, UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { getStableIdPartFromDataField } from '../../v4/utils/StableIdHelper';\nimport type { FacetConfig, GenerateAppSchemaParameters } from '@sap/ux-specification-types';\nimport {\n    DefinitionName,\n    FacetBase,\n    FioriElementsVersion,\n    PropertyName,\n    SchemaTag,\n    SectionType,\n    UIVOCABULARY\n} from '@sap/ux-specification-types';\nimport {\n    DEFINITION_LINK_PREFIX,\n    getDataFieldDescription,\n    createAnnotationPath,\n    findAlias,\n    prepareRef,\n    addDataTypeToDefinition\n} from '..';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Copies the field properties from the generic definition to the specific field definition\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @param {object} appSchema - App schema in general\n * @param {DataFieldAbstractTypes} field - field definition in parser output (AVT)\n * @param {string} fieldDefinition - the unique ID for the given field definition\n */\nfunction copyFieldProperties(\n    version: FioriElementsVersion,\n    appSchema: Definition,\n    field: DataFieldAbstractTypes,\n    fieldDefinition: string\n) {\n    if (version === FioriElementsVersion.v4 && appSchema['definitions']['Field']) {\n        switch (field.$Type) {\n            case UIAnnotationTypes.DataField:\n            case UIAnnotationTypes.DataFieldForAnnotation:\n            case UIAnnotationTypes.DataFieldWithNavigationPath:\n            case UIAnnotationTypes.DataFieldWithUrl: {\n                (appSchema.definitions[fieldDefinition] as Definition).properties =\n                    appSchema.definitions.Field['properties'];\n                break;\n            }\n        }\n    } else if (version === FioriElementsVersion.v2 && appSchema['definitions']['Field']) {\n        switch (field.$Type) {\n            case UIAnnotationTypes.DataField:\n            case UIAnnotationTypes.DataFieldForAnnotation:\n            case UIAnnotationTypes.DataFieldWithUrl: {\n                (appSchema.definitions[fieldDefinition] as Definition).properties =\n                    appSchema.definitions.Field['properties'];\n                break;\n            }\n        }\n    }\n}\n\n/**\n * Determines the name for a field definition in app schema\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @param fieldReferenceId - the stable ID representation of the field\n * @param {string} targetID - unique ID, identifies the parent object (form)\n * @param fieldReference - the reference to the field definition in schema\n * @returns the field definition name in schema\n */\nfunction determineFieldDefinitionName(\n    version: FioriElementsVersion,\n    fieldReferenceId: string,\n    targetID: string,\n    fieldReference: string\n): string {\n    const fieldReferenceType =\n        version === FioriElementsVersion.v2 && fieldReferenceId && fieldReferenceId.includes('::')\n            ? fieldReferenceId.split('::')[0].replace('DataField', 'Field')\n            : undefined;\n    if (version === FioriElementsVersion.v2) {\n        return `${fieldReferenceType}<${targetID}::${fieldReference}>`;\n    } else {\n        return `${targetID}::${fieldReference}`;\n    }\n}\n\n/**\n * Adds a field definition to the app specific schema\n * @param {string} sectionType - prefix to distinguish Section and HeaderSection\n * @param {object} appSchema - App schema in general\n * @param {DataFieldAbstractTypes} field - field definition in parser output (AVT)\n * @param {string} targetID - unique ID, identifies the parent object (form)\n * @param {string} key - current field key\n * @param {SectionType} section - current section of the object page\n * @param {FioriElementsVersion} version - Fiori Elements version\n */\nfunction addField(\n    sectionType: SectionType,\n    appSchema: Definition,\n    field: DataFieldAbstractTypes,\n    targetID: string,\n    key: string,\n    section: FacetConfig,\n    version: FioriElementsVersion,\n    withActions = true\n): void {\n    // Calculate field reference\n    const fieldReferenceId = getStableIdPartFromDataField(field);\n    const fieldReference =\n        version === FioriElementsVersion.v2 && fieldReferenceId && fieldReferenceId.includes('::')\n            ? fieldReferenceId.split('::').splice(1).join('::')\n            : fieldReferenceId;\n    // Determine field definition name\n    const fieldDefinition = determineFieldDefinitionName(version, fieldReferenceId, targetID, fieldReference);\n\n    // Evaluate field type, set field reference of properties of fields' or actions' definition\n    if (!field || !field.$Type) {\n        return;\n    } else if (\n        field.$Type === UIAnnotationTypes.DataFieldForAction ||\n        field.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        if (withActions && sectionType === SectionType.Section) {\n            const actionsDefinition = prepareRef(`${sectionType}${DefinitionName.Actions}<${targetID}>`);\n            const fieldInSchema = ((appSchema.definitions[actionsDefinition] as Definition).properties[fieldReference] =\n                {\n                    $ref: `${DEFINITION_LINK_PREFIX}${fieldDefinition}`\n                });\n            fieldInSchema[SchemaTag.propertyIndex] = parseInt(key);\n        }\n    } else {\n        const fieldsDefinition = prepareRef(`${sectionType}${DefinitionName.Fields}<${targetID}>`);\n        appSchema.definitions[fieldsDefinition]['properties'][fieldReference] = {\n            $ref: `${DEFINITION_LINK_PREFIX}${fieldDefinition}`,\n            propertyIndex: parseInt(key)\n        };\n    }\n\n    // Now set up the field definition\n    appSchema.definitions[fieldDefinition] = {\n        type: 'object',\n        properties: {},\n        description: getDataFieldDescription(field, section.entityType),\n        additionalProperties: false\n    };\n    //Add tags\n    appSchema.definitions[fieldDefinition][SchemaTag.annotationPath] = `/${section.entityType.fullyQualifiedName}/${\n        field.fullyQualifiedName.split(section.entityType.fullyQualifiedName)[1]\n    }`;\n    appSchema.definitions[fieldDefinition][SchemaTag.annotationType] = field.$Type;\n    appSchema.definitions[fieldDefinition][SchemaTag.isViewNode] = true;\n\n    addDataTypeToDefinition(appSchema.definitions[fieldDefinition] as Definition, field);\n\n    // Copy the generic definition of field properties to the specific one\n    copyFieldProperties(version, appSchema, field, fieldDefinition);\n    if (field.$Type === UIAnnotationTypes.DataFieldForAction && appSchema.definitions?.['FormAction']) {\n        (appSchema.definitions[fieldDefinition] as Definition).properties = (\n            appSchema.definitions[DefinitionName.FormAction] as Definition\n        ).properties;\n    }\n}\n\n/**\n * The function determines the target ID that shall be used in the app schema for a form\n * @param section - object describing the section or facet\n * @returns the target ID (string)\n */\nfunction determineTargetIdOfForm(section: FacetConfig) {\n    let targetID: string;\n    if (section.target && section.target['qualifier'] && section.entityType) {\n        targetID = `${section.entityType.name}::${section.base}::${section.target['qualifier']}`;\n    } else if (section.entityType) {\n        targetID = `${section.entityType.name}::${section.base}`;\n    } else {\n        targetID = section.ID;\n    }\n    return targetID;\n}\n\n/**\n * Adds definitions for forms in object page sections to the app schema\n * @param {SectionType} sectionType - prefix to distinguish Section and HeaderSection\n * @param {FacetConfig} section - facet or section in the FE core model\n * @param {object} appSchemaSection - current definition of facet or section in the JSON schema\n * @param {object} appSchema - app specific schema that gets enhanced\n * @param {FioriElementsVersion} version - Fiori Elements version\n * @returns {string | undefined} target id of form\n */\nexport function handleForm(\n    sectionType: SectionType,\n    section: FacetConfig,\n    appSchemaSection: Definition,\n    appSchema: Definition,\n    version: FioriElementsVersion,\n    withActions = true\n): string | undefined {\n    if (!section.target) {\n        return;\n    }\n    const targetID: string = determineTargetIdOfForm(section);\n    const formDefinition = prepareRef(`${sectionType}${DefinitionName.Form}<${targetID}>`);\n    const fieldsDefinition = prepareRef(`${sectionType}${DefinitionName.Fields}<${targetID}>`);\n    const actionsDefinition = prepareRef(`${sectionType}${DefinitionName.Actions}<${targetID}>`);\n\n    // Form definition\n    appSchemaSection.properties['form'] = { $ref: `${DEFINITION_LINK_PREFIX}${formDefinition}` };\n\n    if (sectionType === SectionType.Section && withActions) {\n        appSchema['definitions'][formDefinition] = {\n            type: 'object',\n            properties: {\n                actions: {\n                    $ref: `${DEFINITION_LINK_PREFIX}${actionsDefinition}`\n                },\n                fields: { $ref: `${DEFINITION_LINK_PREFIX}${fieldsDefinition}` }\n            },\n            description: 'Form',\n            additionalProperties: false\n        };\n        appSchema['definitions'][actionsDefinition] = {\n            type: 'object',\n            properties: {},\n            description: 'Actions',\n            additionalProperties: false\n        };\n        appSchema['definitions'][actionsDefinition][SchemaTag.isViewNode] = true;\n    } else {\n        appSchema['definitions'][formDefinition] = {\n            type: 'object',\n            properties: {\n                fields: { $ref: `${DEFINITION_LINK_PREFIX}${fieldsDefinition}` }\n            },\n            description: 'Form',\n            additionalProperties: false\n        };\n    }\n    appSchema.definitions[formDefinition][SchemaTag.isViewNode] = true;\n\n    if (section.entityType?.name) {\n        appSchema.definitions[formDefinition][SchemaTag.annotationPath] = createAnnotationPath(\n            section.entityType.fullyQualifiedName,\n            section.target['term'],\n            section.target['qualifier']\n        );\n    }\n\n    // Fields definition\n    appSchema.definitions[fieldsDefinition] = {\n        type: 'object',\n        properties: {},\n        description: 'Fields',\n        additionalProperties: false\n    };\n    appSchema.definitions[fieldsDefinition][SchemaTag.isViewNode] = true;\n    // Add fields\n    if (section.base === FacetBase.Identification) {\n        for (const key in section.target) {\n            const field = section.target[key];\n            if (field) {\n                addField(sectionType, appSchema, field, targetID, key, section, version, withActions);\n            }\n        }\n    } else {\n        for (const key in section.target['Data']) {\n            const field = section.target['Data'][key];\n            addField(sectionType, appSchema, field, targetID, key, section, version);\n        }\n    }\n    return targetID;\n}\n\n/**\n * Replaces an alias in an annotation ID or reference, based on the AVT references' list\n * @param annotationIdentifier - annotation ID or reference\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @returns the converted string\n */\nexport function replaceAlias(annotationIdentifier: string, oDataServiceAVT: ConvertedMetadata): string {\n    const potentialAlias = annotationIdentifier.indexOf('.') > -1 ? annotationIdentifier.split('.')[0] : undefined;\n    let result = annotationIdentifier;\n    if (potentialAlias && oDataServiceAVT) {\n        const searchTerm = potentialAlias.replace('SAP__', '');\n        const reference = oDataServiceAVT.references.find((ref) => {\n            return ref.alias === searchTerm;\n        });\n        if (reference) {\n            result = annotationIdentifier.replace(potentialAlias, reference.namespace);\n        }\n    }\n    return result;\n}\n\n/**\n * Common routine to determine the name and the ID of a header action\n * @param action - action as given by AVT\n * @param entityType - entity type by AVT\n * @returns an object comprising action name and action id\n */\nexport function getActionNameAndId(action: string, entityType: EntityType): { actionName: string; actionId: string } {\n    let separatorIndex = action.lastIndexOf('/');\n    if (separatorIndex === -1) {\n        separatorIndex = action.lastIndexOf('.');\n    }\n    let actionName, actionId;\n    if (separatorIndex > -1) {\n        actionName = action.substring(separatorIndex + 1);\n        actionId = `${action.substring(0, separatorIndex)}::${actionName}`;\n    } else {\n        actionName = action;\n        const namespace = entityType.fullyQualifiedName.split(entityType.name)[0];\n        actionId = `${namespace.substring(0, namespace.length - 1)}::${actionName}`;\n    }\n    return { actionName, actionId };\n}\n\n/**\n * Add Object Page Footer Action Buttons to app-specific schema\n *\n * @param {object} appSchema Schema of the app\n * @param {EntityType} entityType - current entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n */\nexport function addFooterActions(appSchema: Definition, generateParameters: GenerateAppSchemaParameters): void {\n    appSchema.definitions[DefinitionName.ObjectPageFooter] = JSON.parse(\n        JSON.stringify(appSchema.definitions[`${DefinitionName.ObjectPageFooter}<ObjectPageFooterActions>`])\n    );\n    // Change reference of footer\n    appSchema.properties['footer'] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.ObjectPageFooter}`\n    };\n    // Add action to configuration\n    (appSchema.definitions[DefinitionName.ObjectPageFooter] as Definition).properties[PropertyName.actions] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.FooterActions}`\n    };\n    const footerActions = (appSchema.definitions[DefinitionName.FooterActions] = {\n        type: 'object',\n        properties: {},\n        description: 'Actions',\n        additionalProperties: false\n    });\n    footerActions[SchemaTag.isViewNode] = true;\n\n    const alias = findAlias(UIVOCABULARY, generateParameters.serviceAVT);\n    const entityType = generateParameters.entitySet.entityType;\n    const actionAnnotation = alias && entityType.annotations?.[alias]?.Identification;\n    if (actionAnnotation) {\n        const convertedIdentification = actionAnnotation.fullyQualifiedName.replace(\n            `@${UIAnnotationTerms.Identification}`,\n            `/@${UIAnnotationTerms.Identification}`\n        );\n        footerActions[SchemaTag.annotationPath] = `/${convertedIdentification}`;\n        actionAnnotation.forEach((item, index) => {\n            if (item['Determining'] && item.$Type === UIAnnotationTypes.DataFieldForAction) {\n                const { actionName, actionId } = getActionNameAndId(item.Action, entityType);\n                const description = item.Label || actionName;\n                const actionDefinitionKey = prepareRef(`${DefinitionName.ObjectPageFooterAction}<${actionId}>`);\n                if (appSchema.definitions[DefinitionName.ObjectPageFooterAction]) {\n                    appSchema.definitions[actionDefinitionKey] = {\n                        ...JSON.parse(JSON.stringify(appSchema.definitions[DefinitionName.ObjectPageFooterAction])),\n                        description,\n                        annotationPath: `/${convertedIdentification}/${index}`\n                    };\n                } else {\n                    appSchema.definitions[actionDefinitionKey] = {\n                        type: 'object',\n                        properties: {},\n                        description: description\n                    };\n                    appSchema.definitions[actionDefinitionKey][SchemaTag.isViewNode] = true;\n                    appSchema.definitions[actionDefinitionKey][\n                        SchemaTag.annotationPath\n                    ] = `/${convertedIdentification}/${index}`;\n                }\n                footerActions.properties[actionId] = {\n                    $ref: `${DEFINITION_LINK_PREFIX}${actionDefinitionKey}`\n                };\n            }\n        });\n    } else {\n        footerActions[\n            SchemaTag.annotationPath\n        ] = `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.Identification}`;\n    }\n    delete appSchema.definitions[DefinitionName.ObjectPageFooterActions];\n    delete appSchema.definitions[`${DefinitionName.ObjectPageFooter}<${DefinitionName.ObjectPageFooterActions}>`];\n}\n\n/**\n * Add Object Page Header Action Buttons to app-specific schema\n * @param {object} appSchema Schema of the app\n * @param {EntityType} entityType - current entity type\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n */\nexport function addHeaderActions(\n    appSchema: Definition,\n    entityType: EntityType,\n    oDataServiceAVT: ConvertedMetadata,\n    addHeaderActionCallBack\n): void {\n    (appSchema.definitions[DefinitionName.ObjectPageHeader] as Definition).properties[PropertyName.actions] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.HeaderActions}`\n    };\n    const headerActions = (appSchema.definitions[DefinitionName.HeaderActions] = {\n        type: 'object',\n        properties: {},\n        description: 'Actions',\n        additionalProperties: false\n    });\n    headerActions[SchemaTag.isViewNode] = true;\n\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    const identification =\n        alias &&\n        entityType.annotations &&\n        entityType.annotations[alias] &&\n        entityType.annotations[alias].Identification;\n\n    if (identification) {\n        headerActions[SchemaTag.annotationPath] =\n            '/' +\n            identification.fullyQualifiedName.replace(\n                `@${UIAnnotationTerms.Identification}`,\n                `/@${UIAnnotationTerms.Identification}`\n            );\n        identification.forEach(\n            addHeaderActionCallBack(entityType, appSchema, identification, headerActions, oDataServiceAVT)\n        );\n    } else {\n        headerActions[\n            SchemaTag.annotationPath\n        ] = `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.Identification}`;\n    }\n    delete appSchema.definitions[DefinitionName.GenericActions];\n    delete appSchema.definitions[`${DefinitionName.ObjectPageHeader}<${DefinitionName.GenericActions}>`];\n}\n\n/**\n * Adds common Object Page Header definitions to the app schema\n * @param appSchema - app-specific JSOn schema\n * @param entityType - current entity Type\n */\nexport function addCommonHeaderSchema(appSchema: Definition, entityType: EntityType): void {\n    appSchema.properties['header'] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.ObjectPageHeader}`\n    };\n    appSchema.definitions[DefinitionName.ObjectPageHeader] = JSON.parse(\n        JSON.stringify(appSchema.definitions[`${DefinitionName.ObjectPageHeader}<${DefinitionName.GenericActions}>`])\n    );\n    appSchema.definitions[DefinitionName.ObjectPageHeader][\n        SchemaTag.annotationPath\n    ] = `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.HeaderInfo}`;\n}\n\n/**\n * Common logic to determine the EntitySet of a facet\n * @param facet - current facet or section\n * @param serviceAVT - AVT converter output, comprising all annotation information\n * @returns the entity set as defined in AVT, if found\n */\nexport function determineEntitySetOfFacet(facet: FacetConfig, serviceAVT: ConvertedMetadata): EntitySet | undefined {\n    return facet.entityType\n        ? serviceAVT.entitySets.find(\n              (es) => es.entityType.name === facet.entityType.name || es.name === facet.entityType.name\n          )\n        : undefined;\n}\n", "import { UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\n\n/**\n * Stable Id helper (parts copied from sap.fe.core/helpers/StableIdHelper.ts)\n */\n\nexport function replaceSpecialChars(sId: string): string {\n    if (typeof sId !== 'string') {\n        return;\n    }\n    sId = sId\n        .replace(/^\\/|^@|^#|^\\*/, '') // remove special characters from the beginning of the string\n        .replace(/\\/$|@$|#$|\\*$/, '') // remove special characters from the end of the string\n        .replace(/\\/|@|\\(|\\)|#|\\*/g, '::'); // replace special characters with ::\n\n    // Replace double occurrences of the separator with a single separator\n    while (sId.indexOf('::::') > -1) {\n        sId = sId.replace('::::', '::');\n    }\n\n    // If there is a :: at the end of the ID remove it\n    if (sId.slice(-2) === '::') {\n        sId = sId.slice(0, -2);\n    }\n\n    return sId;\n}\n\nfunction removeNamespaces(sId: string): string {\n    sId = sId.replace('com.sap.vocabularies.UI.v1.', '');\n    sId = sId.replace('com.sap.vocabularies.Communication.v1.', '');\n    return sId;\n}\n\nexport const prepareId = function (sId: string): string {\n    return replaceSpecialChars(removeNamespaces(sId));\n};\n\nfunction evaluateConcat(oValue: any) {\n    let sPathConcat = '';\n    for (const applyValue of oValue.Apply.Path) {\n        if (applyValue._text) {\n            if (sPathConcat) {\n                sPathConcat += '::';\n            }\n            sPathConcat += applyValue._text;\n        }\n    }\n    return sPathConcat;\n}\n\nexport function getStableIdPartFromValue(oValue: any): string | undefined {\n    if (oValue?.$Path || oValue?.path) {\n        return oValue.$Path || oValue.path;\n    }\n\n    if (oValue?.Apply?._attributes.Function === 'odata.concat') {\n        return evaluateConcat(oValue);\n    }\n\n    if (oValue) {\n        if (typeof oValue === 'string') {\n            return replaceSpecialChars(oValue.replace(/ /g, '_'));\n        }\n    }\n}\n\nexport const getStableIdPartFromSemanticObjectAndAction = function (oDataField: any): string {\n    let sIdPart = '';\n    if (typeof oDataField.SemanticObject === 'string') {\n        sIdPart += oDataField.SemanticObject;\n    } else if (oDataField.SemanticObject.$Path) {\n        sIdPart += oDataField.SemanticObject.$Path;\n    }\n    if (typeof oDataField.Action === 'string') {\n        sIdPart += '::' + oDataField.Action;\n    } else if (oDataField.Action && oDataField.Action.$Path) {\n        sIdPart += '::' + oDataField.Action.$Path;\n    }\n    if (oDataField['RequiresContext']) {\n        sIdPart += '::RequiresContext';\n    }\n    return sIdPart;\n};\n\nexport const getStableIdPartFromDataField = function (oDataField: any): string | undefined {\n    let sIdPart = '';\n\n    if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldForAction) {\n        sIdPart = 'DataFieldForAction::';\n        sIdPart += oDataField.Action;\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n        sIdPart = 'DataFieldForIntentBasedNavigation::';\n        sIdPart += getStableIdPartFromSemanticObjectAndAction(oDataField);\n        return sIdPart;\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldForAnnotation) {\n        sIdPart = 'DataFieldForAnnotation::';\n        sIdPart += prepareId(oDataField.Target.$AnnotationPath || oDataField.Target.value);\n        return sIdPart;\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldWithAction) {\n        sIdPart = 'DataFieldWithAction::';\n        if (oDataField.Value) {\n            sIdPart += getStableIdPartFromValue(oDataField.Value) + '::';\n        }\n        sIdPart += oDataField.Action;\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataField) {\n        sIdPart = 'DataField::';\n        sIdPart += getStableIdPartFromValue(oDataField.Value);\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldWithIntentBasedNavigation) {\n        sIdPart = 'DataFieldWithIntentBasedNavigation::';\n        sIdPart += getStableIdPartFromValue(oDataField.Value) + '::';\n        sIdPart += getStableIdPartFromSemanticObjectAndAction(oDataField);\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldWithNavigationPath) {\n        sIdPart = 'DataFieldWithNavigationPath::';\n        sIdPart += getStableIdPartFromValue(oDataField.Value);\n        if (oDataField.Target && oDataField.Target['$NavigationPropertyPath']) {\n            sIdPart += '::' + oDataField.Target['$NavigationPropertyPath'];\n        }\n        return prepareId(sIdPart);\n    } else if (oDataField.$Type && oDataField.$Type === UIAnnotationTypes.DataFieldWithUrl) {\n        sIdPart = 'DataFieldWithUrl::';\n        sIdPart += getStableIdPartFromValue(oDataField.Value);\n        return prepareId(sIdPart);\n    } else {\n        // In case of a string or unknown property\n        // Log.error(\"Stable ID Helper: Unable to create a stable ID. Please check the annotations.\");\n    }\n    return undefined;\n};\n", "import type { AnnotationTerm, ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { LineItem } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { UIAnnotationTypes, UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport type { SectionTypeV2 } from '../../v2/types';\nimport type { PresentationVariantV4 } from '../../v4/types';\nimport { DEFINITION_LINK_PREFIX, createAnnotationPath, prepareRef, addSectionTitleAndDescription } from '..';\nimport type { FacetConfig, FacetSection, SectionType } from '@sap/ux-specification-types';\nimport { DefinitionName, SchemaTag, UIVOCABULARY } from '@sap/ux-specification-types';\nimport { getStableIdPartFromValue } from '../../v4/utils/StableIdHelper';\n\ninterface PropertyInDefinition {\n    definition: string;\n    property?: string;\n}\n\n/**\n * Adds an enum filled with existing UI annotations of the given list (validAnnotations)\n * @param {EntityType} entityType\n * @param {UIAnnotationTerms[]} validAnnotations\n * @param {Definition} annoPath - the annotation path property in the app schema where the enum shall be added\n */\nexport function addEnumForValidAnnotations(\n    entityType: EntityType,\n    validAnnotations: UIAnnotationTerms[],\n    annoPath: Definition\n): void {\n    const UiAnnotations = entityType?.annotations?.UI;\n    if (!UiAnnotations) {\n        return;\n    }\n    const enumEntries = [];\n    for (const key in UiAnnotations) {\n        const annotation = UiAnnotations[key];\n        if (validAnnotations.indexOf(annotation.term) > -1) {\n            const enumEntry = annotation.qualifier\n                ? `${annotation.term}#${annotation.qualifier}`\n                : `${annotation.term}`;\n            if (enumEntries.indexOf(enumEntry) === -1) {\n                enumEntries.push(enumEntry);\n            }\n        }\n    }\n    if (enumEntries.length > 0) {\n        annoPath.enum = enumEntries;\n    }\n}\n\n/**\n * Adds an enum filled with existing UI annotations for single-tab variants of a table\n * @param {EntityType} entityType\n * @param {Definition} appSchema - app specific JSON schema\n * @param definitionName - name of the definition in the app schema\n */\nexport function addEnumForSingleTabVariant(\n    entityType: EntityType,\n    appSchema: Definition,\n    definitionName: string\n): void {\n    const annoPath = (appSchema.definitions[definitionName] as Definition).properties[SchemaTag.annotationPath];\n    const validAnnotations = [UIAnnotationTerms.SelectionVariant, UIAnnotationTerms.SelectionPresentationVariant];\n    addEnumForValidAnnotations(entityType, validAnnotations, annoPath as Definition);\n}\n\n/**\n * Adds an enum filled with existing UI annotations for multi-tab variants of a table\n * @param appSchema - app specific JSOn schema\n * @param definitionName - name of the definition in the app schema\n * @param {EntitySet} entitySet - current entity set of the page or view\n */\nexport function addEnumForMultiTabVariant(appSchema: Definition, definitionName: string, entitySet: EntitySet): void {\n    const annoPath = (appSchema.definitions[definitionName] as Definition)?.properties.annotationPath;\n    const validAnnotations = [UIAnnotationTerms.SelectionVariant, UIAnnotationTerms.SelectionPresentationVariant];\n    addEnumForValidAnnotations(entitySet.entityType, validAnnotations, annoPath as Definition);\n}\n\n/**\n * Adds the enum values for entitySet as part of the multiple view scenario\n * @param {ConvertedMetadata} oDataServiceAVT - combined service metadata, as returned by annotation vocabularies tools\n * @param appSchema - app specific JSOn schema\n * @param definitionName - name of the definition in the app schema\n */\nexport function addEnumForVariantEntitySet(\n    oDataServiceAVT: ConvertedMetadata,\n    appSchema: Definition,\n    definitionName: string\n): void {\n    const entitySet = (appSchema.definitions[definitionName] as Definition).properties.entitySet;\n    const enumEntries = [];\n    if (!oDataServiceAVT) {\n        return;\n    }\n\n    oDataServiceAVT.entitySets.forEach((es: EntitySet) => {\n        enumEntries.push(es.name);\n    });\n    if (enumEntries.length > 0) {\n        entitySet['enum'] = enumEntries;\n    }\n}\n\n/**\n * Adds an enum filled with existing UI annotations for annotationPath property in FilterBar\n * @param {EntityType} entityType\n * @param appSchema - app specific JSOn schema\n * @param definitionName - name of the definition in the app schema\n */\nexport function addEnumForFilterBarAnnotationPath(\n    entityType: EntityType,\n    appSchema: Definition,\n    definitionName: string\n): void {\n    const annoPath = (appSchema.definitions[definitionName] as Definition).properties.annotationPath as Definition;\n    const validAnnotations = [UIAnnotationTerms.SelectionVariant];\n    addEnumForValidAnnotations(entityType, validAnnotations, annoPath);\n}\n\n/**\n * Adds an enum filled with existing UI FieldGroup annotations for annotationPath property in MultiEdit\n * @param {EntityType} entityType\n * @param appSchema - app specific JSOn schema\n * @param definitionName - name of the definition in the app schema\n */\nexport function addEnumFieldGroupAnnotationPath(\n    entityType: EntityType,\n    appSchema: Definition,\n    definitionName: string\n): void {\n    const annoPath = (appSchema.definitions[definitionName] as Definition).properties.annotationPath as Definition;\n    const validAnnotations = [UIAnnotationTerms.FieldGroup];\n    addEnumForValidAnnotations(entityType, validAnnotations, annoPath);\n}\n\n/**\n * Method adds definition for 'RelatedFacetKeys' as enum with description and adds references to 'RelatedFacetKeys' for custom section definitions.\n * @param {Definition} appSchema App specific schema that potentially gets enhanced\n * @param {string[]>} sectionDefinitions array of section definitions which should be updated with new reference to 'RelatedFacetKeys' enum.\n * @param {FacetSection[]} facetSections Array of facet section objects which is used to generate enum values.\n * @param {Array<keyof Omit<FacetSection, 'custom'>>} idProperties Array of property names which should be looked up in 'FacetSection' object.\n *  Please note that method depends on order and takes first non empty value associated to passed properties.\n */\nexport function addDefinitionForRelatedFacetKeys(\n    appSchema: Definition,\n    sectionDefinitions: string[],\n    facetSections: FacetSection[],\n    idProperties: Array<keyof Omit<FacetSection, 'custom'>>\n): void {\n    const oneOfSections = facetSections.map((section: FacetSection) => {\n        // Loop acceptable properties in received order and find first entry with value\n        const propertyName = idProperties.find((property) => !!section[property]);\n        const schemaIdForSection = section[propertyName];\n        return {\n            const: schemaIdForSection,\n            ...(section.label && { description: section.label }),\n            ...(section.custom && { custom: section.custom })\n        };\n    });\n    // Change 'relatedFacet' only when we have entries for sections - otherwise use generic.\n    if (oneOfSections.length) {\n        // Create new definition in schema as 'oneOf'.\n        // Simpler way would be to use 'enum', but then there no option to pass description.\n        appSchema.definitions[DefinitionName.RelatedFacetKeys] = {\n            type: 'string',\n            oneOf: oneOfSections\n        } as Definition;\n\n        // Add enum definition\n        for (const name of sectionDefinitions) {\n            const definition = appSchema.definitions[name] as Definition;\n            const property = definition.properties['relatedFacet'];\n            definition.properties['relatedFacet'] = {\n                anyOf: [\n                    {\n                        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.RelatedFacetKeys}`\n                    },\n                    property\n                ]\n            };\n        }\n    }\n}\n\n/**\n * Receives a facet key and returns the key as used in schema\n * @param facetKey - key of the facet, as used in annotation\n * @returns facetKeyInSchema - key of the facet, as used in schema\n */\nexport function getFacetKeyInSchema(facetKey: string): string {\n    return facetKey.replace('#', '::');\n}\n\n/**\n * Returns the name of a facet and definition, as key in definition\n * @param definition name of definition, as used in schema\n * @param facetKey - key of the facet, as used in annotation\n * @returns definition key of facet, as used in definition\n */\nfunction getFacetDefinitionKey(definition: string, facetKey: string): string {\n    return `${definition}<${getFacetKeyInSchema(facetKey)}>`;\n}\n\n/**\n * Adds an existing schema definition to a new definition in the app schema\n * @param definition name of definition, as used in schema\n * @param facetKey - key of the facet, as used in annotation\n * @param {Definition} appSchema App schema in general\n * @param {boolean} useDefinitionAsKey If set to false, facet key will solely be used as key, else encapsulated within definition key `definition<facetKey>`\n * @param subDefinitionName - sub definition, if different from the definition (e.g. subsection vs. section)\n * @returns {Definition} part of app schema that has been added and filled\n */\nexport function parseSchemaDefinition(\n    definition: string,\n    facetKey: string,\n    appSchema: Definition,\n    useDefinitionAsKey = true,\n    subDefinitionName?: DefinitionName\n): Definition {\n    let facetDefinitionKey = facetKey;\n    if (useDefinitionAsKey) {\n        facetDefinitionKey = getFacetDefinitionKey(subDefinitionName ? subDefinitionName : definition, facetKey);\n    }\n    if (definition && definition !== facetDefinitionKey) {\n        const schemaDefinition = JSON.parse(JSON.stringify(appSchema.definitions[definition])) as Definition;\n        appSchema.definitions[facetDefinitionKey] = schemaDefinition;\n    }\n    return appSchema.definitions[facetDefinitionKey] as Definition;\n}\n\n/**\n * Method receives custom extension base definition name and detect if it should be combined with lineItemId.\n * @param appSchema - the app specific schema that shall get enhanced\n * @param lineItemId - line item ID, as comprise in stable ID\n * @param customColumnDefinitionName - (optional) definition name of custom extension.\n * @returns $ref path for definition.\n */\nexport function getCustomExtensionDefinitionName(\n    appSchema: Definition,\n    lineItemId: string,\n    customExtensionDefinitionName: string\n): string {\n    let definitionName: string;\n    if (\n        lineItemId === DefinitionName.LineItems ||\n        lineItemId === 'LineItemsOfSPV::LineItem' ||\n        lineItemId === '@com.sap.vocabularies.UI.v1.LineItem'\n    ) {\n        definitionName = `${DEFINITION_LINK_PREFIX}${customExtensionDefinitionName}`;\n    } else {\n        definitionName = `${DEFINITION_LINK_PREFIX}${customExtensionDefinitionName}<${lineItemId}>`;\n        parseSchemaDefinition(customExtensionDefinitionName, lineItemId, appSchema, true);\n    }\n    return definitionName;\n}\n\n/**\n * Functions used both by V2 and V4 to add the common definitions for a line item to the app schema\n * @param appSchema - the app specific schema that shall get enhanced\n * @param lineItemAnnotation - the UI.LineItem annotation, comprising all records\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param lineItemId - line item ID, as comprise in stable ID\n * @param customColumnDefinitionName - (optional) definition name of custom column.\n *        Passed in the V4 case, then additional properties of this type will be allowed.\n * @returns the actions definition plus the annotation path to the given line item\n */\nexport function addCommonLineItemDefinitions(\n    appSchema: Definition,\n    lineItemAnnotation: AnnotationTerm<LineItem>,\n    entityType: EntityType,\n    lineItemId: string,\n    customColumnDefinitionName?: string,\n    customActionDefinitionName?: string\n): { actions: Definition; footerActions: Definition; lineItemPath: string } {\n    let lineItemPath: string;\n\n    appSchema.definitions[lineItemId] = {\n        type: 'object',\n        properties: {},\n        description: 'Columns'\n    };\n    appSchema.definitions[lineItemId][SchemaTag.isViewNode] = true;\n    const customColumnRef: string = getCustomExtensionDefinitionName(appSchema, lineItemId, customColumnDefinitionName);\n    (appSchema.definitions[lineItemId] as Definition).additionalProperties = customColumnDefinitionName\n        ? { $ref: customColumnRef }\n        : false;\n    // Copy toolbar\n    const toolBar = lineItemId.startsWith(DefinitionName.LineItems)\n        ? DefinitionName.ToolBar\n        : DefinitionName.ObjectPageToolBar;\n    const schemaIdForToolBar = `${toolBar}<${lineItemId}>`;\n    appSchema.definitions[schemaIdForToolBar] = JSON.parse(JSON.stringify(appSchema.definitions[`${toolBar}`]));\n\n    const schemaIdForActions = `${DefinitionName.Actions}<${prepareRef(lineItemId)}>`;\n    (appSchema.definitions[schemaIdForToolBar] as Definition).properties.actions['$ref'] =\n        DEFINITION_LINK_PREFIX + schemaIdForActions;\n\n    const actionId = lineItemId.startsWith(DefinitionName.LineItems)\n        ? DefinitionName.Actions\n        : DefinitionName.ObjectPageToolBarActions;\n    const actions = (appSchema.definitions[schemaIdForActions] = JSON.parse(\n        JSON.stringify(appSchema.definitions[actionId])\n    ));\n    actions.properties = {};\n    // Handle actions additional properties - add custom action reference if it is supported\n    actions.additionalProperties = false;\n    if (customActionDefinitionName) {\n        const customActionRef = getCustomExtensionDefinitionName(appSchema, lineItemId, customActionDefinitionName);\n        actions.additionalProperties = { $ref: customActionRef };\n    }\n\n    // Copy LR footer\n    let footerActions, schemaIdForFooter;\n    if (lineItemId === DefinitionName.LineItems && appSchema.properties['footer']) {\n        schemaIdForFooter = `${DefinitionName.Footer}<${lineItemId}>`;\n        (appSchema.properties['footer'] as Definition).$ref = `${DEFINITION_LINK_PREFIX}${schemaIdForFooter}`;\n\n        appSchema.definitions[schemaIdForFooter] = JSON.parse(\n            JSON.stringify(appSchema.definitions[DefinitionName.GenericFooter])\n        );\n        const schemaIdForFooterActions = `${DefinitionName.FooterActions}<${prepareRef(lineItemId)}>`;\n        (appSchema.definitions[schemaIdForFooter] as Definition).properties.actions['$ref'] =\n            DEFINITION_LINK_PREFIX + schemaIdForFooterActions;\n\n        footerActions = appSchema.definitions[schemaIdForFooterActions] = JSON.parse(\n            JSON.stringify(appSchema.definitions[DefinitionName.Actions])\n        );\n        footerActions.properties = {};\n        footerActions.additionalProperties = false;\n    }\n    //Determine annotation path\n    if (lineItemAnnotation) {\n        lineItemPath = createAnnotationPath(\n            entityType.fullyQualifiedName,\n            lineItemAnnotation.term,\n            lineItemAnnotation.qualifier\n        );\n        appSchema.definitions[schemaIdForToolBar][SchemaTag.annotationPath] = lineItemPath;\n        if (footerActions) {\n            appSchema.definitions[schemaIdForFooter][SchemaTag.annotationPath] = lineItemPath;\n        }\n    }\n\n    return { actions, footerActions, lineItemPath };\n}\n\n/**\n * Add schema definitions for fields of createWithParameterDialog\n * @param {object} appSchema - Application-specific schema, to be enhanced\n * @param {EntityType} entityType - Given entity type for which entries shall get generated\n * @param {string=} floorplanSuffix - floorplan specific suffix (optional)\n */\nexport function addFieldsType(appSchema: Definition, entityType: EntityType, floorplanSuffix = ''): void {\n    const propertyNameArray = [],\n        propertyObject = {};\n    const fieldPathRef = `${DefinitionName.FieldPath}${prepareRef(floorplanSuffix)}`;\n    for (const key of entityType.entityProperties) {\n        const propertyName = key.name;\n        propertyNameArray.push(propertyName);\n        propertyObject[propertyName] = {\n            $ref: `${DEFINITION_LINK_PREFIX}${fieldPathRef}`\n        };\n    }\n    appSchema.definitions[entityType.name] = {\n        enum: propertyNameArray\n    };\n    (appSchema.definitions[fieldPathRef] as Definition).properties.path = {\n        $ref: `${DEFINITION_LINK_PREFIX}${entityType.name}`\n    };\n    const creationFieldsRef = `CreationFieldKeys${prepareRef(floorplanSuffix)}`;\n    appSchema.definitions[creationFieldsRef] = {\n        type: 'object',\n        properties: propertyObject,\n        additionalProperties: false\n    };\n    const fields4Dialog = appSchema.definitions[`${DefinitionName.Fields4Dialog}${floorplanSuffix}`] as Definition;\n    (fields4Dialog.properties.fields as Definition).$ref = `${DEFINITION_LINK_PREFIX}${creationFieldsRef}`;\n}\n\nexport enum DataType {\n    String = 'String',\n    Rating = 'Rating',\n    Progress = 'Progress',\n    DataPoint = 'DataPoint',\n    Contact = 'Contact',\n    Address = 'Address',\n    Chart = 'Chart',\n    FieldGroup = 'FieldGroup',\n    IntentBasedNavigation = 'IntentBasedNavigation'\n}\n\n/**\n * Determines the dataType of the target that shall be added to a property in schema\n * @param target - the given target\n * @returns - the dataType as string\n */\nexport function determineDataTypeOfTarget(target: any): string | undefined {\n    let dataType: string;\n\n    if (target.Value) {\n        if (target.Visualization === 'UI.VisualizationType/Rating') {\n            dataType = DataType.Rating;\n        } else if (target.Visualization === 'UI.VisualizationType/Progress') {\n            dataType = DataType.Progress;\n        } else if (target.$Type === 'com.sap.vocabularies.UI.v1.DataPointType') {\n            dataType = DataType.DataPoint;\n        } else {\n            dataType = target.Value?.$target?.type.replace('Edm.', '');\n        }\n    } else if (target.$Type === 'com.sap.vocabularies.Communication.v1.ContactType') {\n        dataType = DataType.Contact;\n    } else if (target.$Type === 'com.sap.vocabularies.Communication.v1.AddressType') {\n        dataType = DataType.Address;\n    } else if (target.$Type === 'com.sap.vocabularies.UI.v1.ChartDefinitionType') {\n        dataType = DataType.Chart;\n    } else if (target.$Type === 'com.sap.vocabularies.UI.v1.FieldGroupType') {\n        dataType = DataType.FieldGroup;\n    }\n    return dataType;\n}\n\n/**\n * Determines the dataType that shall be added to a property in schema, for any kind of field like\n * - field of a field group\n * - line item record\n * - selection field\n * @param field - the given field\n * @returns - the dataType as string\n */\nexport function determineDataType(field: object): string | undefined {\n    let dataType: string;\n\n    if (field['Value']) {\n        if (field['Value'].$target?.type) {\n            dataType = field['Value'].$target.type.replace('Edm.', '');\n        } else {\n            dataType = DataType.String;\n        }\n    } else if (field['Target']) {\n        dataType = determineDataTypeOfTarget(field['Target'].$target);\n    } else if (field['$target']) {\n        dataType = field['$target'].type.replace('Edm.', '');\n    } else if (field['$Type'] === 'com.sap.vocabularies.UI.v1.DataFieldForAction') {\n        dataType = 'Action';\n    } else if (field['$Type'] === 'com.sap.vocabularies.UI.v1.DataFieldWithUrl') {\n        dataType = 'Url';\n    } else if (field['$Type'] === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation') {\n        dataType = DataType.IntentBasedNavigation;\n    } else if (field['type']) {\n        dataType = field['type'];\n    }\n\n    return dataType;\n}\n\n/**\n * Adds the dataType to the given schema field definition, if the data type cane be determined\n * @param definition - given schema definition\n * @param field - given field definition = annotation property, at AVT\n */\nexport function addDataTypeToDefinition(definition: object, field: object): void {\n    const dataType = determineDataType(field);\n    if (dataType) {\n        definition[SchemaTag.dataType] = dataType;\n    }\n}\n\n/**\n * Creates a definition link for a facet and definition name\n * @param {DefinitionName} definition - name of definition, as used in schema\n * @param {string} facetKey - key of the facet, as used in annotation\n * @returns definition link of facet, as used in definition\n */\nexport function getFacetDefinitionLink(definition: DefinitionName | SectionTypeV2, facetKey: string): string {\n    return `${DEFINITION_LINK_PREFIX}${getFacetDefinitionKey(definition, facetKey)}`;\n}\n\n/**\n * Creates and adds a reference link to a definition\n * @param {Definition} schemaPart - part of schema to add $ref to\n * @param {string} schemaRef - reference to be added\n * @param {string} schemaKey - key to be encapsulated within reference as `schemaRef<schemaKey>`\n * @returns reference link of facet, as used in definition\n */\nexport function addDefinitionRef(schemaPart: Definition, schemaRef: string, schemaKey?: string): void {\n    const schemaLink = schemaKey ? `${schemaRef}<${schemaKey}>` : schemaRef;\n    schemaPart.$ref = `${DEFINITION_LINK_PREFIX}${schemaLink}`;\n}\n\n/**\n * Extracts annotationPath from facet or Chart/LineItem fullyQualifiedName\n * @param facet facet or Chart/LineItem\n * @returns {string} annotationPath\n */\nexport function getFacetAnnotationPath(facet: FacetConfig | PresentationVariantV4 | object): string | undefined {\n    if ((facet as FacetConfig).annotationPath) {\n        return (facet as FacetConfig).annotationPath;\n    } else if ((facet as PresentationVariantV4).fullyQualifiedName) {\n        const [namespace, target] = (facet as PresentationVariantV4).fullyQualifiedName.split(`@${UIVOCABULARY}`);\n        return `/${namespace}/@${UIVOCABULARY}${target}`;\n    }\n    return undefined;\n}\n\n/**\n * Adds definitions for Address and Contact items in object page sections to the app schema\n * @param {FacetConfig} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} sections - schema of current sections definition.\n * @param {object} appSchema - app specific schema that potentially gets enhanced.\n * @param {SectionType} sectionPrefix - prefix to distinguish Section and HeaderSection\n */\nexport function handleAddressContact(\n    facet: FacetConfig,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    sectionPrefix: SectionType,\n    subSectionPrefix?: SectionType,\n    versionPostfix = ''\n) {\n    const definitionName = `ObjectPage${sectionPrefix}${facet.base}${versionPostfix}` as DefinitionName;\n    const subDefinitionName = `ObjectPage${subSectionPrefix}${facet.base}${versionPostfix}` as DefinitionName;\n    sections.properties[facetKey] = {\n        $ref: getFacetDefinitionLink(subSectionPrefix ? subDefinitionName : definitionName, facetKey)\n    };\n    const definition = parseSchemaDefinition(\n        subSectionPrefix ? subDefinitionName : definitionName,\n        facetKey,\n        appSchema,\n        true,\n        subSectionPrefix ? subDefinitionName : undefined\n    );\n    addSectionTitleAndDescription(facet, definition, facetKey);\n    definition[SchemaTag.annotationPath] = facet.annotationPath;\n    definition[SchemaTag.isViewNode] = true;\n}\n\n/**\n * Method updates schema definition's property.\n * @param {DefinitionOrBoolean} definition Definition object.\n * @param {string} key Property name.\n * @param {unknown} value New value.\n */\nfunction updateSchemaProperty(definition: DefinitionOrBoolean, key: string, value: unknown): void {\n    if (typeof definition === 'object') {\n        definition[key] = value;\n    }\n}\n\n/**\n * Method adds enum with key and description to schema definition.\n * Description can be easily used by UI to describe enum value/key.\n * @param {Definition} appSchema App specific JSON schema\n * @param {DefinitionOrBoolean} origin Origin schema object containing key and description.\n * @param {PropertyInDefinition} target Target to update with enum.\n */\nexport function addDescriptiveEnumDefinition(\n    appSchema: Definition,\n    origin: DefinitionOrBoolean,\n    target: PropertyInDefinition\n): void {\n    if (typeof origin !== 'object') {\n        // Safe checks\n        return;\n    }\n    const oneOfEnum: Array<{ const: string; description?: string }> = [];\n    for (const key in origin.properties) {\n        const property = origin.properties[key] as DefinitionOrBoolean & { description?: string };\n        oneOfEnum.push({\n            const: key,\n            ...(property.description && { description: property.description })\n        });\n    }\n    const definition = appSchema.definitions[target.definition];\n    if (typeof definition === 'object') {\n        if (target.property) {\n            const property = definition.properties?.[target.property];\n            updateSchemaProperty(property, 'oneOf', oneOfEnum);\n        } else {\n            updateSchemaProperty(definition, 'oneOf', oneOfEnum);\n        }\n    }\n}\n\n/**\n * Extracts the key of an action that shall be added to schema as SchemaTag.key\n * @param action - full-blown action ID\n * @param isAction - indicates an action\n * @returns action ID stripped down to the last key part\n */\nexport function getActionKey(action: string, isAction: boolean): { key: string; ns: string } {\n    let actionKey = action;\n    let namespace;\n    if (actionKey.indexOf('(') > 0) {\n        actionKey = actionKey.substring(0, actionKey.indexOf('('));\n    }\n    if (isAction && actionKey.indexOf('/') > 0) {\n        namespace = actionKey.substring(0, actionKey.indexOf('/'));\n        actionKey = actionKey.substring(actionKey.lastIndexOf('/') + 1);\n    }\n    if (isAction && actionKey.indexOf('.') > 0) {\n        namespace = actionKey.substring(0, actionKey.lastIndexOf('.'));\n        actionKey = actionKey.substring(actionKey.lastIndexOf('.') + 1);\n    }\n    if (!namespace) {\n        namespace = action.substring(0, action.lastIndexOf('.'));\n    }\n    return { key: actionKey.replace(/@/g, ''), ns: namespace };\n}\n\n/**\n * Adds the schema tag key to a line item record or property in schema\n * @param lineItemRecord - the given line item record\n * @param properties - list of all properties in schema\n * @param schemaKey - key of the given property\n */\nexport function addKeyToDefinition(lineItemRecord: object, properties: object, schemaKey: string): void {\n    if (lineItemRecord['Value']) {\n        properties[schemaKey][SchemaTag.key] = 'Value: ' + getStableIdPartFromValue(lineItemRecord['Value']);\n    } else if (\n        lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldWithAction ||\n        lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldForAction\n    ) {\n        const { key, ns } = getActionKey(lineItemRecord['Action'], true);\n        properties[schemaKey][SchemaTag.key] = `Action: ${key}`;\n        if (ns) {\n            properties[schemaKey][SchemaTag.target] = ns;\n        }\n    } else if (lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldForAnnotation) {\n        const { key } = getActionKey(lineItemRecord['Target'].value, false);\n        properties[schemaKey][SchemaTag.key] = `Target: ${key}`;\n        properties[schemaKey][SchemaTag.target] = lineItemRecord['Target'].$target.fullyQualifiedName.split('@')[0];\n    } else if (\n        lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldForIntentBasedNavigation ||\n        lineItemRecord['$Type'] === UIAnnotationTypes.DataFieldWithIntentBasedNavigation\n    ) {\n        const keyParts = schemaKey.split('::');\n        properties[schemaKey][SchemaTag.key] = `Property: ${keyParts[keyParts.length - 1]}; SemanticObject: ${\n            lineItemRecord['SemanticObject']\n        }; Action: ${lineItemRecord['Action']}`;\n    }\n}\n", "import type { ConvertedMetadata, EntitySet } from '@sap-ux/vocabularies-types';\nimport { UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type {\n    File,\n    FileData,\n    Manifest,\n    ImportProjectParameters,\n    GenerateAppSchemaParameters,\n    ExtensionLogger\n} from '@sap/ux-specification-types';\nimport {\n    LogSeverity,\n    TemplateType,\n    v2,\n    v4,\n    DirName,\n    FileName,\n    METADATAPATH,\n    UIVOCABULARY,\n    FioriElementsVersion,\n    ManifestSection,\n    SchemaType\n} from '@sap/ux-specification-types';\nimport {\n    generateAnalyticalListReportSchemaV2,\n    generateListReportSchemaV2,\n    generateObjectPageSchemaV2,\n    generateOVPInterfaceV2\n} from '../v2/generate';\nimport { getPages as getPagesV2, V2AppProvider } from '../v2/import/app/appProvider';\nimport { V2OvpProvider } from '../v2/import/app/ovpProvider';\nimport { generateObjectPageSchemaV4, generateListReportSchemaV4, generateFreestyleSchemaV4 } from '../v4/generate';\nimport { getPages as getPagesV4, V4AppProvider, V4FreestyleAppProvider } from '../v4/import/app';\nimport type { AppProvider } from './appProvider';\nimport {\n    findAlias,\n    getSchemaFilePath,\n    getTemplateTypeFromManifest,\n    getVersionFromManifest,\n    parseAndMergeAndConvert\n} from './utils';\nimport i18next from 'i18next';\nimport { log } from '../../extensionLogger';\nimport { initI18n } from '../../i18n/i18n';\nimport { getGenericSchema } from '../../specification/schemaAccess';\n\ninterface UiEntityTypes {\n    Facets: string[];\n    LineItems: string[];\n}\n\ninterface Schemas {\n    [type: string]: object;\n}\n\n/**\n * Generates an object comprising all generic schemas\n * @param {TemplateType} templateType - Template type\n * @param {FioriElementsVersion} fioriElementsVersion - Fiori Elements version\n * @returns {Object} genericSchemas\n */\nasync function getGenericSchemas(\n    templateType: TemplateType,\n    fioriElementsVersion: FioriElementsVersion\n): Promise<Schemas> {\n    const genericSchemas: Schemas = {};\n    let schemaTypes = [];\n    schemaTypes = [SchemaType.Application];\n    switch (templateType) {\n        case TemplateType.ListReportObjectPageV2:\n        case TemplateType.ListReportObjectPageV4:\n        case TemplateType.AnalyticalListPageV4:\n            schemaTypes.push(SchemaType.ListReport, SchemaType.ObjectPage);\n            break;\n        case TemplateType.AnalyticalListPageV2:\n            schemaTypes.push(SchemaType.AnalyticalListPage, SchemaType.ObjectPage);\n            break;\n        case TemplateType.OverviewPageV2:\n            schemaTypes.push(SchemaType.OverviewPage);\n            break;\n        case TemplateType.FreestylePageV4:\n            schemaTypes.push(SchemaType.FreestylePage, SchemaType.ObjectPage);\n            break;\n        default:\n            break;\n    }\n    for (const schemaType of schemaTypes) {\n        const schemaFile = getSchemaFilePath(schemaType);\n        genericSchemas[schemaFile.filename] = await getGenericSchema(fioriElementsVersion, schemaType);\n    }\n    return genericSchemas;\n}\n\n/**\n * Get the relevant UI.ListItem and UI.Facet entity sets\n * @param {ConvertedMetadata} oDataServiceAVT - Annotations as converted by AVT\n * @returns a fitered list of facet and line item annotations\n */\nfunction getAnnotationsForUi(oDataServiceAVT: ConvertedMetadata): UiEntityTypes {\n    const filteredEntityTypes: UiEntityTypes = {\n        Facets: [],\n        LineItems: []\n    };\n    const allEntityTypes = oDataServiceAVT?.entityTypes;\n    if (!allEntityTypes) {\n        return filteredEntityTypes;\n    }\n    const alias = findAlias(UIVOCABULARY, oDataServiceAVT);\n    for (const entity of allEntityTypes) {\n        if (!entity.annotations || !entity.annotations[alias]) {\n            continue;\n        }\n        const { LineItem, Facets } = entity.annotations[alias];\n        if (\n            LineItem &&\n            !LineItem.qualifier &&\n            LineItem.find(\n                (li) =>\n                    li.$Type === UIAnnotationTypes.DataField || li.$Type === UIAnnotationTypes.DataFieldForAnnotation\n            )\n        ) {\n            filteredEntityTypes.LineItems.push(entity.name);\n        }\n        if (Facets && !Facets.qualifier) {\n            filteredEntityTypes.Facets.push(entity.name);\n        }\n    }\n    return filteredEntityTypes;\n}\n\nexport function getEntitySetByEntitySetName(entitySetName: string, oDataServiceAVT: ConvertedMetadata): EntitySet {\n    return oDataServiceAVT?.entitySets && oDataServiceAVT.entitySets.find((es) => es.name === entitySetName);\n}\n\n/**\n * The function generates one app schema per entitySet that is linked with an object page in V2\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {Schema} genericSchemas - The generic schemas\n * @param {Schema} appSchemas - the list of app schemas that shall get extended\n */\nfunction generateObjectPageSchemasV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    appSchemas: Schemas\n): void {\n    const allPages = getPagesV2(\n        generateParameters.manifest[ManifestSection.generic].pages,\n        v2.FE_TEMPLATE_V2_OBJECT_PAGE\n    );\n    for (const page in allPages) {\n        const entitySetName = allPages[page].entitySet;\n        const entitySet = getEntitySetByEntitySetName(entitySetName, generateParameters.serviceAVT);\n        const entityTypeName = entitySet?.entityType?.name;\n        const schemaFile = getSchemaFilePath(SchemaType.ObjectPage, entitySet?.name || entitySetName);\n        const genericSchemaFile = getSchemaFilePath(SchemaType.ObjectPage);\n        appSchemas[schemaFile.filename] = generateObjectPageSchemaV2(\n            generateParameters,\n            genericSchemas[genericSchemaFile.filename],\n            entityTypeName\n        );\n    }\n}\n\n/**\n * The function generates one app schema per entitySet that is linked with an object page in V4\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {Schemas} genericSchemas - The generic schemas\n * @param {Schemas} appSchemas - the list of app schemas that shall get extended\n */\nfunction generateObjectPageSchemasV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    appSchemas: Schemas\n): void {\n    const pages = getPagesV4(generateParameters.manifest, v4.FE_TEMPLATE_V4_OBJECT_PAGE);\n    for (const page in pages) {\n        const entitySetName = pages[page].options.settings.entitySet;\n        const entitySet = getEntitySetByEntitySetName(entitySetName, generateParameters.serviceAVT);\n        if (!entitySet) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('ENTITYSETNOTFOUND', { entitySet: entitySetName }),\n                location: {\n                    path: METADATAPATH\n                }\n            });\n        }\n        const entityTypeName = entitySet?.entityType?.name;\n        const schemaFile = getSchemaFilePath(SchemaType.ObjectPage, entitySet?.name || entitySetName);\n        const genericSchemaFile = getSchemaFilePath(SchemaType.ObjectPage);\n        appSchemas[schemaFile.filename] = generateObjectPageSchemaV4(\n            generateParameters,\n            genericSchemas[genericSchemaFile.filename],\n            entityTypeName\n        );\n    }\n}\n\n/**\n * Generates all app specific schemas for a Fiori Elements V2 application\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {Schemas} genericSchemas - The generic schemas\n * @param {UiEntityTypes} uiEntityTypes - list of all entity types, as comprised in oDataServiceAVT\n * @param {TemplateType} templateType - the given Fiori Elements' template type\n */\nfunction generateAppSchemasV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    uiEntityTypes: UiEntityTypes,\n    templateType: TemplateType\n): Schemas {\n    const appSchemas: Schemas = {};\n    if (templateType === TemplateType.ListReportObjectPageV2 && uiEntityTypes) {\n        /*--- List Report ----*/\n        const allPages = getPagesV2(\n            generateParameters.manifest[ManifestSection.generic].pages,\n            v2.FE_TEMPLATE_V2_LIST_REPORT\n        );\n\n        for (const page in allPages) {\n            const entitySetName = allPages[page].entitySet;\n            const entitySet = getEntitySetByEntitySetName(entitySetName, generateParameters.serviceAVT);\n            const entityTypeName = entitySet?.entityType?.name;\n            const schemaFile = getSchemaFilePath(SchemaType.ListReport, entitySet?.name || entitySetName);\n            const genericSchemaFile = getSchemaFilePath(SchemaType.ListReport);\n            appSchemas[schemaFile.filename] = generateListReportSchemaV2(\n                generateParameters,\n                genericSchemas[genericSchemaFile.filename],\n                entityTypeName\n            );\n        }\n        /*--- Object Pages ----*/\n        generateObjectPageSchemasV2(generateParameters, genericSchemas, appSchemas);\n    } else if (templateType === TemplateType.AnalyticalListPageV2 && uiEntityTypes) {\n        /*--- Analytical List Page ----*/\n        const allPages = getPagesV2(generateParameters.manifest[ManifestSection.generic].pages, v2.FE_TEMPLATE_V2_ALP);\n\n        for (const page in allPages) {\n            const entitySetName = allPages[page].entitySet;\n            const entitySet = getEntitySetByEntitySetName(entitySetName, generateParameters.serviceAVT);\n            const entityTypeName = entitySet?.entityType?.name;\n            const schemaFile = getSchemaFilePath(SchemaType.AnalyticalListPage, entitySet?.name || entitySetName);\n            const genericSchemaFile = getSchemaFilePath(SchemaType.AnalyticalListPage);\n            appSchemas[schemaFile.filename] = generateAnalyticalListReportSchemaV2(\n                generateParameters,\n                genericSchemas[genericSchemaFile.filename],\n                entityTypeName\n            );\n        }\n        /*--- Object Pages ----*/\n        generateObjectPageSchemasV2(generateParameters, genericSchemas, appSchemas);\n    } else if (templateType === TemplateType.OverviewPageV2) {\n        /*--- Overview Page ----*/\n        const schemaFile = getSchemaFilePath(SchemaType.OverviewPage);\n        const genericSchemaFile = getSchemaFilePath(SchemaType.OverviewPage);\n        appSchemas[schemaFile.filename] = generateOVPInterfaceV2(\n            genericSchemas[genericSchemaFile.filename],\n            generateParameters.manifest\n        );\n    }\n    return { ...genericSchemas, ...appSchemas };\n}\n\n/**\n * Generates all app specific schemas for a Fiori Elements V4 application\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {Schemas} genericSchemas - The generic schemas\n * @param {UiEntityTypes} uiEntityTypes - list of all entity types, as comprised in oDataServiceAVT\n * @param {TemplateType} templateType - the given Fiori Elements' template type\n */\nfunction generateAppSchemasV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchemas: Schemas,\n    uiEntityTypes: UiEntityTypes,\n    templateType: TemplateType\n): Schemas {\n    const appSchemas: Schemas = {};\n\n    if (uiEntityTypes) {\n        if (\n            templateType === TemplateType.ListReportObjectPageV4 ||\n            templateType === TemplateType.AnalyticalListPageV4\n        ) {\n            /*--- List Report ----*/\n            const lrPages = getPagesV4(generateParameters.manifest, v4.FE_TEMPLATE_V4_LIST_REPORT);\n            const alpPages = getPagesV4(generateParameters.manifest, v4.FE_TEMPLATE_V4_ALP);\n            const pages = { ...lrPages, ...alpPages };\n            for (const pageId in pages) {\n                const entitySetName = pages[pageId].options.settings.entitySet;\n                const entitySet = getEntitySetByEntitySetName(entitySetName, generateParameters.serviceAVT);\n                const schemaFile = getSchemaFilePath(SchemaType.ListReport, entitySet?.name || entitySetName);\n                const genericSchemaFile = getSchemaFilePath(SchemaType.ListReport);\n                appSchemas[schemaFile.filename] = generateListReportSchemaV4(\n                    generateParameters,\n                    genericSchemas[genericSchemaFile.filename],\n                    entitySet,\n                    pages[pageId].name\n                );\n            }\n            /*--- Object Pages ----*/\n            generateObjectPageSchemasV4(generateParameters, genericSchemas, appSchemas);\n        } else if (templateType === TemplateType.FreestylePageV4) {\n            const genericSchemaFile = getSchemaFilePath(SchemaType.FreestylePage);\n            appSchemas[genericSchemaFile.filename] = generateFreestyleSchemaV4(\n                generateParameters,\n                genericSchemas[genericSchemaFile.filename]\n            );\n            generateObjectPageSchemasV4(generateParameters, genericSchemas, appSchemas);\n        }\n    }\n    return { ...genericSchemas, ...appSchemas };\n}\n\n/**\n * Generates app specific schemas by adding annotation information to copies of the generic schemas, thus replacing all generic definitions.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {UiEntityTypes} uiEntityTypes - list of all entity types from the service metadata\n * @param templateType - type of the Fiori Elements' template\n */\nasync function generateAppSchemas(\n    generateParameters: GenerateAppSchemaParameters,\n    uiEntityTypes: UiEntityTypes,\n    templateType: TemplateType\n): Promise<Schemas> {\n    const genericSchemas = await getGenericSchemas(templateType, generateParameters.fioriElementsVersion);\n\n    if (generateParameters.fioriElementsVersion === FioriElementsVersion.v4) {\n        return generateAppSchemasV4(generateParameters, genericSchemas, uiEntityTypes, templateType);\n    } else {\n        return generateAppSchemasV2(generateParameters, genericSchemas, uiEntityTypes, templateType);\n    }\n}\n\n/**\n * Imports manifest and flex changes into configuration files with aid of the relevant app provider\n * @param {Manifest} manifest - manifest.json file content of the app in JSON format\n * @param {string[]} flex - list of all UI flexibility changes\n * @param {Schemas} appSchemas - list of app-specific schemas\n * @param {TemplateType} templateType - type of the Fiori Elements' template\n * @param {FileData[]} fragments - extension fragments with their file content\n * @param {ExtensionLogger} logger - logger instance for messages\n *\n * @returns {File[]} a list of all configuration files as generated by the function\n */\nfunction importConfigs(\n    manifest: Manifest,\n    flex: string[],\n    appSchemas: Schemas,\n    templateType: TemplateType,\n    fragments: FileData[],\n    logger: ExtensionLogger\n): File[] {\n    let provider: AppProvider;\n    const files: File[] = [];\n\n    switch (templateType) {\n        case TemplateType.ListReportObjectPageV2:\n        case TemplateType.AnalyticalListPageV2:\n            provider = new V2AppProvider(manifest, flex, appSchemas, fragments, logger);\n            break;\n        case TemplateType.AnalyticalListPageV4:\n        case TemplateType.ListReportObjectPageV4:\n            provider = new V4AppProvider(manifest, appSchemas, templateType, undefined, logger);\n            break;\n        case TemplateType.OverviewPageV2:\n            provider = new V2OvpProvider(manifest, appSchemas, logger);\n            break;\n        case TemplateType.FreestylePageV4:\n            provider = new V4FreestyleAppProvider(manifest, appSchemas, templateType, undefined, logger);\n            break;\n        default:\n            break;\n    }\n    if (provider) {\n        const { appConfig, pageConfigs } = provider.createConfigFiles();\n        for (const app in appConfig) {\n            files.push({ dataSourceUri: app, fileContent: JSON.stringify(appConfig[app], null, 4) });\n        }\n        for (const config in pageConfigs) {\n            files.push({ dataSourceUri: config, fileContent: JSON.stringify(pageConfigs[config], null, 4) });\n        }\n    }\n    return files;\n}\n\nfunction getFileList(schema: Schemas, configs?: File[]): File[] {\n    let files: File[] = [];\n    for (const schemaName of Object.keys(schema).sort()) {\n        let dataSourceUri;\n        if (schemaName === SchemaType.Application) {\n            dataSourceUri = `${DirName.Schemas}/${FileName.App[0].toUpperCase()}${FileName.App.slice(1)}`;\n        } else {\n            dataSourceUri = `${DirName.Schemas}/${schemaName}.json`;\n        }\n        files.push({ dataSourceUri, fileContent: JSON.stringify(schema[schemaName], null, 4) });\n    }\n    if (configs) {\n        files = files.concat(configs);\n    }\n    return files;\n}\n\n/**\n * Import the schema and config files for a given project\n * @param {ImportProjectParameters} importParameters - files of the project: manifest, flex changes, odata files\n */\nexport async function importProjectSchema(importProjectParameters: ImportProjectParameters): Promise<File[]> {\n    // Initialize i18next\n    initI18n();\n\n    const fioriElementsVersion = getVersionFromManifest(importProjectParameters.manifest);\n    const service = parseAndMergeAndConvert(importProjectParameters.annotations, importProjectParameters.logger);\n    const uiEntityTypes = getAnnotationsForUi(service);\n    const templateType = getTemplateTypeFromManifest(\n        importProjectParameters.manifest,\n        fioriElementsVersion,\n        importProjectParameters.logger\n    );\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        manifest: importProjectParameters.manifest,\n        serviceAVT: service,\n        fragments: importProjectParameters.fragments,\n        fioriElementsVersion,\n        logger: importProjectParameters.logger\n    };\n\n    const appSchemas = await generateAppSchemas(generateParameters, uiEntityTypes, templateType);\n    return getFileList(appSchemas);\n}\n\n/**\n * Import the schema and config files for a given project\n * @param {ImportProjectParameters} importParameters - files of the project: manifest, flex changes, odata files\n */\nexport async function importProjectSchemaAndConfig(importProjectParameters: ImportProjectParameters): Promise<File[]> {\n    // Initialize i18next\n    initI18n();\n\n    let configFiles: File[] = [];\n    const { manifest, annotations, flex, fragments, logger } = importProjectParameters;\n    const fioriElementsVersion = getVersionFromManifest(manifest);\n    const oDataServiceAVT = parseAndMergeAndConvert(annotations, logger);\n    const templateType = getTemplateTypeFromManifest(manifest, fioriElementsVersion, logger);\n\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        manifest: importProjectParameters.manifest,\n        serviceAVT: oDataServiceAVT,\n        fragments: importProjectParameters.fragments,\n        fioriElementsVersion,\n        logger: importProjectParameters.logger\n    };\n    const uiEntityTypes = getAnnotationsForUi(oDataServiceAVT);\n    const appSchemas = await generateAppSchemas(generateParameters, uiEntityTypes, templateType);\n    configFiles = importConfigs(manifest, flex, appSchemas, templateType, fragments, logger);\n    return getFileList(appSchemas, configFiles);\n}\n", "import type {\n    Manifest,\n    FileData,\n    Files,\n    ExtensionLogger,\n    ImportListReportV2Parameters,\n    ImportALPV2Parameters,\n    ImportObjectPageV2Parameters\n} from '@sap/ux-specification-types';\nimport { FioriElementsVersion, PageType, ManifestSection, v2, SchemaType } from '@sap/ux-specification-types';\nimport { AppProvider } from '../../../common/appProvider';\nimport { transferSettingsOfObject } from '../common';\nimport { createListReportConfig } from '../pages/listReport';\nimport { createAnalyticalListPageConfig } from '../pages/analyticalListPage';\nimport { createObjectPageConfigV2 } from '../pages/objectPage';\nimport { AppSettings } from '../../application';\nimport { getSchemaFilePath, generatePageId, getPageTypeV2 } from '../../../common';\n\n/**\n * Method which generates id for passed page\n * @param page - Generic Page object.\n * @returns {string} Generated page id\n */\nfunction generateId(page: v2.SapUiAppPageV2): string {\n    return generatePageId(getPageTypeV2(page.component.name), page.entitySet);\n}\n\nfunction getPageConfigsAndNavigations(\n    page: v2.Page,\n    v2Page: v2.SapUiAppPageV2,\n    flex: string[],\n    manifest: any,\n    schemas: any,\n    fragments: FileData[],\n    pages: { [key: string]: v2.Page }\n) {\n    page.navigation = {};\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const targets: { [key: string]: v2.Page } = getPagesAndConfigs(v2Page.pages, flex, manifest, schemas, fragments);\n    for (const pageId in targets) {\n        const target = targets[pageId];\n        pages[pageId] = target;\n    }\n    for (const v2ChildPageName in v2Page.pages) {\n        const id = generateId(v2Page.pages[v2ChildPageName]);\n        page.navigation[id] = targets[id].navigationProperty\n            ? `${page.entitySet}.${targets[id].navigationProperty}`\n            : page.entitySet;\n    }\n}\n\n/**\n * Sets up page definitions, including the configurations for them\n * @param {SapUiAppPagesV2} v2Pages - lisr of all pages\n * @param flex - list of flexibility changes\n * @param manifest - manifest.json of the app\n * @param schemas - list of all app-specific schemas\n * @param fragments - list of fragments\n * @param {ExtensionLogger} logger - logger for messages\n * @returns an index table of page definitions\n */\nfunction getPagesAndConfigs(\n    v2Pages: v2.SapUiAppPagesV2,\n    flex: string[],\n    manifest,\n    schemas,\n    fragments?: FileData[],\n    logger?: ExtensionLogger\n): { [key: string]: v2.Page } {\n    const pages: { [key: string]: v2.Page } = {};\n    for (const v2PageName in v2Pages) {\n        const v2Page = v2Pages[v2PageName];\n        const id = generateId(v2Page);\n        const page: v2.Page = {\n            pageType: getPageTypeV2(v2Page.component.name),\n            entitySet: v2Page.entitySet,\n            ...(v2Page.navigationProperty && { navigationProperty: v2Page.navigationProperty }),\n            ...(v2Page.defaultLayoutType && { defaultLayoutType: v2Page.defaultLayoutType })\n        };\n        pages[id] = page;\n\n        // Get the JSON schema for the page. If no page specific schema exists, fall back top the generic schema for the page type\n        const jsonSchema: string =\n            Object.keys(schemas).find((element) => element.includes(id)) ||\n            Object.keys(schemas).find((element) => element.includes(id.slice(0, -1))) ||\n            Object.keys(schemas).find((element) => element.includes(page.pageType));\n\n        // convert settings to config\n        if (jsonSchema) {\n            if (page.pageType === PageType.ListReport) {\n                const importParameters: ImportListReportV2Parameters = {\n                    manifest,\n                    flex,\n                    jsonSchema: schemas[jsonSchema],\n                    fragments,\n                    logger\n                };\n                page.config = createListReportConfig(importParameters);\n            } else if (page.pageType === PageType.AnalyticalListPage) {\n                const importParameters: ImportALPV2Parameters = {\n                    manifest,\n                    flex,\n                    jsonSchema: schemas[jsonSchema],\n                    fragments,\n                    logger\n                };\n                page.config = createAnalyticalListPageConfig(importParameters);\n            } else {\n                const importParameters: ImportObjectPageV2Parameters = {\n                    manifest,\n                    flex,\n                    jsonSchema: schemas[jsonSchema],\n                    entitySet: page.entitySet,\n                    fragments,\n                    logger\n                };\n                page.config = createObjectPageConfigV2(importParameters);\n            }\n        }\n        if (v2Page.pages) {\n            getPageConfigsAndNavigations(page, v2Page, flex, manifest, schemas, fragments, pages);\n        }\n    }\n    return pages;\n}\n\n/**\n * The V2AppProvider collects all the app information for a Fiori Elements V2 app\n */\nexport class V2AppProvider extends AppProvider {\n    public constructor(\n        manifest: Manifest,\n        changes: string[],\n        schemas: Files,\n        fragments?: FileData[],\n        logger?: ExtensionLogger\n    ) {\n        const v2Pages = manifest[ManifestSection.generic].pages;\n        const pageKey = Object.keys(v2Pages)[0];\n        // Import settings\n        const appSettings = new AppSettings();\n        const schemaFile = getSchemaFilePath(SchemaType.Application);\n        const appSchema = schemas[schemaFile.filename];\n        transferSettingsOfObject(appSettings, manifest, appSchema['definitions']['AppSettings'], undefined);\n        // Call base\n        super(\n            manifest,\n            schemas,\n            generateId(v2Pages[pageKey]),\n            getPagesAndConfigs(v2Pages, changes, manifest, schemas, fragments, logger),\n            FioriElementsVersion.v2,\n            appSettings\n        );\n    }\n}\n\n/**\n * Collects all pages of a V2 app from the manifest, by traversing the V2 page hierarchy.\n * @param v2Pages - entry point = complex page definition in manifest\n * @param componentName - Component name\n * @returns index table of pages\n */\nexport function getPages(v2Pages: v2.SapUiAppPagesV2, componentName: string): v2.Pages {\n    const pages: v2.Pages = {};\n    for (const v2PageName in v2Pages) {\n        const v2Page = v2Pages[v2PageName];\n        if (v2Page.component.name === componentName) {\n            const id = generateId(v2Page);\n            pages[id] = v2Page;\n        }\n        if (componentName === v2.FE_TEMPLATE_V2_OBJECT_PAGE && v2Page.pages) {\n            const subPages = getPages(v2Page.pages, componentName);\n            for (const subPageId in subPages) {\n                pages[subPageId] = subPages[subPageId];\n            }\n        }\n    }\n    return pages;\n}\n", "import type {\n    ExtensionLogger,\n    Application,\n    CustomPageConfig,\n    Files,\n    Manifest,\n    PagesBase,\n    v2,\n    v4\n} from '@sap/ux-specification-types';\nimport {\n    DirName,\n    FileName,\n    FioriElementsVersion,\n    OdataVersion,\n    ViewTypes,\n    PageTypeV4,\n    SchemaType\n} from '@sap/ux-specification-types';\nimport { getSchemaFilePath } from './utils';\n\n/**\n * Splits and returns the name of a custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @returns {string} custom page name\n */\nfunction getCustomPageName(page: v2.Page | v4.Page): string {\n    const targetName = (page as v4.Page).view.name?.split('.');\n    return targetName[targetName.length - 1];\n}\n\n/**\n * Returns the view type of a custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @param {Application} app - application\n * @returns {string} view type\n */\nfunction getViewType(page: v2.Page | v4.Page, app: Application): string {\n    const viewType = (page as v4.Page)?.view?.viewType || (app.settings as v4.AppSettings)?.viewType;\n    return (viewType || ViewTypes.XML).toLowerCase();\n}\n\n/**\n * Returns the view path and file name of the custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @param {Application} app - application\n * @param {string} viewName - name of view\n * @returns {string} view path\n */\nfunction getViewPath(\n    page: v4.Page | v2.Page,\n    app: Application,\n    viewPath: string[]\n): { viewPath: string[]; fileName: string } {\n    const splitViewPath = (splitPath: string): string[] => {\n        return splitPath.split(`${app.id}.`)[1]?.split('.');\n    };\n    const appSettings = app.settings as v4.AppSettings;\n    const appPath = (page as v4.Page).view?.path || appSettings?.path;\n    const pageName = (page as v4.Page).view?.name;\n    if (pageName?.includes(app.id)) {\n        viewPath = splitViewPath(pageName);\n    } else if (appPath?.includes(app.id)) {\n        viewPath = [...splitViewPath(appPath), ...pageName.split('.')];\n    }\n    const [pathParts, fileName] = [viewPath.slice(0, -1), ...viewPath.slice(-1)];\n    return { viewPath: pathParts, fileName };\n}\n\n/**\n * Returns the page name and path of a custom page\n * @param {v4.Page|v2.Page} page - custom page\n * @param {string} appId - Application id\n * @returns page name\n */\nfunction getCustomPagePath(page: v2.Page | v4.Page, app: Application): string {\n    const viewName = page.entitySet || getCustomPageName(page);\n    const { viewPath, fileName } = getViewPath(page, app, [viewName]);\n    const viewType = getViewType(page, app);\n    // we always use '/' as separator so that snapshot tests generated from Windows do not fail on Jenkins\n    return [...viewPath, `${fileName}.view.${viewType}`].join('/');\n}\n\nexport interface Controllers {\n    [key: string]: string;\n}\n\nexport abstract class AppProvider {\n    public readonly app: Application;\n    public readonly logger: ExtensionLogger;\n    public readonly schemas: Files;\n    // Store controller names which should be handled lately\n    public unhandledControllers: Array<string> = [];\n\n    protected constructor(\n        manifest: Manifest,\n        schemas: Files,\n        home: string,\n        pages: PagesBase,\n        version: FioriElementsVersion,\n        settings?: v2.AppSettings | v4.AppSettings,\n        logger?: ExtensionLogger\n    ) {\n        const schemaFile = getSchemaFilePath(SchemaType.Application);\n        this.app = {\n            $schema: schemaFile.path,\n            id: manifest['sap.app'].id,\n            pages,\n            home,\n            target: {\n                fioriElements: version,\n                odata: version === FioriElementsVersion.v2 ? OdataVersion.v2 : OdataVersion.v4\n            },\n            ...(settings && { settings })\n        };\n        this.schemas = schemas;\n        this.logger = logger;\n    }\n\n    /**\n     * Create config files for app (app.json) and pages (pages/{name}.json).\n     * This is basically a copy of createFiles optimized to be used in FTFS:\n     * it always uses posix path notation with forward slash (/)\n     * @param {ConvertedMetadata} oDataServiceAVT - Complete service information, as returned by annotation vocabularies tool\n     * @returns app and page files as separate objects\n     */\n    public createConfigFiles(): { appConfig: Files; pageConfigs: Files } {\n        const pageConfigs: Files = {};\n        const appConfig: Files = {};\n        let page: v2.Page | v4.Page;\n        // add schema reference to all pages\n        for (const pageId in this.app.pages) {\n            page = this.app.pages[pageId];\n            if ([PageTypeV4.CustomPage, PageTypeV4.FPMCustomPage].includes(page.pageType as PageTypeV4)) {\n                const $filePath = getCustomPagePath(page, this.app);\n                const { path: $schema } = getSchemaFilePath(page.pageType);\n                const config: CustomPageConfig = { $filePath, $schema };\n                pageConfigs[`${DirName.Pages}/${pageId}.json`] = config;\n            } else if (page.config) {\n                const config = page.config;\n                const schemaFile = getSchemaFilePath(page.pageType, page.entitySet);\n                if (this.schemas[schemaFile.filename]) {\n                    config.$schema = schemaFile.path;\n                } else {\n                    const genericSchemaFile = getSchemaFilePath(page.pageType);\n                    config.$schema = genericSchemaFile.path;\n                }\n                pageConfigs[`${DirName.Pages}/${pageId}.json`] = config;\n            }\n        }\n\n        // remove config before converting to JSON\n        const app: Application = JSON.parse(JSON.stringify(this.app));\n        for (const pageId in app.pages) {\n            delete app.pages[pageId].config;\n        }\n        appConfig[FileName.App] = app;\n\n        return { appConfig, pageConfigs };\n    }\n}\n", "import {\n    v2,\n    FRAGMENTNAMEPART,\n    PropertyName,\n    ControlType,\n    PageType,\n    PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP,\n    ViewTemplateType,\n    LogSeverity,\n    ManifestSection\n} from '@sap/ux-specification-types';\nimport type { FlexForTransfer } from '../controls/table';\nimport { addFlexForTable } from '../controls/table';\nimport type {\n    ChangeDefinition,\n    FileData,\n    ObjectPageSectionData,\n    Manifest,\n    ExtensionLogger\n} from '@sap/ux-specification-types';\nimport {\n    convertActionKeyToStableId,\n    checkDeprecatedProperties,\n    importProperty,\n    parseChangeString\n} from '../../../common';\nimport { getReflectMetadata } from '../../../common/decoration/decorators';\nimport { ensureManifestSectionByPathV2 } from '../../export/manifest';\nimport { log } from '../../../../extensionLogger';\nimport i18next from 'i18next';\nimport { xml2json } from 'xml-js';\nimport type { TableCustomColumn } from '../../export/controls';\nimport { FRAGMENT_DEFINITION, getRootCustomColumnFromFragmentJSON } from '../../export/controls';\nimport { ActionTypeV2 } from '../../types';\nimport type { Definition } from 'typescript-json-schema';\n\nexport type LROPConfigsType = v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2 | v2.ObjectPageConfigV2;\n\nexport function convertActionKey(actionProperty: string) {\n    return actionProperty.replace('/', '::');\n}\n\n/**\n * Unescapes the selector ID of a flex change\n * @param selectorId - escaped selector ID\n * @returns unescaped ID\n */\nexport function convertSelector(selectorId: string): string {\n    return selectorId.replace(/:2f/g, '/').replace(/:23/g, '#').replace(/:40/g, '@');\n}\n\n/**\n * Adds flex changes to Smart Filter Bar in config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {string} changePropertyKey - property key of current change\n * @param {ChangeDefinition} change - change definition\n * @param {object} jsonSchema - application specific schema\n */\nfunction addSmartFilterBarFlex(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    changePropertyKey: string,\n    change: ChangeDefinition,\n    jsonSchema: object\n) {\n    const schemaProperty =\n        jsonSchema['definitions']?.['ListReportFilterBar']?.properties[changePropertyKey] ||\n        jsonSchema['definitions']?.['AnalyticalListPageFilterBar']?.properties[changePropertyKey];\n    if (schemaProperty) {\n        config.filterBar[changePropertyKey] = change.content.newBinding\n            ? change.content.newBinding\n            : change.content.newValue;\n    }\n}\n\n/**\n * Creates a map to connect action types to the correct schema definition and config part\n * @param definitionType action type that will be filtered for\n * @param jsonSchema application specific schema\n * @returns {Map} actionMap - mapping of actionId, id for schema reference and id for config\n */\nfunction filterActions(definitionType: string, jsonSchema) {\n    const actions = Object.keys(jsonSchema['definitions']).filter(\n        (definition) => definition.startsWith(`${definitionType}`) && definition.includes('<')\n    );\n    const actionMap: Map<string, string> = new Map();\n    actions.forEach((definitionActionId) => {\n        const fullActionId = convertActionKeyToStableId(definitionActionId.split('<')[1]?.split('>')[0]);\n        const splitPoint = fullActionId.indexOf(':::');\n        if (fullActionId.startsWith('DataField') && splitPoint > -1) {\n            const actionIdParts = fullActionId.split(':::');\n            const sSemanticObject = actionIdParts.find((part) => part.startsWith('sSemanticObject'));\n            const sAction = actionIdParts.find((part) => part.startsWith('sAction'));\n            const shortAction = sAction.split('sAction::')[1].replace(':2f', '::');\n            if (sSemanticObject) {\n                const shortActionId = `${sSemanticObject.split('::')[1]}::${shortAction}`;\n                const shortDefinitionActionId = `${actionIdParts[0]}:::${sSemanticObject}:::${sAction}`;\n                actionMap.set(shortActionId, definitionActionId);\n                actionMap.set(definitionActionId, shortDefinitionActionId);\n            } else {\n                actionMap.set(shortAction, definitionActionId);\n                actionMap.set(definitionActionId, fullActionId);\n            }\n        } else {\n            actionMap.set(fullActionId.replace(':2f', '::'), definitionActionId);\n            actionMap.set(definitionActionId, fullActionId);\n        }\n    });\n    return actionMap;\n}\n\n/**\n * Adds a new action column to config\n * @param action - action part of config to be filled\n * @param config - the config of ALP/LR\n * @param configId - id of action to be used in config\n */\nfunction addColumnActionConfigPart(\n    action: { name: ActionTypeV2; configPart: v2.Actions | v2.GenericColumns; id: string },\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    configId: string\n) {\n    if (!action.configPart) {\n        action.configPart = config.table.columns = {};\n    }\n    if (!action.configPart[`${configId}`]) {\n        action.configPart[`${configId}`] = {};\n    }\n}\n\n/**\n * Adds flex changes to Actions in config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {string} changePropertyKey - property key of current change\n * @param {ChangeDefinition} change - change definition\n * @param {object} jsonSchema - application specific schema\n */\nfunction addActionFlex(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    changePropertyKey: string,\n    change: ChangeDefinition,\n    jsonSchema: Definition\n) {\n    const controlId = change.controlId.split('--action::')[1];\n    if (!controlId) {\n        return;\n    }\n    const actionId = convertSelector(controlId);\n    const actionTypes = [\n        {\n            name: ActionTypeV2.Footer,\n            configPart: config.footer.actions,\n            id: actionId.includes('Determining') && actionId.split('::Determining')[0]\n        },\n        { name: ActionTypeV2.ToolBar, configPart: config.table.toolBar.actions, id: actionId },\n        { name: ActionTypeV2.Column, configPart: config.table.columns, id: actionId }\n    ];\n    actionTypes.forEach((action) => {\n        const schemaActions = filterActions(action.name, jsonSchema);\n        if (schemaActions.has(action.id)) {\n            const referenceId = schemaActions.get(action.id);\n            const configId = referenceId.split('<')[1]?.split('>')[0];\n            if (action.name === ActionTypeV2.Column) {\n                addColumnActionConfigPart(action, config, configId);\n            }\n            const configPart = action.configPart[configId];\n            const schemaProperty = (jsonSchema.definitions[referenceId] as Definition)?.properties[changePropertyKey];\n            if (schemaProperty && configPart) {\n                configPart[changePropertyKey] = change.content.newBinding\n                    ? change.content.newBinding\n                    : change.content.newValue;\n            }\n        }\n    });\n}\n\n/**\n * Adds flex changes to Smart Chart in config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {string} changePropertyKey - property key of current change\n * @param {ChangeDefinition} change - change definition\n * @param {object} jsonSchema - application specific schema\n */\nfunction addSmartChartFlex(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    changePropertyKey: string,\n    change: ChangeDefinition,\n    jsonSchema: object\n) {\n    const schemaProperty = jsonSchema['definitions']['ChartSettings'].properties[changePropertyKey];\n    if (schemaProperty) {\n        const syncRule = getReflectMetadata(config[PropertyName.chart], changePropertyKey);\n        if (syncRule?.flex?.importFlexValue) {\n            syncRule.flex.importFlexValue(change, config[PropertyName.chart], changePropertyKey);\n        } else {\n            config[PropertyName.chart][changePropertyKey] = change.content.newBinding\n                ? change.content.newBinding\n                : change.content.newValue;\n        }\n    }\n}\n\n/**\n * Checks and adds further flex changes to in config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {ChangeDefinition} change - change definition\n * @param {object} jsonSchema - application specific schema\n */\nfunction addAdditionalFlexChanges(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    change: ChangeDefinition,\n    jsonSchema: object\n) {\n    const flexForTransfer: FlexForTransfer = {\n        controlId: change.controlId,\n        propertyId: change.content.property,\n        newValue: change.content.newBinding ? change.content.newBinding : change.content.newValue,\n        controlType: change.controlType,\n        creation: change.creation\n    };\n    let constructorName;\n    if (\n        (!config.table.type || config.table.type === v2.TableTypeV2.ResponsiveTable) &&\n        !flexForTransfer.controlId.includes(PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP.get(PageType.AnalyticalListPage))\n    ) {\n        constructorName = 'ResponsiveTableWithMultiSelect';\n    } else {\n        constructorName = config.table.constructor.name;\n    }\n    const schemaProperty =\n        jsonSchema['definitions'][`${constructorName}<LineItems>`].properties[flexForTransfer.propertyId];\n    if (schemaProperty || flexForTransfer.controlType === ControlType.TableColumn) {\n        addFlexForTable(config.table, flexForTransfer, jsonSchema);\n    }\n}\n\n/**\n * Adds flex changes to config file\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {string} changeString - change file as string\n * @param {object} appSchema - application specific schema\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function addFlex(\n    config: v2.ListReportConfigV2 | v2.AnalyticalListPageConfigV2,\n    changeString: string,\n    appSchema: object,\n    logger?: ExtensionLogger\n): void {\n    try {\n        const change = parseChangeString(changeString) as ChangeDefinition;\n        const changePropertyKey = change.content.property;\n        if (\n            change.controlId?.includes(PageType.ListReport) ||\n            change.controlId?.includes(PageType.AnalyticalListPage)\n        ) {\n            change.controlId = convertSelector(change.controlId);\n            switch (change.controlType) {\n                case ControlType.SmartFilterBar: {\n                    addSmartFilterBarFlex(config, changePropertyKey, change, appSchema);\n                    break;\n                }\n                case ControlType.DynamicPage: {\n                    const schemaProperty = appSchema['properties'][changePropertyKey];\n                    if (schemaProperty) {\n                        config[change.content.property] = change.content.newValue;\n                    }\n                    break;\n                }\n                case ControlType.Button: {\n                    addActionFlex(config, changePropertyKey, change, appSchema);\n                    break;\n                }\n                case ControlType.SmartChart: {\n                    addSmartChartFlex(config, changePropertyKey, change, appSchema);\n                    break;\n                }\n                default: {\n                    addAdditionalFlexChanges(config, change, appSchema);\n                    break;\n                }\n            }\n        }\n    } catch (error) {\n        log(\n            logger,\n            {\n                severity: LogSeverity.Error,\n                message: i18next.t('FLEXERROR')\n            },\n            ...error\n        );\n    }\n}\n\n/**\n * Special post-processing for quickVariantSelectionX during the import\n * @param propertyKey - key of the current schema property\n * @param configPart  - part of the configuration to be enhanced\n */\nfunction adjustQuickVariantSelectionX(propertyKey: string, configPart: { [key: string]: any }) {\n    if (propertyKey === 'quickVariantSelectionX' && configPart[propertyKey]) {\n        for (const variant in configPart[propertyKey]['variants']) {\n            const currentQuickVariantX = configPart[propertyKey]['variants'][variant];\n            if (currentQuickVariantX['tableSettings']) {\n                for (const key in currentQuickVariantX['tableSettings']) {\n                    currentQuickVariantX[key] = currentQuickVariantX['tableSettings'][key];\n                }\n                delete currentQuickVariantX['tableSettings'];\n            }\n        }\n    }\n}\n\n/**\n * Transfers settings from manifest to object page config\n * @param configPart - part of the configuration to be filled\n * @param manifest - manifest.json of the app\n * @param appSchema - app specific schema\n * @param pageID - ID of the given object page\n * @param sectionId (optional) - ID of the given section (optional)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function transferSettingsOfObject(\n    configPart: { [key: string]: any },\n    manifest: Manifest,\n    appSchema: object,\n    pageKey: string,\n    logger?: ExtensionLogger,\n    kpiKey?: string\n): void {\n    if (!appSchema) {\n        return;\n    }\n    let manifestSection = {};\n    const deprecatedProperties = configPart.getDeprecated ? configPart.getDeprecated() : undefined;\n\n    if (appSchema['properties']) {\n        for (const propertyKey in appSchema['properties']) {\n            const syncRule = getReflectMetadata(configPart, propertyKey);\n            if (syncRule?.manifest) {\n                const path = syncRule.manifest.path([pageKey], manifest, kpiKey);\n                manifestSection = ensureManifestSectionByPathV2(manifest, path);\n                importProperty(syncRule, manifestSection, propertyKey, configPart);\n                checkDeprecatedProperties(deprecatedProperties, manifestSection, path, logger);\n            }\n            // Adjustment of 'quickVariantSelectionX' - tableSettings\n            adjustQuickVariantSelectionX(propertyKey, configPart);\n        }\n    }\n}\n\n/**\n * Determines the table type for a given LR or ALP table, based on the component name and its table settings\n * This does not exactly reflect the run time behavior of Fiori elements but a best guess and expectation.\n * @param manifest - manifest.json file content of the app\n * @param pageKey - key of the page in the manifest\n */\nexport function determineTableType(manifest: Manifest, pageKey: string): v2.TableTypeV2 {\n    const page = manifest[ManifestSection.generic].pages[pageKey];\n    let tableType: v2.TableTypeV2 = v2.TableTypeV2.ResponsiveTable;\n    if (\n        manifest[ManifestSection.generic].pages[pageKey].component.settings &&\n        ((manifest[ManifestSection.generic].pages[pageKey].component.settings.tableSettings &&\n            manifest[ManifestSection.generic].pages[pageKey].component.settings.tableSettings['type']) ||\n            manifest[ManifestSection.generic].pages[pageKey].component.settings['tableType'])\n    ) {\n        tableType = page.component.settings?.tableSettings?.['type'] || page.component.settings['tableType'];\n    } else if (page.component.name === 'sap.suite.ui.generic.template.AnalyticalListPage') {\n        tableType = v2.TableTypeV2.AnalyticalTable;\n    }\n    return tableType;\n}\n\nfunction evaluateFragmentColumn(\n    column: any,\n    viewExtensionsOfPage: any,\n    manifestKey: string,\n    keyPart3: string,\n    config: v2.ListReportConfigV2,\n    extensionType: v2.TableColumnExtensionTypeV2,\n    cellsFragmentName?: string\n): void {\n    if (column['customData'] || column['table:customData']) {\n        const p13nData = column['customData']\n            ? column['customData']['core:CustomData']._attributes.value\n            : column['table:customData']['core:CustomData']._attributes.value;\n        const columnParts = JSON.parse(p13nData.substr(1, p13nData.length));\n        let columnText = column['Text'] && column['Text']._attributes && column['Text']._attributes['text'];\n        if (!columnText) {\n            columnText = column['Label'] && column['Label']._attributes && column['Label']._attributes['text'];\n        }\n        const customElement: TableCustomColumn = {\n            id: column._attributes && column._attributes['id'],\n            text: columnText,\n            ...columnParts,\n            columnKey: columnParts['columnKey'],\n            columnIndex: columnParts['columnIndex'] !== undefined ? Number(columnParts['columnIndex']) : undefined,\n            leadingProperty: columnParts['leadingProperty'],\n            className: viewExtensionsOfPage[manifestKey].className,\n            fragmentName: viewExtensionsOfPage[manifestKey].fragmentName,\n            tabKey: keyPart3,\n            extensionType\n        };\n        if (cellsFragmentName) {\n            customElement.cellsFragmentName = cellsFragmentName;\n        }\n        if (!config.table['columns']['custom']) {\n            config.table['columns']['custom'] = [];\n        }\n        const customColumns = config.table['columns']['custom'] as v2.TableCustomColumns;\n        customColumns.push(customElement);\n    }\n}\n\nfunction determineCellsFragmentName(\n    extensionType: any,\n    viewExtensionsOfPage: any,\n    keyEntitySet: string,\n    referenceId: string\n) {\n    let cellsFragmentName;\n    if (extensionType === ViewTemplateType.ResponsiveTableColumnsExtension) {\n        for (const cellsKey of Object.keys(viewExtensionsOfPage)) {\n            const [cellsKeyType, cellsKeyEntitySet, cellsKeyTab] = cellsKey.split('|');\n            if (\n                cellsKeyType === ViewTemplateType.ResponsiveTableCellsExtension &&\n                cellsKeyEntitySet === keyEntitySet &&\n                cellsKeyTab === referenceId\n            ) {\n                cellsFragmentName = viewExtensionsOfPage[cellsKey].fragmentName;\n            }\n        }\n    }\n    return cellsFragmentName;\n}\n\nfunction analzyeFilteredFragments(\n    filteredFragments: FileData[],\n    config: LROPConfigsType,\n    viewExtensionsOfPage: any,\n    manifestKey: string,\n    keyTab: string,\n    extensionType: any,\n    cellsFragmentName: any\n) {\n    if (filteredFragments[0]) {\n        const fragmentJson = JSON.parse(xml2json(filteredFragments[0].fileContent, { compact: true }));\n        const fragmentDefintion = fragmentJson[FRAGMENT_DEFINITION];\n        const columnDefinition = getRootCustomColumnFromFragmentJSON(fragmentDefintion);\n        if (columnDefinition) {\n            if (!config[PropertyName.table]?.['columns']) {\n                config[PropertyName.table]['columns'] = {};\n            }\n            if (Array.isArray(columnDefinition)) {\n                for (const def of columnDefinition) {\n                    evaluateFragmentColumn(\n                        def,\n                        viewExtensionsOfPage,\n                        manifestKey,\n                        keyTab,\n                        config,\n                        extensionType,\n                        cellsFragmentName\n                    );\n                }\n            } else {\n                evaluateFragmentColumn(\n                    columnDefinition,\n                    viewExtensionsOfPage,\n                    manifestKey,\n                    keyTab,\n                    config,\n                    extensionType,\n                    cellsFragmentName\n                );\n            }\n        }\n    }\n}\n\nfunction processViewExtensions(\n    viewExtensionsOfPage: object,\n    targetKeyEntitySet: string,\n    objectPageSectionData: ObjectPageSectionData,\n    config: LROPConfigsType,\n    fragments?: FileData[]\n) {\n    for (const manifestKey of Object.keys(viewExtensionsOfPage)) {\n        const manifestKeyParts = manifestKey.split('|');\n        const [keyExtensionType, keyEntitySet] = manifestKeyParts;\n        // If Object Page section have key, then Ignore it as it is not from QuickVariantSelectionX\n        const referenceId = manifestKeyParts[2];\n        const keyTab = objectPageSectionData && referenceId === objectPageSectionData.key ? undefined : referenceId;\n        const extensionType = ViewTemplateType[keyExtensionType];\n        if (extensionType && '|' + keyEntitySet === targetKeyEntitySet) {\n            const fragmentType = viewExtensionsOfPage[manifestKey].type\n                ? viewExtensionsOfPage[manifestKey].type.toLowerCase()\n                : 'xml';\n            let fragmentName = viewExtensionsOfPage[manifestKey].fragmentName;\n            if (!fragmentName) {\n                continue;\n            }\n            // Responsive Table ==> check cells' fragment name\n            const cellsFragmentName = determineCellsFragmentName(\n                extensionType,\n                viewExtensionsOfPage,\n                keyEntitySet,\n                referenceId\n            );\n\n            // Retrieve information from fragment\n            const fragmentParts = fragmentName.split('.');\n            fragmentName = fragmentParts[fragmentParts.length - 1] + FRAGMENTNAMEPART + fragmentType;\n            const filteredFragments = fragments.filter((fragment) => fragment['dataSourceUri'].endsWith(fragmentName));\n            analzyeFilteredFragments(\n                filteredFragments,\n                config,\n                viewExtensionsOfPage,\n                manifestKey,\n                keyTab,\n                extensionType,\n                cellsFragmentName\n            );\n        }\n    }\n}\n\n/**\n * Adds custom column information from manifest and fragments to the configuration\n * @param config - configuration, to be enhanced\n * @param manifest - actual manifest.json\n * @param v2Page - actual page in the manifest\n * @param pageType - type of the page\n * @param fragments - list of all fragments\n * @param objectPageSectionData - optional information, for object page\n */\nexport function addFragments(\n    config: LROPConfigsType,\n    manifest: object,\n    v2Page: v2.SapUiAppPageV2,\n    pageType: PageType,\n    fragments?: FileData[],\n    objectPageSectionData?: ObjectPageSectionData\n): void {\n    if (!fragments) {\n        return;\n    }\n    const targetKeyEntitySet =\n        '|' + (objectPageSectionData && objectPageSectionData.target ? objectPageSectionData.target : v2Page.entitySet);\n\n    if (\n        manifest[ManifestSection.ui5] &&\n        manifest[ManifestSection.ui5]['extends'] &&\n        manifest[ManifestSection.ui5]['extends']['extensions'] &&\n        manifest[ManifestSection.ui5]['extends']['extensions']['sap.ui.viewExtensions']\n    ) {\n        const viewExtension = PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP.get(pageType);\n        const viewExtensionsOfPage =\n            manifest[ManifestSection.ui5]['extends']['extensions']['sap.ui.viewExtensions'][viewExtension];\n        if (!viewExtensionsOfPage) {\n            return;\n        }\n        processViewExtensions(viewExtensionsOfPage, targetKeyEntitySet, objectPageSectionData, config, fragments);\n    }\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType, DefinitionName, VOCWITHCOLONS } from '@sap/ux-specification-types';\nimport type { Definition } from 'typescript-json-schema';\n\nexport type FlexForTransfer = {\n    controlId: string;\n    controlType: string;\n    propertyId: string;\n    facetId?: string;\n    newValue: any;\n    creation: string;\n};\n\nexport interface FlexChangesForTransfer {\n    [controlId: string]: FlexForTransfer;\n}\n\nexport type ConfigTableType = v2.ResponsiveTable | v2.TreeTable | v2.AnalyticalTable | v2.GridTable | v2.TableALP;\n\nexport function addFlexForTable(config: ConfigTableType, change: FlexForTransfer, jsonSchema: Definition): void {\n    if (change.controlType.endsWith(DefinitionName.Table)) {\n        config[change.propertyId] = change.newValue;\n    } else if (change.controlType === ControlType.TableColumn) {\n        const schemaProperty = (jsonSchema?.definitions[DefinitionName.TableColumn] as Definition).properties[\n            change.propertyId\n        ];\n        if (!schemaProperty) {\n            return;\n        }\n        const idParts = change.controlId.split('-');\n        const lastIdPart = idParts[idParts.length - 1];\n        // As the last stable Id part is still too long in some cases, strip off the fixed parts.\n        // It must the be added again by the export!\n        const annotationPart = lastIdPart.split('template:::TableColumn:::');\n        const colId = annotationPart[annotationPart.length - 1]\n            .replace(/sSmartTableId.+?:::/, '')\n            .replace('::com.sap.vocabularies', VOCWITHCOLONS)\n            .replace('/', ':2f');\n        if (!config.columns) {\n            config.columns = {};\n        }\n        if (!config.columns[colId]) {\n            config.columns[colId] = {};\n        }\n        config.columns[colId][change.propertyId] = change.newValue;\n    }\n}\n", "import type { PageTypeV4 } from '@sap/ux-specification-types';\nimport { v2, PageType } from '@sap/ux-specification-types';\n\n/**\n * Method searches in manifest object by passed path and returns found value.\n * If value was not found in manifest object,\n *   then method created empty object in manifest object within passed path.\n * @param manifest - target manifest object\n * @param path - path to lookup in manifest\n * @returns Found or created value\n */\nexport const ensureManifestSectionByPathV2 = (manifest: object, path: string): object => {\n    let manifestSection = manifest;\n    path.split('/').forEach(function (element) {\n        if (!manifestSection[element]) {\n            manifestSection[element] = {};\n        }\n        manifestSection = manifestSection && manifestSection[element];\n    });\n    return manifestSection ? manifestSection : {};\n};\n\n/**\n * Method searches in manifest object by passed path and returns found value.\n * If value was not found in manifest object, then 'undefined' is returned.\n * @param manifest - target manifest file\n * @param path - path to lookup in manifest\n * @returns Found value\n */\nexport const getManifestSectionByPathV2 = (manifest: object, path: string): object | undefined => {\n    let manifestSection = manifest;\n    const elements = path.split('/');\n    for (const element of elements) {\n        if (!manifestSection[element]) {\n            return undefined;\n        }\n        manifestSection = manifestSection && manifestSection[element];\n    }\n    return manifestSection ? manifestSection : {};\n};\n\nexport const deleteManifestSectionByPathV2 = (manifest: object, path: string): void => {\n    let manifestSection = manifest;\n    for (let index = 0; index < path.split('/').length; index++) {\n        const element = path.split('/')[index];\n        if (index === path.split('/').length - 1) {\n            delete manifestSection[element];\n        } else {\n            manifestSection = manifestSection && manifestSection[element];\n        }\n    }\n};\n\nfunction getNewPageTemplate(pageType: PageType | PageTypeV4): object {\n    return {\n        component: {\n            name: 'sap.suite.ui.generic.template.' + pageType\n        }\n    };\n}\n\n/**\n * Method finds matching pages by 'entitySet' and 'navigationProperty' in passed pages object.\n * @param {SapUiAppPagesV2} pages Object with pages.\n * @param {string} [entitySet] Entity set.\n * @param {string} [navigationProperty] Navigation property.\n * @returns {SapUiAppPageV2 | undefined} Matching page object.\n */\nfunction findPageInManifest(\n    pages: v2.SapUiAppPagesV2,\n    entitySet?: string,\n    navigationProperty?: string\n): v2.SapUiAppPageV2 | undefined {\n    if (!pages) {\n        return;\n    }\n    for (const pageId in pages) {\n        const page = pages[pageId];\n        if (page.entitySet === entitySet && page.navigationProperty === navigationProperty) {\n            return page;\n        }\n    }\n}\n\nfunction transformPageFromAssociation(configPages: v2.Pages, association: string, manifestPage: object) {\n    //Handling partial deletion of a page\n    if (!configPages[association]) {\n        return;\n    }\n    if (manifestPage['pages'] && !Object.values(manifestPage['pages'])[0]) {\n        manifestPage['pages'][`${configPages[association].pageType}|${configPages[association].entitySet}`] =\n            getNewPageTemplate(configPages[association].pageType);\n    }\n    if (!manifestPage['pages']) {\n        manifestPage['pages'] = {\n            [`${configPages[association].pageType}|${configPages[association].entitySet}`]: getNewPageTemplate(\n                configPages[association].pageType\n            )\n        };\n    }\n    if (!Array.isArray(manifestPage['pages'])) {\n        let associatedManifestPage = findPageInManifest(\n            manifestPage['pages'],\n            configPages[association].entitySet,\n            configPages[association].navigationProperty\n        );\n\n        if (!associatedManifestPage) {\n            manifestPage['pages'][`${configPages[association].pageType}|${configPages[association].entitySet}`] =\n                associatedManifestPage = getNewPageTemplate(configPages[association].pageType);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transformPageToNewManifestV2(association, configPages, associatedManifestPage);\n    }\n}\n\nfunction deletePage(manifestPage: object, configPages: v2.Pages, configPage: v2.Page) {\n    if (manifestPage['pages']) {\n        Object.keys(manifestPage['pages']).forEach((key) => {\n            const currentPage = manifestPage['pages'][key];\n            if (currentPage.component.name === v2.FE_TEMPLATE_V2_OBJECT_PAGE) {\n                const configKey = `ObjectPage_${currentPage.entitySet}`;\n                if (!configPages[configKey]) {\n                    delete manifestPage['pages'][key];\n                }\n            }\n        });\n    }\n    if (\n        (configPage.pageType === PageType.ListReport || configPage.pageType === PageType.AnalyticalListPage) &&\n        Object.keys(configPage.navigation).length === 0\n    ) {\n        delete manifestPage['pages'];\n    }\n}\n\n/**\n * Transfers pages and routings from manifest to the config pages\n * @param pageId - page ID\n * @param configPages - config definitions of each page\n * @param manifestPage - top page definition in manifest\n */\nexport function transformPageToNewManifestV2(pageId: string, configPages: v2.Pages, manifestPage: object): void {\n    const configPage = configPages[pageId];\n    if (!configPage) {\n        return;\n    }\n    if (configPage.entitySet) {\n        manifestPage['entitySet'] = configPage.entitySet;\n    }\n    if (configPage.pageType === PageType.ListReport) {\n        manifestPage['component']['list'] = true;\n    }\n    if (configPage.navigationProperty) {\n        manifestPage['navigationProperty'] = configPage.navigationProperty;\n    }\n    if (configPage.defaultLayoutType) {\n        manifestPage['defaultLayoutType'] = configPage.defaultLayoutType;\n    } else if ('defaultLayoutType' in manifestPage) {\n        delete manifestPage['defaultLayoutType'];\n    }\n    if (configPage.navigation) {\n        for (const association in configPage.navigation) {\n            transformPageFromAssociation(configPages, association, manifestPage);\n        }\n        // Delete page\n        if (!Array.isArray(manifestPage['pages'])) {\n            deletePage(manifestPage, configPages, configPage);\n        }\n    }\n}\n", "export * from './Card';\nexport * from './Field';\nexport * from './FilterBar';\nexport * from './FormAction';\nexport * from './Fragment';\nexport * from './Table';\nexport * from './TableColumn';\nexport * from './ToolBar';\nexport * from './Action';\nexport * from './AnalyticalListPageChart';\nexport * from './AnalyticalListPageKPI';\nexport * from './ObjectPageHeader';\nexport * from './ObjectPageHeaderAction';\nexport * from './ObjectPageFooterAction';\nexport * from './ObjectPageLayout';\nexport * from './ObjectPageCustomSection';\nexport * from './ObjectPageSectionsV2';\nexport * from './ObjectPageChart';\nexport * from './ObjectPageTable';\nexport * from './ObjectPageToolBarAction';\n", "import { syncRule, childId, validity } from '../common/decoration';\nimport type {\n    TableColumnVerticalAlignment,\n    StatePreservationMode,\n    DraftDiscardConfirmationSettings,\n    Target,\n    Application,\n    FlexibleColumnLayout,\n    Manifest\n} from '@sap/ux-specification-types';\nimport { v2, ManifestSection, GENERICAPPSETTINGS, VOCWITHCOLONS } from '@sap/ux-specification-types';\n\nexport const getAppSettingPathV2 = (pageKeys: string[]): string => {\n    return `${ManifestSection.generic}/pages/${pageKeys[0]}/component/settings`;\n};\n\nexport const getTableSettingPathV2 = (pageKeys: string[]): string => {\n    return getAppSettingPathV2(pageKeys) + '/tableSettings';\n};\n\nexport const getChartSettingPathV2 = (pageKeys: string[]): string => {\n    return getAppSettingPathV2(pageKeys) + '/chartSettings';\n};\n\nexport const getDataLoadSettingPathV2 = (pageKeys: string[]): string => {\n    return getAppSettingPathV2(pageKeys) + '/dataLoadSettings';\n};\n\nexport const getCreationFieldsPathV2 = (pageKeys: string[], key: string): string => {\n    return `${getTableSettingPathV2(pageKeys)}/createWithParameterDialog/fields/${key}`;\n};\n\nexport const getOVPsettingPath = (): string => {\n    return ManifestSection.ovp;\n};\n\nexport const getCardSettingsPath = (cardKey: string[]): string => {\n    const pathParts: string[] = [ManifestSection.ovp + '/cards'];\n    cardKey.forEach((block) => {\n        if (block in v2.CardSettingsType) {\n            pathParts.push('settings');\n        } else {\n            pathParts.push(block);\n        }\n    });\n    pathParts.pop();\n    return pathParts.join('/');\n};\n\nexport const getGlobalSettingsPath = (cardKey: string[]): string => {\n    const pathParts: string[] = [ManifestSection.ovp];\n    cardKey.forEach((block) => {\n        pathParts.push(block);\n    });\n    pathParts.pop();\n    return pathParts.join('/');\n};\n\n// This corresponds to ALP KPI settings\nexport const getKPISettingsPath = (pageKeys: string[], kpiKey: string): string => {\n    return `${ManifestSection.generic}/pages/${pageKeys[0]}/component/settings/keyPerformanceIndicators/${kpiKey}`;\n};\n\n// This corresponds to List Report and Object page global settings\nexport const getAppRootSettingOBJPath = (pageKeys: string[]): string => {\n    const pathParts: string[] = [ManifestSection.generic];\n    pageKeys.forEach((pageKey) => {\n        pathParts.push('pages/' + pageKey);\n    });\n    return pathParts.join('/');\n};\n\n// This corresponds to global object page settings\nexport const getAppSettingOBJPathV2 = (pageKeys: string[]): string => {\n    const pathParts: string[] = [];\n    pathParts.push(getAppRootSettingOBJPath(pageKeys));\n    pathParts.push('component/settings');\n    return pathParts.join('/');\n};\n\nexport const getAppSettingOBJsectionPathV2 = (pageKeys: string[], _manifest: Manifest, sectionId: string): string => {\n    const pathParts: string[] = [];\n    pathParts.push(getAppRootSettingOBJPath(pageKeys));\n    const manifestSectionId = sectionId.replace(VOCWITHCOLONS, '::com.sap.vocabularies');\n    pathParts.push('component/settings/sections/' + manifestSectionId);\n    return pathParts.join('/');\n};\n\nexport const getTableSettingsOBJsectionPathV2 = (\n    pageKeys: string[],\n    _manifest: Manifest,\n    sectionId: string\n): string => {\n    const path = getAppSettingOBJsectionPathV2(pageKeys, {}, sectionId);\n    return path + '/tableSettings';\n};\n\nexport const getChartSettingsOBJsectionPathV2 = (\n    pageKeys: string[],\n    _manifest: Manifest,\n    sectionId: string\n): string => {\n    const path = getAppSettingOBJsectionPathV2(pageKeys, {}, sectionId);\n    return path + '/chartSettings';\n};\n\nexport const getViewExtensionsPath = (): string => {\n    return `sap.ui5/extends/extensions/${v2.SAPUI5_VIEW_EXTENSION}/${v2.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE}`;\n};\n\nexport const getObjectPageCustomSectionPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    ...pathParts: string[]\n): string => {\n    const separator = '|';\n    const sectionIdParts = sectionId.split(separator);\n    const pageNameParts = pageName[pageName.length - 1].split(separator);\n    let idLastPart = '';\n    if (sectionIdParts.length === 4) {\n        // Four parts ==> the last one is incremented to avoid getting the same path\n        // We need to merge 3 and 4\n        idLastPart = [sectionIdParts[2], sectionIdParts[3]].join(separator);\n    } else if (sectionIdParts.length === 3) {\n        idLastPart = sectionIdParts[2];\n    }\n    const customSectionId = [sectionIdParts[0], pageNameParts[pageNameParts.length - 1], idLastPart].join(separator);\n    // Sub-path parts are passed\n    pathParts.unshift(customSectionId);\n\n    return `${getViewExtensionsPath()}/${pathParts.join('/')}`;\n};\n\nexport class ApplicationV2 implements Application {\n    id?: string;\n    pages?: v2.Pages;\n    home?: string;\n    target?: Target;\n    @childId('settings')\n    settings?: AppSettings;\n}\n\nexport class AppSettings implements v2.AppSettings {\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.app'\n        }\n    })\n    title?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.app'\n        }\n    })\n    description?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    flexibleColumnLayout?: FlexibleColumnLayout;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.46.0'\n    })\n    forceGlobalRefresh?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.74.0'\n    })\n    tableColumnVerticalAlignment?: TableColumnVerticalAlignment;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5'\n        }\n    })\n    @validity({\n        since: '1.56.0'\n    })\n    flexEnabled?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.96.0'\n    })\n    draftDiscardConfirmationSettings?: DraftDiscardConfirmationSettings;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.96.0'\n    })\n    statePreservationMode?: StatePreservationMode;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { syncRule } from '../../../common/decoration/decorators';\nimport { getCardSettingsPath } from '../../application';\n\nexport class CommonCardSettings implements v2.CommonCardSettings {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    entitySet?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    subTitle?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    identificationAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    selectionAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    presentationAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    defaultSpan?: v2.DefaultSpanDef;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    requireAppAuthorization?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    tabs?: [v2.TabSetting];\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    addODataSelect?: boolean;\n}\n\nexport class CustomCard extends CommonCardSettings implements v2.CustomCard, v2.CustomCardSettings {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    settings?: v2.CustomCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    itemText?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    valueSelectionInfo?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    staticContent?: {\n        [k: string]: any;\n    }[];\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listFlavor?: 'standard' | 'bar' | 'carousel';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listType?: 'extended' | 'condensed';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    sortBy?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    sortOrder?: 'ascending' | 'descending';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    annotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    chartAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    dataPointAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    kpiAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    selectionPresentationAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    dynamicSubtitleAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    ignoreSapText?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    objectStreamCardsSettings?: {\n        showFirstActionInFooter?: boolean;\n        annotationPath?: string;\n    };\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    enableLocaleCurrencyFormatting?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    navigation?: 'dataPointNav' | 'chartNav' | 'headerNav' | 'noHeaderNav';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showFilterInHeader?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showSortingInHeader?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    imageSupported?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showLineItemDetail?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    showLabelText?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    customParams?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    chartProperties?: {\n        plotArea?: v2.PlotAreaDef;\n    };\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    colorPalette?:\n        | {\n              [k: string]: any;\n          }[]\n        | {\n              [k: string]: any;\n          };\n    [k: string]: any;\n}\n\nexport class ListCard extends CommonCardSettings implements v2.ListCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.list | v2.CardTemplateType.listv4;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    settings: v2.ListCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listCardSettings: v2.ListCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listFlavor?: 'standard' | 'bar' | 'carousel';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listType?: 'extended' | 'condensed';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    annotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    valueSelectionInfo?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    sortBy?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    sortOrder?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    dataPointAnnotationPath?: string;\n}\n\nexport class AnalyticalCard extends CommonCardSettings implements v2.AnalyticalCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.analytical | v2.CardTemplateType.analyticalv4;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    settings: v2.AnalyticalCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    analyticalCardSettings: v2.AnalyticalCardSettings | v2.AnalyticalCardSettingsv4;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    chartAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    dataPointAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    valueSelectionInfo?: string;\n}\n\nexport class StackCard extends CommonCardSettings implements v2.StackCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.stack;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    settings: v2.StackCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    stackCardSettings: v2.StackCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    itemText?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    objectStreamCardsNavigationProperty?: string;\n}\n\nexport class LinklistCard extends CommonCardSettings implements v2.LinklistCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.linklist | v2.CardTemplateType.linklistv4;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    settings: v2.LinkListCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    linkListCardSettings: v2.LinkListCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    subTitle?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    targetUri?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listFlavor?: 'standard' | 'bar' | 'carousel';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    sortBy?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    sortOrder?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    headerAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    identificationAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    defaultSpan?: v2.DefaultSpanDef;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    staticContent?: v2.StaticContent[];\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    requireAppAuthorization?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    annotationPath?: string;\n}\n\nexport class TableCard extends CommonCardSettings implements v2.TableCard {\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    template: v2.CardTemplateType.table | v2.CardTemplateType.tablev4;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    disableTableCardFlexibility?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    settings: v2.TableCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    tableCardSettings: v2.TableCardSettings;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    annotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listFlavor?: 'standard' | 'bar' | 'carousel';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    listType?: 'extended' | 'condensed';\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    dataPointAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    selectionPresentationAnnotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getCardSettingsPath(cardKeys)\n        }\n    })\n    valueSelectionInfo?: string;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, buildControlIdFromParent } from '../../../common/decoration';\nimport { addPatternForBindingChangeOfEnumOP, convertSectionId } from '../../../common';\n\n/**\n * Create stable ID for Object Page Form Field\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @param {string} facetID title from the app schema (comprising for instance the facet ID)\n * @returns {string} stable ID of Object Page Form Action button\n */\nconst getSmartFieldControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const fieldCrumb = breadcrumbs.slice(-1)[0];\n    const breadcrumbsTrail = [convertedId, fieldCrumb, 'GroupElement'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport class Field implements v2.Field {\n    @syncRule({\n        flex: {\n            controlId: getSmartFieldControlId,\n            controlType: (): ControlType => ControlType.GroupElement,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n", "import { syncRule, validity } from '../../../common/decoration/decorators';\nimport { buildControlIdFromParent, exportToFlexChange } from '../../../common/decoration';\nimport { getAppSettingPathV2 } from '../../application';\nimport { convertEnumToCSV } from '../../../common';\nimport { ControlType, DATESETTINGSPATH, v2 } from '@sap/ux-specification-types';\n\nexport function importDateSettings(manifestSection: object): DateRange {\n    if (!manifestSection || !manifestSection['dateSettings']) {\n        return undefined;\n    }\n    const configPart: DateRange = JSON.parse(JSON.stringify(manifestSection['dateSettings']));\n    // converted CSV format to array of strings\n    if (typeof manifestSection['dateSettings']['selectedValues'] === 'string') {\n        configPart.selectedValues = manifestSection['dateSettings']['selectedValues'].split(',') as v2.DateRangeType[];\n    }\n    delete configPart['fields'];\n    return configPart;\n}\n\nfunction importDateSettingsField(manifestSection: string | Array<object>, _sectionId: string, propertyKey: string) {\n    const configPart = manifestSection?.[propertyKey]\n        ? JSON.parse(JSON.stringify(manifestSection?.[propertyKey]))\n        : undefined;\n    let selectionField;\n    if (propertyKey === 'selectedValues' && typeof configPart === 'string') {\n        selectionField = configPart.split(',') as v2.DateRangeType[];\n    }\n    if (propertyKey === 'filter' && typeof configPart === 'object') {\n        selectionField = [];\n        configPart.forEach((section, index) => {\n            selectionField[index] = section;\n            if (section['equals'] && typeof section['equals'] === 'string') {\n                selectionField[index].equals = section['equals'].split(',') as v2.DateRangeType[];\n            }\n        });\n    }\n    return selectionField;\n}\n\nexport function exportDateSettingsField(manifestSection: unknown, configPart: DateRange, key: string): void {\n    manifestSection[key] = JSON.parse(JSON.stringify(configPart[key]));\n    const field = configPart[key];\n    if (key === 'selectedValues') {\n        manifestSection[key] = field.join();\n    }\n    if (key === 'filter') {\n        for (const filterKey in field) {\n            const filterValue = field[filterKey];\n            manifestSection[key][filterKey] = filterValue;\n            if (filterValue.equals && Array.isArray(filterValue.equals)) {\n                manifestSection[key][filterKey].equals = filterValue.equals.join();\n            }\n        }\n    }\n}\n\nexport class DateRange implements v2.DateRange {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => {\n                return getAppSettingPathV2(pageKeys) + DATESETTINGSPATH;\n            }\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    useDateRange?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + DATESETTINGSPATH,\n            import: importDateSettings,\n            export: convertEnumToCSV\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    selectedValues?: v2.DateRangeType[];\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + DATESETTINGSPATH\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    exclude?: boolean;\n}\n\nconst flexRuleForSmartFilterBar = {\n    controlId: buildControlIdFromParent,\n    controlType: (): ControlType => ControlType.SmartFilterBar,\n    createFlexChange: exportToFlexChange\n};\n\nconst manifestRuleForSelectionField = {\n    path: (pageKeys, _manifest, breadcrumbs): string =>\n        `${getAppSettingPathV2(pageKeys)}${DATESETTINGSPATH}/fields/${breadcrumbs}`\n};\n\nconst manifestRuleForSelectionFieldWithArrays = {\n    ...manifestRuleForSelectionField,\n    import: importDateSettingsField,\n    export: exportDateSettingsField\n};\n\nexport class DefaultDateRange implements v2.DefaultDateRange {\n    @syncRule({\n        manifest: manifestRuleForSelectionField\n    })\n    @validity({\n        since: '1.90.0'\n    })\n    operation: v2.DefaultDateRangeValueType;\n}\n\nexport class SelectionFieldDateSettings implements v2.SelectionFieldDateSettings {\n    @syncRule({\n        manifest: manifestRuleForSelectionFieldWithArrays\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    selectedValues?: v2.DateRangeType[];\n\n    @syncRule({\n        manifest: manifestRuleForSelectionField\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    exclude?: boolean;\n\n    @syncRule({\n        manifest: manifestRuleForSelectionField\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    customDateRangeImplementation?: string;\n\n    @syncRule({\n        manifest: manifestRuleForSelectionFieldWithArrays\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    filter?: v2.FilterType[];\n\n    @syncRule({\n        manifest: manifestRuleForSelectionField\n    })\n    @validity({\n        since: '1.90.0'\n    })\n    defaultValue?: DefaultDateRange;\n}\n\nexport class SelectionFields implements v2.SelectionFields {\n    [key: string]: v2.SelectionField | v2.SelectionFieldDateSettings;\n}\n\nexport class CommonFilterBar implements v2.CommonFilterBar {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    smartVariantManagement?: boolean;\n\n    @syncRule({\n        flex: flexRuleForSmartFilterBar\n    })\n    @validity({\n        since: '1.40.0'\n    })\n    liveMode?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    variantManagementHidden: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.52.0' // Available in 1.52 so exact validity information is not required\n    })\n    subTitleIfVariantMgmtHidden?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + '/filterSettings',\n            import: importDateSettings\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    dateSettings?: DateRange;\n\n    selectionFields?: SelectionFields;\n\n    @syncRule({\n        flex: flexRuleForSmartFilterBar\n    })\n    @validity({\n        since: '1.28.0'\n    })\n    showClearOnFB?: boolean;\n\n    @syncRule({\n        flex: flexRuleForSmartFilterBar\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    showFilterConfiguration?: boolean;\n\n    @syncRule({\n        flex: flexRuleForSmartFilterBar\n    })\n    @validity({\n        since: '1.28.0'\n    })\n    showRestoreOnFB?: boolean;\n}\n\nexport class AnalyticalListPageFilterBar extends CommonFilterBar implements v2.AnalyticalListPageFilterBar {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    showGoButtonOnFilterBar?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.60.0'\n    })\n    filterDefaultsFromSelectionVariant?: boolean;\n}\n\nexport class ListReportFilterBar extends CommonFilterBar implements v2.ListReportFilterBar {\n    // This is replaced by an enum containing list of SelectionVariant annotations during generate\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    annotationPath?: string;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport {\n    syncRule,\n    exportToFlexChange,\n    buildControlIdFromParent,\n    validity,\n    convertSectionId\n} from '../../../common/decoration';\nimport { addPatternForBindingChangeOfEnumOP } from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Object Page Form Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @param {string} facetID title from the app schema (comprising for instance the facet ID)\n * @returns {string} stable ID of Object Page Form Action button\n */\nconst getFormActionButtonId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType: ControlTypeFunction,\n    facetID: string\n): string => {\n    if (controlType() === ControlType.Button) {\n        const entity = breadcrumbs[breadcrumbs.length - 1];\n        const section = convertSectionId(breadcrumbs[1], facetID);\n        return `${baseId}action::${entity}::${section}::FormAction`;\n    }\n    return buildControlIdFromParent(baseId, idBreadcrumbs);\n};\n\nconst flexRuleForFormAction = {\n    controlId: getFormActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nexport class FormAction implements v2.FormAction {\n    @syncRule({\n        flex: flexRuleForFormAction,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    type?: ButtonType;\n}\n\nexport class FieldForAction implements v2.FormAction {\n    @syncRule({\n        flex: flexRuleForFormAction,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFormAction\n    })\n    @validity({\n        since: '1.73.0'\n    })\n    type?: ButtonType;\n}\n", "import { v2, FRAGMENTNAMEPART, ViewTemplateType, LogSeverity } from '@sap/ux-specification-types';\nimport type { ExportResults, FileData, ExtensionLogger } from '@sap/ux-specification-types';\nimport { xml2json, json2xml } from 'xml-js';\nimport {\n    getSingleColumnContent,\n    getColumnFragmentContent,\n    getResponsiveTableCellsFragment\n} from '../view-controller-generator';\nimport i18next from 'i18next';\nimport { log } from '../../../../extensionLogger';\nimport { deleteManifestSectionByPathV2, ensureManifestSectionByPathV2 } from '../manifest';\nimport { sep } from 'path';\n\nexport const FRAGMENT_DEFINITION = 'core:FragmentDefinition';\nexport const SAP_UI_TABLE = 'sap.ui.table';\n\nconst VIEW_TEMPLATE_TAGTYPE_MAP: Map<ViewTemplateType, { namespace: string; name: string }> = new Map([\n    [ViewTemplateType.ResponsiveTableColumnsExtension, { namespace: 'sap.m', name: 'Column' }],\n    [ViewTemplateType.TreeTableColumnsExtension, { namespace: SAP_UI_TABLE, name: 'Column' }],\n    [ViewTemplateType.GridTableColumnsExtension, { namespace: SAP_UI_TABLE, name: 'Column' }],\n    [ViewTemplateType.AnalyticalTableColumnsExtension, { namespace: SAP_UI_TABLE, name: 'AnalyticalColumn' }]\n]);\n\nconst FE_TEMPLATE_VIEW_EXTENSION_MAP: Map<string, string> = new Map([\n    [v2.FE_TEMPLATE_V2_LIST_REPORT, v2.SAPUI5_VIEW_EXTENSION_LIST_REPORT],\n    [v2.FE_TEMPLATE_V2_ALP, v2.SAPUI5_VIEW_EXTENSION_ANALYTICAL_LIST_PAGE],\n    [v2.FE_TEMPLATE_V2_OBJECT_PAGE, v2.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]\n]);\n\nconst dummyEntry = {\n    type: 'element',\n    name: 'Text',\n    attributes: { text: 'Placeholder' }\n};\nconst dummyEntryAsString = JSON.stringify(dummyEntry);\n\n/**\n * Lists namespaces available in fragment to consider\n * @param fragment - fragment content\n * @param isCoreFragmentDefinition - If set to true, only the namespaces in core definition will be considered\n * @returns {Map<string, string[]> | undefined} - If available, namespaces will be returned as Map (key: alias, values: name[])\n */\nfunction getFragmentNamespaces(fragment, isCoreFragmentDefinition: boolean): Map<string, string[]> | undefined {\n    const fragmentAttributes = isCoreFragmentDefinition\n        ? fragment[FRAGMENT_DEFINITION]['_attributes']\n        : fragment['_attributes'];\n    if (fragmentAttributes) {\n        const allFragmentNamespaces = new Map<string, string[]>();\n        Object.keys(fragmentAttributes)\n            .filter((attribute) => attribute.startsWith('xmlns'))\n            .forEach((xmlns) => {\n                const existingNamespaces = allFragmentNamespaces.get(fragmentAttributes[xmlns]);\n                allFragmentNamespaces.set(\n                    fragmentAttributes[xmlns],\n                    existingNamespaces\n                        ? [...existingNamespaces, xmlns.split(':')[1] || xmlns]\n                        : [xmlns.split(':')[1] || xmlns]\n                );\n            });\n        return allFragmentNamespaces;\n    }\n}\n\n/**\n * Considers namespace of fragment and returns combined tag name\n * @param tag - tag name and namespace\n * @param {string[]} fragmentNamespace namespaces of fragment\n * @returns {string} tag name consisting of namespace and name\n */\nfunction getTagName(tag: { namespace: string; name: string }, fragmentNamespaces: string[]): string {\n    if (!fragmentNamespaces) {\n        return `${tag.namespace}:${tag.name}`;\n    } else if (fragmentNamespaces.includes('xmlns')) {\n        return tag.name;\n    } else {\n        return `${fragmentNamespaces}:${tag.name}`;\n    }\n}\n\n/**\n * Maps the column template type to the fragment namespace and returns the tag name with namespace of root column definition.\n * @param definition - fragment or content definition\n * @param viewTemplateType - name of the view template that shall be applied\n * @param fragment - fragment definition\n * @returns {unknown | undefined} Root column tag name.\n */\nfunction getTagNameFromFragmentJSON(\n    definition: unknown,\n    viewTemplateType?: ViewTemplateType,\n    fragment: unknown = definition\n): string | undefined {\n    const namespaces = getFragmentNamespaces(fragment, viewTemplateType || fragment !== definition ? true : false);\n    if (viewTemplateType) {\n        const tag = VIEW_TEMPLATE_TAGTYPE_MAP.get(viewTemplateType);\n        return getTagName(tag, namespaces.get(tag.namespace));\n    } else {\n        const keys = VIEW_TEMPLATE_TAGTYPE_MAP.keys();\n        for (const key of keys) {\n            const tag = VIEW_TEMPLATE_TAGTYPE_MAP.get(key);\n            const tagName = namespaces ? getTagName(tag, namespaces.get(tag.namespace)) : tag.name;\n            if (definition[tagName]) {\n                return tagName;\n            }\n        }\n    }\n    return undefined;\n}\n\n/**\n * Method which receives fragment definition node and reads root column definition.\n * @param {unknown} definition - Application or Page Config object.\n * @param {unknown} fragment - fragment definition\n * @returns {unknown | undefined} Root column read from definition.\n */\nexport function getRootCustomColumnFromFragmentJSON(\n    definition: unknown,\n    fragment = definition\n): string | unknown | undefined {\n    const name = getTagNameFromFragmentJSON(definition, undefined, fragment);\n    return definition[name];\n}\n\n/**\n * Internal function adding content to config column\n * @param configColumns - list of all columns in the config\n * @param columnIndex - index of column\n * @returns - filled personalization data\n */\nfunction addP13nData(configColumns: v2.TableCustomColumns, columnIndex: number): string {\n    const columnProperties = [\n        'id',\n        'text',\n        'className',\n        'fragmentName',\n        'tabKey',\n        'extensionType',\n        'cellsFragmentName'\n    ];\n    let p13nData = `\\\\{`;\n    for (const key in configColumns[columnIndex]) {\n        const value = configColumns[columnIndex][key];\n        if (!columnProperties.includes(key) && value !== undefined && value.length !== 0) {\n            if (p13nData !== '\\\\{') {\n                p13nData += `, `;\n            }\n            p13nData += `\"${key}\": \"${value.toString()}\"`;\n        }\n    }\n    p13nData += '}';\n    return p13nData;\n}\n\n/**\n * Internal function handling a single fragment column if detected in the fragment\n * @param columnsInFragment - list of all columns in fragment\n * @param configColumns - list of all columns in the config\n */\nfunction handleFragmentColumn(columnsInFragment: object, configColumns: v2.TableCustomColumns): boolean {\n    let foundInConfig = false;\n    const customData = columnsInFragment['customData'] || columnsInFragment['table:customData'];\n    if (!customData) {\n        return false;\n    }\n\n    let p13nData = customData['core:CustomData']._attributes.value;\n    const columnParts = JSON.parse(p13nData.substr(1, p13nData.length));\n    const columnIndex = configColumns.findIndex((column) => {\n        return column.columnKey === columnParts.columnKey;\n    });\n    if (columnIndex < 0) {\n        return false;\n    }\n\n    //Found ==> update scenario\n    foundInConfig = true;\n    p13nData = addP13nData(configColumns, columnIndex);\n    customData['core:CustomData']._attributes.value = p13nData;\n    if (!columnsInFragment['Text'] && !columnsInFragment['Label'] && configColumns[columnIndex]?.text) {\n        columnsInFragment['Text'] = {\n            _attributes: {}\n        };\n    }\n    if (columnsInFragment['Text'] && columnsInFragment['Text']['_attributes']) {\n        columnsInFragment['Text']._attributes['text'] = configColumns[columnIndex]?.text;\n    } else if (columnsInFragment['Label'] && columnsInFragment['Label']['_attributes']) {\n        columnsInFragment['Label']._attributes['text'] = configColumns[columnIndex]?.text;\n    }\n    if (!columnsInFragment['_attributes']) {\n        columnsInFragment['_attributes'] = {};\n    }\n    columnsInFragment['_attributes']['id'] = configColumns[columnIndex].id;\n    configColumns.splice(columnIndex, 1);\n    return foundInConfig;\n}\n\n/**\n * Deletes obsolete custom columns from the relevant fragment(s)\n * @param manifestSection - Section in manifest.json comprising the extensions\n * @param fragments - list of all fragments\n * @param pattern - Search string to identify the extension in manifest\n * @param appId - application ID\n */\nfunction deleteColumnsFromFragment(\n    manifestSection: object,\n    fragments: FileData[],\n    pattern: string,\n    appId: string\n): void {\n    const fragmentId = manifestSection[pattern].fragmentName.substr(appId.length + 1);\n    const fragmentType = manifestSection['type'] ? manifestSection['type'].toLowerCase() : 'xml';\n    const fragmentParts = fragmentId.split('.');\n    const fragmentName = fragmentParts[fragmentParts.length - 1] + FRAGMENTNAMEPART + fragmentType;\n    for (const fragment of fragments) {\n        const fragmentPathArray = fragment['dataSourceUri'].split(sep);\n        if (fragmentPathArray[fragmentPathArray.length - 1] === fragmentName) {\n            const fragmentJson = JSON.parse(xml2json(fragment.fileContent, { compact: true }));\n            const tagName = getTagNameFromFragmentJSON(fragmentJson[FRAGMENT_DEFINITION]);\n            if (tagName) {\n                delete fragmentJson[FRAGMENT_DEFINITION][tagName];\n                fragment.fileContent = json2xml(JSON.stringify(fragmentJson), { compact: true, spaces: 4 });\n            }\n            break;\n        }\n    }\n}\n\n/**\n * Deletes a given number of (dummy) cells from a fragment\n * @param fragmentCells - list of all cells in the parsed fragment\n * @param noOfEntriesToBeDeleted - number of entries to be deleted\n */\nfunction deleteNumberOfCells(fragmentCells: any, noOfEntriesToBeDeleted: number): void {\n    //only dummy entry will be deleted automatically!\n    for (let index = 0; index < Object.keys(fragmentCells).length; index++) {\n        if (JSON.stringify(fragmentCells[index]) === dummyEntryAsString) {\n            fragmentCells.splice(index, 1);\n            noOfEntriesToBeDeleted -= 1;\n            if (noOfEntriesToBeDeleted === 0) {\n                break;\n            }\n        }\n    }\n}\n\n/**\n * Deletes cells from the relevant fragment\n * @param cellManifestSection - section in mnifest referring the cells'fragment\n * @param fragments - list of all fragments\n * @param appId - application ID\n */\nfunction deleteCellsFromFragment(cellManifestSection: object, fragments: FileData[], appId: string): void {\n    const fragmentType = cellManifestSection['type'] ? cellManifestSection['type'].toLowerCase() : 'xml';\n    const fragmentParts = cellManifestSection['fragmentName'].substr(appId.length + 1).split('.');\n    const fragmentName = fragmentParts[fragmentParts.length - 1] + FRAGMENTNAMEPART + fragmentType;\n    for (const fragment of fragments) {\n        if (fragment['dataSourceUri'].endsWith(fragmentName)) {\n            const fragmentJson = JSON.parse(xml2json(fragment.fileContent));\n            const fragmentCells =\n                fragmentJson.elements[0].elements &&\n                fragmentJson.elements[0].elements.filter((element) => {\n                    return element.type === 'element';\n                });\n            if (fragmentCells) {\n                deleteNumberOfCells(fragmentCells, fragmentCells.length);\n            }\n            break;\n        }\n    }\n}\n\n/**\n * Identifies the right extensions based on a pattern, then deletes all corresponding columns and cells\n * @param manifestSection - Section in manifest.json comprising the extensions\n * @param pattern - Search string to identify the extension in manifest\n * @param appId - application ID\n * @param fragments - list of all fragments\n */\nexport function deleteColumnFromFragment(\n    manifestSection: object,\n    pattern: string,\n    appId: string,\n    fragments: FileData[]\n): void {\n    if (fragments) {\n        //delete columns\n        deleteColumnsFromFragment(manifestSection, fragments, pattern, appId);\n        //delete cells\n        const cellsPath = pattern.replace(\n            ViewTemplateType.ResponsiveTableColumnsExtension,\n            ViewTemplateType.ResponsiveTableCellsExtension\n        );\n        const cellManifestSection = manifestSection[cellsPath];\n        if (cellManifestSection) {\n            deleteCellsFromFragment(cellManifestSection, fragments, appId);\n        }\n    }\n}\n\n/**\n * Adds new (dummy) columns to a given fragment, as many as we have entries in the config\n * @param fragmentCells - list of all cells in fragment\n * @param fragmentJson - complete fragment, parsed as JSON\n * @param config - actual config.json\n */\nfunction addNewColumnsInFragment(fragmentCells: any, fragmentJson: any, config: v2.TableCustomColumns): void {\n    const startIndex = fragmentCells ? Object.keys(fragmentCells).length : 0;\n    if (!fragmentJson.elements[0].elements) {\n        fragmentJson.elements[0].elements = [];\n    }\n    for (let index = startIndex; index < Object.keys(config).length; index++) {\n        fragmentJson.elements[0].elements.push(dummyEntry);\n    }\n}\n\n/**\n * Updates non-empty cells in a given fragment, from the config information\n * @param fragment - identified cells' fragment\n * @param config - config.json that lists the new cells' information\n */\nfunction updateNonEmptyCellsFragment(fragment: FileData, config: v2.TableCustomColumns): void {\n    const fragmentJson = JSON.parse(xml2json(fragment.fileContent));\n    const fragmentCells =\n        fragmentJson.elements[0].elements &&\n        fragmentJson.elements[0].elements.filter((element) => {\n            return element.type === 'element';\n        });\n    if (!fragmentCells || Object.keys(fragmentCells).length !== Object.keys(config).length) {\n        if (!fragmentCells || Object.keys(fragmentCells).length < Object.keys(config).length) {\n            addNewColumnsInFragment(fragmentCells, fragmentJson, config);\n        } else if (Object.keys(fragmentCells).length > Object.keys(config).length) {\n            const noOfEntriesToBeDeleted = Object.keys(fragmentCells).length - Object.keys(config).length;\n            const fragmentElements = fragmentJson.elements[0].elements;\n            deleteNumberOfCells(fragmentElements, noOfEntriesToBeDeleted);\n        }\n        fragment.fileContent = json2xml(JSON.stringify(fragmentJson), { spaces: 4 });\n    }\n}\n\n/**\n * Updates the content of a cell fragment file\n * @param fragments - list of existing fragments, to be enhanced\n * @param cellFragmentFileName - file name of the given cell fragment, as calculated from the config entry\n * @param config - current config JSON\n * @returns a boolean value to indicate if the cell fragment could be found n the given list of fragments\n */\nfunction updateCellsFragment(\n    fragments: FileData[],\n    cellFragmentFileName: string,\n    config: v2.TableCustomColumns\n): boolean {\n    let cellsFragmentFound = false;\n    for (const fragment of fragments) {\n        const fragmentPathArray = fragment['dataSourceUri'].split(sep);\n        if (fragmentPathArray[fragmentPathArray.length - 1] === cellFragmentFileName) {\n            cellsFragmentFound = true;\n            if (!fragment.fileContent || Object.keys(fragment.fileContent).length === 0) {\n                // Empty fragment - use template\n                fragment.fileContent = getResponsiveTableCellsFragment(config);\n            } else {\n                updateNonEmptyCellsFragment(fragment, config);\n            }\n            break;\n        }\n    }\n    return cellsFragmentFound;\n}\n\n/**\n * Adapt manifest from the given custom columns' definition in manifest\n * @param manifestPath - path to the current section of the manifest that describes the extension\n * @param {ExportResults} exportResults - export result comprising fragments and manifest\n * @param config - current config part, describing the new image of the extension\n * @param appId - application ID\n * @param {ExtensionLogger} logger - logger instance for exceptions\n * @returns everything that is needed for further processing the fragment\n */\nfunction exportCustomColumnsToManifest(\n    manifestPath: string,\n    exportResults: ExportResults,\n    config: v2.TableCustomColumns,\n    appId: string,\n    logger?: ExtensionLogger\n): { manifestSection: object; lsFilePath: string; cellsFragmentName: string; fragmentType: string } {\n    let lsFilePath: string;\n    let cellsFragmentName: string;\n    const manifest = exportResults.manifest;\n    const manifestSection = ensureManifestSectionByPathV2(manifest, manifestPath);\n    const fragmentType = manifestSection['type'] ? manifestSection['type'].toLowerCase() : 'xml';\n    manifestSection['type'] = fragmentType.toUpperCase();\n\n    for (const configElement of config) {\n        //last one wins -as there can only be one reference in the manifest\n        if (!configElement.fragmentName) {\n            log(logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOFRAGMENT', { columnKey: configElement.columnKey })\n            });\n            continue;\n        }\n        manifestSection['fragmentName'] = configElement.fragmentName;\n        manifestSection['className'] = configElement.className;\n        lsFilePath =\n            configElement.fragmentName?.replace(appId, '<root>/webapp').replace(/[.]/g, sep) +\n            FRAGMENTNAMEPART +\n            fragmentType;\n    }\n    if (manifestPath.indexOf(ViewTemplateType.ResponsiveTableColumnsExtension) > -1) {\n        const cellsPath = manifestPath.replace(\n            ViewTemplateType.ResponsiveTableColumnsExtension,\n            ViewTemplateType.ResponsiveTableCellsExtension\n        );\n        const cellManifestSection = ensureManifestSectionByPathV2(manifest, cellsPath);\n        const cellsFragmentColumn = config.reduce((previousColumn, column) => {\n            return column.cellsFragmentName ? column : previousColumn;\n        });\n        if (cellsFragmentColumn && cellsFragmentColumn.cellsFragmentName) {\n            cellManifestSection['fragmentName'] = cellsFragmentName = cellsFragmentColumn.cellsFragmentName;\n            cellManifestSection['className'] = config[0].className;\n            cellManifestSection['type'] = fragmentType.toUpperCase();\n        } else {\n            deleteManifestSectionByPathV2(manifest, cellsPath);\n        }\n    }\n    return { manifestSection, lsFilePath, cellsFragmentName, fragmentType };\n}\n\n/**\n * Method inserts new custom column into array of existing columns in same place as it appears in column configs.\n * @param {TableCustomColumn} column - Custom column config object.\n * @param {ViewTemplateType} viewTemplateType - template type\n * @param {Object} columnsInFragmentDefinition - Existing columns definition\n * @param {unknown} fragment - fragment definition\n * @param {number} colPos - column position from config\n * @returns {object} Columns object.\n */\nfunction insertNewColumnInFragment(\n    column: v2.TableCustomColumn,\n    viewTemplateType: ViewTemplateType,\n    columnsInFragmentDefinition: {},\n    fragment: unknown,\n    colPos: number\n): object {\n    const newColumnFragment = getSingleColumnContent(column, viewTemplateType);\n    if (newColumnFragment) {\n        const newColumnDefinition = JSON.parse(xml2json(newColumnFragment, { compact: true }));\n        const newColumn = getRootCustomColumnFromFragmentJSON(newColumnDefinition, fragment);\n        if (Array.isArray(columnsInFragmentDefinition)) {\n            // avoid having same columns\n            const columnExists = columnsInFragmentDefinition.some(\n                (col) => JSON.stringify(col) === JSON.stringify(newColumn)\n            );\n            if (!columnExists) {\n                columnsInFragmentDefinition.push(newColumn);\n            }\n        } else {\n            if (columnsInFragmentDefinition) {\n                // insert new column in array at specific position\n                const newColumnsInFragmentDefinition = [columnsInFragmentDefinition];\n                newColumnsInFragmentDefinition.splice(colPos, 0, newColumn);\n                columnsInFragmentDefinition = newColumnsInFragmentDefinition;\n            } else {\n                columnsInFragmentDefinition = [newColumn];\n            }\n        }\n    }\n    return columnsInFragmentDefinition;\n}\n\nfunction processCustomColumnInArray(columnsInFragmentDefinition: any[], configColumns: v2.TableCustomColumns) {\n    for (let j = 0; j < columnsInFragmentDefinition.length; j++) {\n        const columnFoundInConfig = handleFragmentColumn(columnsInFragmentDefinition[j], configColumns);\n        if (!columnFoundInConfig) {\n            columnsInFragmentDefinition.splice(j, 1);\n        }\n    }\n}\n\nfunction maintainExistingColumnInFragment(\n    columnsInFragmentDefinition: {},\n    configColumns: v2.TableCustomColumns,\n    fragmentJson: any\n) {\n    if (columnsInFragmentDefinition) {\n        //find the right column in the identified fragment file\n        if (Array.isArray(columnsInFragmentDefinition)) {\n            processCustomColumnInArray(columnsInFragmentDefinition, configColumns);\n        } else {\n            const columnFoundInConfig = handleFragmentColumn(columnsInFragmentDefinition, configColumns);\n            if (!columnFoundInConfig) {\n                const coreTagName = getTagNameFromFragmentJSON(fragmentJson[FRAGMENT_DEFINITION]);\n                if (coreTagName) {\n                    delete fragmentJson[FRAGMENT_DEFINITION][coreTagName];\n                    columnsInFragmentDefinition = undefined;\n                }\n            }\n        }\n    }\n    return columnsInFragmentDefinition;\n}\n\n/**\n * Method inserts new custom columns into existing columns.\n * @param {v2.TableCustomColumns} configColumns - Custom columns config object.\n * @param {string} fragmentId - fragment file name\n * @param {Object} columnsInFragmentDefinition - Existing columns definition\n * @param {ViewTemplateType} viewTemplateType - template type\n * @param {unknown} fragment - fragment definition\n * @returns {object} Columns object.\n */\nfunction insertNewColumnsInFragment(\n    configColumns: v2.TableCustomColumns,\n    fragmentId: string,\n    columnsInFragmentDefinition: {},\n    viewTemplateType: ViewTemplateType,\n    fragment: unknown\n) {\n    for (const column of configColumns) {\n        if (column.fragmentName.endsWith(fragmentId)) {\n            const colPos = configColumns.indexOf(column);\n            columnsInFragmentDefinition = insertNewColumnInFragment(\n                column,\n                viewTemplateType,\n                columnsInFragmentDefinition,\n                fragment,\n                colPos\n            );\n        }\n    }\n    return columnsInFragmentDefinition;\n}\n\n/**\n * Actualizes the column information in a fragment\n * @param fragments - list of all fragments\n * @param fragmentName - name of the relevant fragment, as maintained in manifest\n * @param fragmentId - ID = substring of the fragment name without the app ID\n * @param configColumns - list of all custom columns in the config\n * @param viewTemplateType - enum value that determines the view template\n * @returns a boolean value indicating if the fragment was found\n */\nfunction updateColumnsInFragment(\n    fragments: FileData[],\n    fragmentName: string,\n    fragmentId: string,\n    configColumns: v2.TableCustomColumns,\n    viewTemplateType: ViewTemplateType\n): boolean {\n    let fragmentFound = false;\n\n    if (!fragments) {\n        return fragmentFound;\n    }\n\n    //find and update the columns' fragment file\n    for (const fragment of fragments) {\n        if (fragment['dataSourceUri'].endsWith(fragmentName)) {\n            let columnsInFragmentDefinition = {};\n            fragmentFound = true;\n            if (!fragment.fileContent || fragment.fileContent.length === 0) {\n                // Empty fragment - use template\n                fragment.fileContent = getColumnFragmentContent(configColumns, viewTemplateType);\n            } else {\n                const fragmentJson = JSON.parse(xml2json(fragment.fileContent, { compact: true }));\n                const originalFragmentJson = JSON.stringify(fragmentJson);\n                //find the right column in the fragment file\n                columnsInFragmentDefinition = getRootCustomColumnFromFragmentJSON(fragmentJson[FRAGMENT_DEFINITION]);\n                columnsInFragmentDefinition = maintainExistingColumnInFragment(\n                    columnsInFragmentDefinition,\n                    configColumns,\n                    fragmentJson\n                );\n                //Insert scenario for the remaining entries\n                columnsInFragmentDefinition = insertNewColumnsInFragment(\n                    configColumns,\n                    fragmentId,\n                    columnsInFragmentDefinition,\n                    viewTemplateType,\n                    fragmentJson\n                );\n                const tagName = getTagNameFromFragmentJSON(fragmentJson, viewTemplateType);\n                fragmentJson[FRAGMENT_DEFINITION][tagName] = columnsInFragmentDefinition;\n                const fragmentContent = JSON.stringify(fragmentJson);\n                if (fragmentContent !== originalFragmentJson) {\n                    fragment.fileContent = json2xml(fragmentContent, { compact: true, spaces: 4 });\n                }\n            }\n            break;\n        }\n    }\n    return fragmentFound;\n}\n\n/**\n * The function transfers ALL properties of one or more custom columns to a given fragment, or creates a new one if necesary.\n * @param {ExportResults} exportResults - export result comprising fragments and manifest\n * @param manifestPath - path to the current section of the manifest that describes the extension\n * @param config - current config part, describing the new image of the extension\n * @param appId - application ID\n * @param viewTemplateType - name of the view template that shall be applied\n * @param {ExtensionLogger} logger - logger instance for exceptions\n */\nexport function exportCustomColumnsToFragment(\n    exportResults: ExportResults,\n    manifestPath: string,\n    config: v2.TableCustomColumns,\n    appId: string,\n    viewTemplateType: ViewTemplateType,\n    logger?: ExtensionLogger\n): void {\n    const fragments: FileData[] = exportResults.fragments;\n\n    //Find and adapt manifest\n    const { manifestSection, lsFilePath, cellsFragmentName, fragmentType } = exportCustomColumnsToManifest(\n        manifestPath,\n        exportResults,\n        config,\n        appId,\n        logger\n    );\n\n    //Find and adapt fragment\n    const configColumns = JSON.parse(JSON.stringify(config));\n    let fragmentName = manifestSection['fragmentName'];\n    const fragmentId = fragmentName.substr(appId.length + 1);\n    const fragmentParts = fragmentId.split('.');\n    const templateType = fragmentParts[fragmentParts.length - 1];\n    fragmentName = templateType + FRAGMENTNAMEPART + fragmentType;\n    const cellFragmentParts = cellsFragmentName?.split('.');\n    const cellTemplateType = cellFragmentParts ? cellFragmentParts[cellFragmentParts.length - 1] : null;\n    const cellFragmentFileName = cellTemplateType ? cellTemplateType + FRAGMENTNAMEPART + fragmentType : null;\n\n    // update columns in fragment\n    const fragmentFound = updateColumnsInFragment(fragments, fragmentName, fragmentId, configColumns, viewTemplateType);\n\n    let cellsFragmentFound = false;\n    if (cellsFragmentName) {\n        //find an update the cells' fragment file\n        cellsFragmentFound = updateCellsFragment(fragments, cellFragmentFileName, config);\n    } else {\n        cellsFragmentFound = true; //not relevant\n    }\n    if (!fragmentFound) {\n        const fragment: FileData = {\n            fileContent: getColumnFragmentContent(configColumns, viewTemplateType),\n            dataSourceUri: lsFilePath\n        };\n        exportResults.fragments.push(fragment);\n    }\n    if (!cellsFragmentFound) {\n        const fragment: FileData = {\n            fileContent: getResponsiveTableCellsFragment(config),\n            dataSourceUri: lsFilePath.replace(fragmentName, cellFragmentFileName)\n        };\n        exportResults.fragments.push(fragment);\n    }\n}\n\n/**\n * Determines the manifest path of a column extension.\n * @param {string[]} page Page object from manifest.\n * @param {string} entitySet Table's entity set.\n * @param {string} [additionalKey] Key provided when defining the FacetID or QuickVariantSelectionX.\n * @param {string} [tableColumnExtensionType] Column extension type.\n */\nexport const getCustomColumnPath = (\n    page: v2.SapUiAppPageV2,\n    entitySet: string,\n    additionalKey?: string,\n    tableColumnExtensionType?: string\n): { path: string; viewTemplateType: ViewTemplateType } => {\n    const extension: string = FE_TEMPLATE_VIEW_EXTENSION_MAP.get(page.component.name);\n    if (!tableColumnExtensionType) {\n        let tableType =\n            page.component.settings &&\n            page.component.settings.tableSettings &&\n            page.component.settings.tableSettings['type'];\n        if (!tableType) {\n            tableType = 'ResponsiveTable';\n        }\n        if (extension === 'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage') {\n            tableType = 'AnalyticalTable';\n        }\n        tableColumnExtensionType = tableType + 'ColumnsExtension';\n    }\n    const viewTemplateType = tableColumnExtensionType as ViewTemplateType;\n    let extensionKey = `${tableColumnExtensionType}|${entitySet}`;\n    if (additionalKey) {\n        extensionKey += '|' + additionalKey;\n    }\n    const path = 'sap.ui5/extends/extensions/sap.ui.viewExtensions/' + extension + '/' + extensionKey;\n\n    return { path, viewTemplateType };\n};\n", "import { join } from 'path';\nimport type { v2, ViewTemplateType } from '@sap/ux-specification-types';\nimport { DirName } from '@sap/ux-specification-types';\n\nimport { render } from 'ejs';\nimport { readFileSync } from 'fs';\n\nconst templatesPath = join(__dirname, 'templates');\n\nexport enum ViewTypes {\n    XML = 'xml',\n    HTML = 'html',\n    JSON = 'json'\n}\n\n/**\n * Method which reads passed template and renders it using passed template object.\n * @param {string} templatePath - Path to template.\n * @param {{ [key: string]: string }} templateData - Template data object.\n * @return {string} the rendered template's string\n */\nexport const renderTemplate = (templatePath: string, templateData: { [key: string]: string | boolean }): string => {\n    const template = readFileSync(templatePath, 'utf8');\n    return render(template, templateData);\n};\n\n/**\n * Method escapes view name.\n * @param {string} name - View's name.\n * @return {string} Escaped view name.\n */\nconst escapeViewName = (name: string): string => {\n    // Remove all special characters\n    return name.replace(/[^\\w\\s-]/gi, '');\n};\n\n/**\n * Method which reads passed template and renders it using passed template object.\n * @param {string} name - View's name.\n * @param {string} namespace - Application namespace.\n * @return {string} the rendered template's string\n */\nexport const getControllerContent = (\n    name: string,\n    namespace: string,\n    fcl = false,\n    newControllerRouting = false\n): string => {\n    const templateData = {\n        name: namespace + '.' + escapeViewName(name),\n        newControllerRouting\n    };\n    return renderTemplate(join(templatesPath, fcl ? 'controllerFcl.js' : 'controller.js'), templateData);\n};\n\n/**\n * Method which reads passed template and renders it using passed template object.\n * @param {string} name - View's name.\n * @param {string} namespace - Application namespace.\n * @param {ViewTypes} sourceType - View's source type like XML, HTML, JSON or JS.\n * @param {boolean} [controller=false] - Generate controller.\n * @param {boolean} [page=false] - Is view should contains page structure or not - page structure uses 'sap.m.App' in view template.\n * @return {string} the rendered template's string\n */\nexport const getViewContent = (\n    name: string,\n    namespace: string,\n    sourceType: ViewTypes,\n    controller = false,\n    page = true\n): string => {\n    const escapedName = escapeViewName(name);\n    const templateData: { [key: string]: string | boolean } = {\n        name: escapedName,\n        controllerName: '',\n        page\n    };\n    if (controller) {\n        templateData.controllerName = namespace + '.controller.' + escapedName;\n    }\n    return renderTemplate(join(templatesPath, 'view.' + sourceType), templateData);\n};\n\n/**\n * Method which reads template for fragment and returns rendered result of fragment.\n * @param {string} name - View's name.\n * @param {string} namespace - Application namespace.\n * @param {ViewTypes} sourceType - View's source type like XML, HTML, JSON or JS.\n * @param {boolean} handler - JS handler.\n * @return {string} the rendered template's string\n */\nexport const getFragmentContent = (name: string, namespace: string, sourceType: ViewTypes, handler = false): string => {\n    const escapedName = escapeViewName(name);\n    const templateData: { [key: string]: string } = {\n        name: escapedName,\n        handler: ''\n    };\n    if (handler) {\n        templateData.handler = `${namespace.replace(/\\./g, '/')}/${DirName.Fragment}/${escapedName}`;\n    }\n    return renderTemplate(join(templatesPath, 'fragment.' + sourceType), templateData);\n};\n\n/**\n * Method which reads passed template and renders it using passed template object.\n * @param {string} name - View's name.\n * @param {string} namespace - Application namespace.\n * @return {string} the rendered template's string\n */\nexport const getFragmentJsContent = (): string => {\n    return renderTemplate(join(templatesPath, 'fragment.js'), {});\n};\n\n/**\n * Method which reads the template for a single column extension that shall be added to a fragment\n * @param {TableCustomColumn} column - data (from config) to be inserted in the template\n * @return {string} the rendered template's string\n */\nexport const getSingleColumnContent = (column: v2.TableCustomColumn, template: ViewTemplateType): string => {\n    const templateData: { [key: string]: string } = {\n        id: column.id,\n        text: column.text,\n        columnKey: column.columnKey,\n        columnIndex: column.columnIndex !== undefined ? column.columnIndex.toString() : undefined,\n        leadingProperty: column.leadingProperty\n    };\n    return renderTemplate(join(templatesPath, template + '.xml'), templateData);\n};\n\n/**\n * Method which reads the template for a column extension fragment and returns rendered result of fragment.\n * @param {TableCustomColumns} customColumns - array of all column extensions' data\n * @return {string} the rendered template's string\n */\nexport const getColumnFragmentContent = (\n    customColumns: v2.TableCustomColumns,\n    templateType: ViewTemplateType\n): string => {\n    let fragment = '';\n    fragment = '<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns:table=\"sap.ui.table\" xmlns=\"sap.m\">';\n    if (customColumns) {\n        for (const column of customColumns) {\n            const newContent = getSingleColumnContent(column, templateType);\n            fragment = fragment + '\\n' + newContent;\n        }\n    }\n    return fragment + '\\n' + '</core:FragmentDefinition>';\n};\n\n/**\n * Creates the content for a ResponsiveTableCellsExtesnion fragment\n * @param customColumns - list of custom columns; for each of them a dummy entry gets created in the view content.\n * @returns {string} the rendered template's string\n */\nexport const getResponsiveTableCellsFragment = (customColumns: v2.TableCustomColumns): string => {\n    let fragment = '<core:FragmentDefinition xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\">';\n    if (customColumns) {\n        customColumns.forEach(() => {\n            fragment = fragment + '\\n<Text text=\"Placeholder\"></Text>';\n        });\n    }\n    return fragment + '\\n' + '</core:FragmentDefinition>';\n};\n", "import type { Manifest, v2, ControlTypeFunction, DeprecatedProperties } from '@sap/ux-specification-types';\nimport {\n    ControlType,\n    GENERICAPPSETTINGS,\n    PropertyName,\n    QUICKVARPATH,\n    QUICKVARPATHX\n} from '@sap/ux-specification-types';\nimport { addPatternForBindingChangeOfEnumLR, convertEnumToCSV } from '../../../common';\nimport { buildControlIdFromParent, exportToFlexChange, childId, syncRule, validity } from '../../../common/decoration';\nimport {\n    getAppSettingPathV2,\n    getCreationFieldsPathV2,\n    getDataLoadSettingPathV2,\n    getTableSettingPathV2\n} from '../../application';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\n\nconst MULTIEDITPATH = '/multiEdit';\nexport const getSmartTableControlId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    _breadcrumbs: string[],\n    controlType: ControlTypeFunction\n): string => {\n    if (controlType() === 'sap.m.Table') {\n        return baseId + 'responsiveTable';\n    } else if (controlType() === 'sap.ui.comp.smarttable.SmartTable' && baseId.includes('AnalyticalListPage')) {\n        return baseId + PropertyName.table;\n    }\n    return buildControlIdFromParent(baseId, idBreadcrumbs);\n};\n\n//import & export createWithParameterDialog\nexport function importCreateParameters(manifestSection: object): object {\n    if (!manifestSection['createWithParameterDialog']) {\n        return undefined;\n    }\n    let configPart = {};\n    if (manifestSection['createWithParameterDialog']) {\n        configPart = JSON.parse(JSON.stringify(manifestSection['createWithParameterDialog'])) as Fields4Dialog;\n    }\n    return configPart;\n}\nexport function exportCreateParameters(manifestSection: unknown, configPart: Fields4Dialog): void {\n    if (configPart['createWithParameterDialog']) {\n        manifestSection['createWithParameterDialog'] = JSON.parse(\n            JSON.stringify(configPart['createWithParameterDialog'])\n        );\n    } else {\n        delete manifestSection['createWithParameterDialog'];\n    }\n}\n\nfunction exportVariants(manifestSection: object, configObject: object): void {\n    for (const variant in configObject['variants']) {\n        const variantConfig = configObject['variants'][variant];\n        const tablesettings: string[] = ['type', 'multiSelect', 'selectAll', 'selectionLimit', 'inlineDelete'];\n        for (const key in variantConfig) {\n            if (tablesettings.indexOf(key) !== -1) {\n                if (!variantConfig['tableSettings']) {\n                    variantConfig['tableSettings'] = {};\n                }\n                variantConfig['tableSettings'][key] = variantConfig[key];\n                delete variantConfig[key];\n            }\n        }\n        if (manifestSection['variants']) {\n            manifestSection['variants'][variant] = variantConfig;\n        } else {\n            manifestSection['variants'] = {\n                [variant]: variantConfig\n            };\n        }\n    }\n}\n\nfunction exportQuickVariantSelectionX(manifestSection: object, configObject: object): void {\n    if (!configObject['variants']) {\n        return;\n    }\n    if (Object.keys(configObject['variants']).length > 0) {\n        exportVariants(manifestSection, configObject);\n    } else {\n        delete manifestSection['variants'];\n    }\n}\n\nfunction importMultiEdit(manifestSection) {\n    if (!manifestSection || !manifestSection['multiEdit']) {\n        return undefined;\n    }\n    const configPart: v2.MultiEdit = JSON.parse(JSON.stringify(manifestSection['multiEdit']));\n\n    // convert CSV format to array of strings\n    configPart.ignoredFields = manifestSection['multiEdit']?.['ignoredFields']?.split(',');\n\n    return configPart;\n}\n\nexport class CreateWithFilters {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + '/createWithFilters'\n        }\n    })\n    strategy: v2.Strategy;\n}\n\nexport class MultiEdit implements v2.MultiEdit {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys) + MULTIEDITPATH\n        }\n    })\n    enabled?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys) + MULTIEDITPATH\n        }\n    })\n    annotationPath?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys) + MULTIEDITPATH,\n            export: convertEnumToCSV\n        }\n    })\n    ignoredFields?: v2.IgnoredFieldsType[];\n}\n\n//import table type\nfunction importType(manifestSection: object): string {\n    if (manifestSection?.['tableSettings']?.['type']) {\n        return manifestSection['tableSettings']['type'];\n    } else if (manifestSection?.['tableType']) {\n        return manifestSection['tableType'];\n    }\n}\n\n//export table type\nexport function exportType(manifestSection: unknown, configPart: object): void {\n    if (configPart?.['type']) {\n        if (!manifestSection['tableSettings']) {\n            manifestSection['tableSettings'] = {};\n        }\n        manifestSection['tableSettings']['type'] = configPart['type'];\n        if (manifestSection?.['tableType']) {\n            //old format\n            delete manifestSection['tableType'];\n        }\n    }\n}\n\nexport function deleteType(manifestSection: unknown): void {\n    if (manifestSection?.['tableSettings']?.['type']) {\n        delete manifestSection['tableSettings']['type'];\n    }\n    if (manifestSection?.['tableType']) {\n        //old format\n        delete manifestSection['tableType'];\n    }\n}\n\nexport class DataLoadSettings {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getDataLoadSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.75.2'\n    })\n    loadDataOnAppLaunch: v2.LoadDataOnAppLaunchSettings;\n}\n\nexport class FieldPath implements v2.FieldPath {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], _manifest: Manifest, key: string): string =>\n                getCreationFieldsPathV2(pageName, key)\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    path: string;\n}\n\nexport class Fields4Dialog {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys) + '/createWithParameterDialog'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    fields: v2.CreationFieldKeys;\n}\n\nexport class QuickVariantSelection {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATH\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    showCounts?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATH\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    variants: {\n        [key: number]: v2.QuickVariant;\n    };\n}\n\nexport class QuickVariantSelectionX implements v2.QuickVariantSelectionX {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATHX\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    showCounts?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATHX\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    enableAutoBinding?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys) + QUICKVARPATHX,\n            export: exportQuickVariantSelectionX\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    variants: {\n        [key: number]: v2.QuickVariantX;\n    };\n}\n\nexport class CommonTableSettings<COLS = v2.GenericColumns> implements v2.CommonTableSettings<COLS> {\n    getDeprecated = (): DeprecatedProperties => {\n        return {\n            tableType: {\n                since: '1.50.0',\n                deprecated: {\n                    since: '1.70.0',\n                    text: 'Use tableSettings.type instead'\n                }\n            },\n            enableAutoBinding: {\n                since: '1.40.0',\n                deprecated: {\n                    since: '1.75.2',\n                    text: 'Use tableSettings.loadDataOnAppLaunch instead'\n                }\n            }\n        };\n    };\n\n    @syncRule({\n        manifest: {\n            key: 'createWithParameterDialog',\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys),\n            import: importCreateParameters,\n            export: exportCreateParameters\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    createWithParameterDialog?: Fields4Dialog;\n\n    @syncRule({\n        flex: {\n            controlId: buildControlIdFromParent,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    showTablePersonalisation?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.26.0'\n    })\n    useExportToExcel?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    exportType?: smarttable.ExportType;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    fitContainer?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    quickVariantSelection?: QuickVariantSelection;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    quickVariantSelectionX?: QuickVariantSelectionX;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    multiSelect?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectAll?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectionLimit?: number;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.75.2'\n    })\n    dataLoadSettings?: DataLoadSettings;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.42.0'\n    })\n    condensedTableLayout?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.56.0'\n    })\n    enableTableFilterInPageVariant?: boolean;\n\n    @childId('toolBar')\n    toolBar?: v2.ToolBar;\n}\nexport class ResponsiveTable extends CommonTableSettings implements v2.ResponsiveTable {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.ResponsiveTable;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    createWithFilters?: CreateWithFilters;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    popinLayout?: PopinLayout;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    includeItemInSelection?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    inlineDelete?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.63.0'\n    })\n    showDraftToggle?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.16.0'\n    })\n    growingThreshold?: number;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getTableSettingPathV2(pageKeys),\n            import: importMultiEdit\n        }\n    })\n    @validity({\n        since: '1.98.0'\n    })\n    multiEdit?: MultiEdit;\n}\n\nexport class TreeTable extends CommonTableSettings implements v2.TreeTable {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.TreeTable;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.63.0'\n    })\n    showDraftToggle?: boolean;\n}\n\nexport class AnalyticalTable extends CommonTableSettings implements v2.AnalyticalTable {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.AnalyticalTable;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    qualifier?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    defaultContentView?: v2.DefaultContentView;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    defaultFilterMode?: v2.DefaultFilterMode;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.60.0'\n    })\n    contentTitle?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    autoHide?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    allFiltersAsInParameters?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    createWithFilters?: CreateWithFilters;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.63.0'\n    })\n    showDraftToggle?: boolean;\n}\n\nexport class TableALP extends CommonTableSettings implements v2.TableALP {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.AnalyticalTable & v2.TableTypeV2.ResponsiveTable & v2.TableTypeV2.GridTable;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    qualifier?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.38.0'\n    })\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    defaultContentView?: v2.DefaultContentView;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    defaultFilterMode?: v2.DefaultFilterMode;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.60.0'\n    })\n    contentTitle?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    autoHide?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    allFiltersAsInParameters?: boolean;\n}\n\nexport class ALPResponsiveTable extends TableALP {\n    /*No sync rule needed for type as it is already part of TableALP. This also caused sync issues with flexChanges in release 1.60 as tabletype is not explicity set to ResponsiveTable in 1.60\n    During import, Table type is used in function \"addFlex\" to refer to correct definition in schema.\n    */\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.16.0'\n    })\n    growingThreshold?: number;\n}\n\nexport class ALPGridTable extends TableALP {}\n\nexport class ALPAnalyticalTable extends TableALP {}\n\nexport class GridTable extends CommonTableSettings implements v2.GridTable {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys),\n            import: importType,\n            export: exportType,\n            delete: deleteType\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    type?: v2.TableTypeV2.GridTable;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    createWithFilters?: CreateWithFilters;\n\n    @syncRule({\n        manifest: {\n            path: (): string => GENERICAPPSETTINGS\n        }\n    })\n    @validity({\n        since: '1.63.0'\n    })\n    showDraftToggle?: boolean;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange } from '../../../common/decoration';\nimport { getActionBreadcrumbParts, convertActionKeyToStableId } from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Simple Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Action button\n */\nconst getActionButtonId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}action::${convertActionKeyToStableId(actionId).replace(':2f', '::')}`;\n};\n\n/**\n * Create stable ID for Intent Based Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Intent Based Action button\n */\nexport const buildIntentBasedActionId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { semanticObjectId, actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}action::${semanticObjectId}::${convertActionKeyToStableId(actionId)}`;\n};\n\n/**\n * Create stable ID for (Intent Based) Footer Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Footer Action button\n */\nconst getFooterActionButtonId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}action::${convertActionKeyToStableId(actionId).replace(':2f', '::')}::Determining`;\n};\n\nconst flexRuleForAction = {\n    controlId: getActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nconst flexRuleForFooterAction = {\n    controlId: getFooterActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nexport class Action implements v2.Action {\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    type?: ButtonType;\n}\n\nexport class ToolBarAction implements v2.Action {\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForAction\n    })\n    type?: ButtonType;\n}\n\nexport class FooterAction implements v2.Action {\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    type?: ButtonType;\n}\n", "import { buildIntentBasedActionId } from './Action';\nimport type { v2, SAPUI5_FRAGMENT_CLASS } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, buildColumnControlId } from '../../../common/decoration';\nimport { addPatternForBindingChangeOfEnumLR, getActionBreadcrumbParts } from '../../../common';\nimport type { TextAlign, URI } from 'sap/ui/core/library';\nimport type { ButtonType } from 'sap/m/library';\n\n/**\n * Create stable ID for Action Column\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Action Column\n */\nconst buildColumnActionId = (baseId: string, idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const columnTemplate = 'template:::TableColumn';\n    const { actionType, actionId } = getActionBreadcrumbParts(breadcrumbs);\n    const smartTableId = `sSmartTableId::${idBreadcrumbs[0]}`;\n    return `${baseId}${columnTemplate}:::${actionType}:::${smartTableId}:::sAction::${actionId}`;\n};\n/**\n * Create stable ID for Intent Based Action Column\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Action Column\n */\nconst buildColumnIntentBasedId = (baseId: string, idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const columnTemplate = 'template:::TableColumn';\n    const { actionType, actionId, semanticObjectId } = getActionBreadcrumbParts(breadcrumbs);\n    const smartTableId = `sSmartTableId::${idBreadcrumbs[0]}`;\n    return `${baseId}${columnTemplate}:::${actionType}:::${smartTableId}:::sSemanticObject::${semanticObjectId}:::sAction::${actionId}`;\n};\n\n/**\n * Create stable ID for Column Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @returns {string} stable ID of Column Action button\n */\nconst buildColumnActionButtonId = (baseId: string, _idBreadcrumbs: string[], breadcrumbs: string[]): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    return `${baseId}action::${actionId.replace(':2f', '::')}`;\n};\n\n// TableColumnAction column properties\nconst flexRuleForColumn = {\n    controlId: buildColumnActionId,\n    controlType: (): ControlType => ControlType.TableColumn,\n    createFlexChange: exportToFlexChange\n};\n\n// TableColumnAction action properties\nconst flexRuleForColumnAction = {\n    controlId: buildColumnActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\n// TableColumnActionIntentBased main properties\nconst flexRuleForColumnIntentBased = {\n    ...flexRuleForColumn,\n    controlId: buildColumnIntentBasedId\n};\n\n// TableColumnActionIntentBased action properties\nconst flexRuleForColumnIntentBasedAction = {\n    ...flexRuleForColumnAction,\n    controlId: buildIntentBasedActionId\n};\n\nexport class TableColumn implements v2.TableColumn {\n    @syncRule({\n        flex: {\n            controlId: buildColumnControlId,\n            controlType: (): ControlType => ControlType.TableColumn,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    width?: string;\n    @syncRule({\n        flex: {\n            controlId: buildColumnControlId,\n            controlType: (): ControlType => ControlType.TableColumn,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    hAlign?: TextAlign;\n}\n\nexport class TableColumnAction implements v2.TableColumnAction {\n    @syncRule({\n        flex: flexRuleForColumn\n    })\n    width?: string;\n\n    @syncRule({\n        flex: flexRuleForColumn,\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    hAlign?: TextAlign;\n\n    @syncRule({\n        flex: flexRuleForColumnAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForColumnAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForColumnAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForColumnAction\n    })\n    type?: ButtonType;\n}\n\nexport class TableColumnActionIntentBased extends TableColumnAction {\n    @syncRule({\n        flex: flexRuleForColumnIntentBased\n    })\n    width?: string;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBased,\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    hAlign?: TextAlign;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBasedAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBasedAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBasedAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForColumnIntentBasedAction\n    })\n    type?: ButtonType;\n}\n\n/**\n * No sync rules are defined for table custom columns, as they are transferred altogether.\n * This approach is needed to support inserts as well as deletions of manifest extensions and fragments\n */\nexport class TableCustomColumn implements v2.TableCustomColumn {\n    id?: string;\n    text?: string;\n    columnKey: string;\n    columnIndex?: number;\n    leadingProperty?: string;\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n    fragmentName: string;\n    cellsFragmentName?: string;\n    tabKey?: string;\n    extensionType: v2.TableColumnExtensionTypeV2;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\n\nexport class ToolBar implements v2.ToolBar {\n    actions: v2.Actions;\n}\n", "import type { v2, ChangeDefinitionInCreation } from '@sap/ux-specification-types';\nimport { ControlType, PropertyName } from '@sap/ux-specification-types';\nimport { exportToFlexChange } from '../../../common/decoration';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getChartSettingPathV2 } from '../../application';\n\nexport const getSmartChartControlId = (baseId: string): string => {\n    return baseId + PropertyName.chart;\n};\n\nexport class ChartSettings implements v2.ChartSettings {\n    @syncRule({\n        flex: {\n            controlId: getSmartChartControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showLegendButton?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartChartControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showDownloadButton?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartChartControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showChartTypeSelectionButton?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartChartControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            exportFlexValue: (flexChange: ChangeDefinitionInCreation, configObject: object, key: string): void => {\n                flexChange.content.newValue = configObject[key].join();\n            },\n            importFlexValue: (flexChange: ChangeDefinitionInCreation, configObject: object, key: string): void => {\n                flexChange.content['newValue'] = flexChange.content['newValue'] as string;\n                configObject[key] = flexChange.content['newValue'].split(',') as v2.ChartType[];\n            },\n            createFlexChange: exportToFlexChange\n        }\n    })\n    ignoredChartTypes?: v2.ChartType[];\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getChartSettingPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    showDataLabel: boolean;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { syncRule } from '../../../common/decoration/decorators';\nimport { getKPISettingsPath } from '../../application';\n\nexport class KPISettings implements v2.KPISettings {\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    model: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    entitySet?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    qualifier?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    filterable?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    detailNavigation?: string;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, _manifest, KPIKey): string => getKPISettingsPath(pageKeys, KPIKey)\n        }\n    })\n    groupId?: string;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, validity, buildControlIdFromParent, exportToFlexChange } from '../../../common/decoration';\nimport { getAppSettingOBJPathV2 } from '../../application';\nimport { addPatternForBindingChangeOfEnumOP } from '../../../common';\nimport type AvatarShape from 'sap/m/AvatarShape';\n\nconst getAvatarControlId = (baseId: string, idBreadcrumbs: string[]): string => {\n    const idBreadcrumbsCopy = idBreadcrumbs.slice(0);\n    idBreadcrumbsCopy[idBreadcrumbs.length - 1] = 'objectImage';\n    return buildControlIdFromParent(baseId, idBreadcrumbsCopy);\n};\n\nexport class ObjectPageHeader<ACT = v2.GenericActions> implements v2.ObjectPageHeader<ACT> {\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.46.0'\n    })\n    showRelatedApps?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.46.0'\n    })\n    editableHeaderContent?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    simpleHeaderFacets?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getAvatarControlId,\n            controlType: (): ControlType => ControlType.Avatar,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    displayShape?: AvatarShape;\n\n    actions?: ACT;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, buildControlIdFromParent } from '../../../common/decoration';\nimport { addPatternForBindingChangeOfEnumOP, convertActionKeyToStableId } from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Object Page Header Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @returns {string} stable ID of Object Page Header Action button\n */\nconst getActionButtonId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType: ControlTypeFunction\n): string => {\n    if (controlType() === ControlType.Button || controlType() === ControlType.HeaderAction) {\n        const actionId = breadcrumbs[2];\n        return `${baseId}action::${convertActionKeyToStableId(actionId)}`;\n    }\n    return buildControlIdFromParent(baseId, idBreadcrumbs);\n};\n\nconst flexRuleForHeaderAction = {\n    controlId: getActionButtonId,\n    controlType: (): ControlType => ControlType.HeaderAction,\n    createFlexChange: exportToFlexChange\n};\n\nexport class HeaderAction implements v2.HeaderAction {\n    @syncRule({\n        flex: flexRuleForHeaderAction,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForHeaderAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForHeaderAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForHeaderAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForHeaderAction\n    })\n    type?: ButtonType;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange, buildControlIdFromParent } from '../../../common/decoration';\nimport {\n    addPatternForBindingChangeOfEnumOP,\n    getActionBreadcrumbParts,\n    convertActionKeyToStableId\n} from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Object Page Footer Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @returns {string} stable ID of Object Page Footer Action button\n */\nconst getFooterActionButtonId = (\n    baseId: string,\n    idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType: ControlTypeFunction\n): string => {\n    if (controlType() === ControlType.Button) {\n        const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n        return `${baseId}action::${convertActionKeyToStableId(actionId)}::Determining`;\n    }\n    return buildControlIdFromParent(baseId, idBreadcrumbs);\n};\n\nconst flexRuleForFooterAction = {\n    controlId: getFooterActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nexport class ObjectPageFooterAction implements v2.ObjectPageFooterAction {\n    @syncRule({\n        flex: flexRuleForFooterAction,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForFooterAction\n    })\n    type?: ButtonType;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { buildControlIdFromParent, exportToFlexChange } from '../../../common/decoration';\n\nconst getControlId = (baseId: string, idBreadcrumbs: string[]): string => {\n    const idBreadcrumbsCopy = idBreadcrumbs.slice(0);\n    idBreadcrumbsCopy[idBreadcrumbs.length - 1] = 'objectPage';\n    return buildControlIdFromParent(baseId, idBreadcrumbsCopy);\n};\n\nexport class ObjectPageLayout implements v2.ObjectPageLayout {\n    @syncRule({\n        flex: {\n            controlId: getControlId,\n            controlType: (): ControlType => ControlType.ObjectPageLayout,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showHeaderContent?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getControlId,\n            controlType: (): ControlType => ControlType.ObjectPageLayout,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    showAnchorBar?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getControlId,\n            controlType: (): ControlType => ControlType.ObjectPageLayout,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    useIconTabBar?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getControlId,\n            controlType: (): ControlType => ControlType.ObjectPageLayout,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.34.0'\n    })\n    alwaysShowContentHeader?: boolean;\n}\n", "import { ManifestSection } from '@sap/ux-specification-types';\nimport type { SAPUI5_FRAGMENT_CLASS, SAPUI5_VIEW_CLASS, Manifest, ViewTypes, v2 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getObjectPageCustomSectionPath } from '../../application';\n\nexport class BaseCustomSection implements v2.ObjectPageCustomSectionBase {\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath,\n            export: false,\n            import: (\n                _manifest: v2.SapUi5ViewExtensionView | v2.SapUi5ViewExtensionFragment,\n                sectionId: string\n            ): string => {\n                const sectionParts = sectionId.split('|');\n                return sectionParts[2];\n            }\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    relatedFacet: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath,\n            export: false,\n            import: (\n                _manifest: v2.SapUi5ViewExtensionView | v2.SapUi5ViewExtensionFragment,\n                sectionId: string\n            ): string => {\n                return sectionId.split('|')[0];\n            }\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    relativePosition: v2.SectionPosition;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[], _manifest: Manifest, sectionId: string): string =>\n                getObjectPageCustomSectionPath(entitySet, {}, sectionId, ManifestSection.generic)\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    className: string;\n}\n\nexport class ObjectPageCustomSectionFragment extends BaseCustomSection implements v2.ObjectPageCustomSectionFragment {\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    fragmentName: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    type: v2.ExtensionFragmentTypes;\n}\n\nexport class ObjectPageCustomSectionView extends BaseCustomSection implements v2.ObjectPageCustomSectionView {\n    className: typeof SAPUI5_VIEW_CLASS;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    viewName: string;\n\n    @syncRule({\n        manifest: {\n            path: getObjectPageCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    type: ViewTypes;\n}\n", "import type { v2, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType, DefinitionName } from '@sap/ux-specification-types';\nimport { syncRule } from '../../../common/decoration/decorators';\nimport {\n    addPatternForBindingChangeOfEnumOP,\n    buildControlIdFromParent,\n    exportToFlexChange,\n    convertSectionId\n} from '../../../common';\n\nexport const getTableSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, DefinitionName.Table];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\nexport const getFormSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, 'FormGroup'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport const getChartSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetID: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetID);\n    const breadcrumbsTrail = [convertedId, 'Chart'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport const getSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, 'Section'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport const getSubSectionControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType: ControlTypeFunction,\n    facetId: string\n): string => {\n    const convertedId = convertSectionId(breadcrumbs[1], facetId);\n    const breadcrumbsTrail = [convertedId, 'SubSection'];\n    return buildControlIdFromParent(baseId, breadcrumbsTrail);\n};\n\nexport class ObjectPageSectionV2 implements v2.ObjectPageSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionFormV2 implements v2.ObjectPageSectionFormV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionChartV2 implements v2.ObjectPageSectionChartV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionTableV2 implements v2.ObjectPageSectionTableV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionAddressV2 implements v2.ObjectPageSectionAddressV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSectionContactV2 implements v2.ObjectPageSectionContactV2 {\n    @syncRule({\n        flex: {\n            controlId: getSectionControlId,\n            controlType: (): ControlType => ControlType.Section,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionV2 implements v2.ObjectPageSubSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getSubSectionControlId,\n            controlType: (): ControlType => ControlType.SubSection,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionFormV2 implements v2.ObjectPageSubSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getFormSectionControlId,\n            controlType: (): ControlType => ControlType.Group,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionChartV2 implements v2.ObjectPageSubSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getChartSectionControlId,\n            controlType: (): ControlType => ControlType.SmartChart,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionAddressV2 implements v2.ObjectPageSubSectionAddressV2 {\n    @syncRule({\n        flex: {\n            controlId: getSubSectionControlId,\n            controlType: (): ControlType => ControlType.SubSection,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionContactV2 implements v2.ObjectPageSubSectionContactV2 {\n    @syncRule({\n        flex: {\n            controlId: getSubSectionControlId,\n            controlType: (): ControlType => ControlType.SubSection,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n\nexport class ObjectPageSubSectionTableV2 implements v2.ObjectPageSubSectionV2 {\n    @syncRule({\n        flex: {\n            controlId: getTableSectionControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible?: boolean;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { getAppSettingOBJPathV2, getChartSettingsOBJsectionPathV2 } from '../../application';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\n\nexport class ObjectPageChart implements v2.ObjectPageChart {\n    @syncRule({\n        manifest: {\n            path: getChartSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    variantManagement?: boolean;\n}\n\nexport class GlobalChartSettings implements v2.GlobalChartSettings {\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys) + '/chartSettings'\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    variantManagement?: boolean;\n}\n", "import type { v2, DeprecatedProperties, ControlTypeFunction } from '@sap/ux-specification-types';\nimport { ControlType, DefinitionName, QUICKVARPATH } from '@sap/ux-specification-types';\nimport {\n    syncRule,\n    validity,\n    buildControlIdFromParent,\n    exportToFlexChange,\n    convertSectionId,\n    childId\n} from '../../../common/decoration';\nimport { getAppSettingOBJsectionPathV2, getTableSettingsOBJsectionPathV2 } from '../../application';\nimport { addPatternForBindingChangeOfEnumOP } from '../../../common';\nimport { exportCreateParameters } from './Table';\nimport type { PopinLayout } from 'sap/m/library';\nimport type { smarttable } from 'sap/ui/comp/library';\n\nconst getSmartTableControlId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    controlType: ControlTypeFunction,\n    title: string\n): string => {\n    const breadCrumbsCopy = breadcrumbs.slice(1, 2);\n    let suffixId: string;\n\n    if (controlType() === 'sap.ui.comp.smarttable.SmartTable') {\n        suffixId = DefinitionName.Table;\n    } else if (controlType() === 'sap.m.Table') {\n        suffixId = 'responsiveTable';\n    }\n    breadCrumbsCopy.push(suffixId);\n    breadCrumbsCopy[0] = convertSectionId(breadCrumbsCopy[0], title);\n    return buildControlIdFromParent(baseId, breadCrumbsCopy);\n};\n\nexport class QuickVariantSelectionOP {\n    @syncRule({\n        manifest: {\n            path: (pageKeys, manifest, sectionId): string =>\n                getAppSettingOBJsectionPathV2(pageKeys, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    showCounts?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys, manifest, sectionId): string =>\n                getAppSettingOBJsectionPathV2(pageKeys, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    variants: {\n        [key: number]: v2.QuickVariant;\n    };\n}\n\nexport class FieldPathOP implements v2.FieldPathOP {\n    @syncRule({\n        manifest: {\n            path: (pageKeys, manifest, sectionId, key): string =>\n                getTableSettingsOBJsectionPathV2(pageKeys, manifest, sectionId) +\n                `/createWithParameterDialog/fields/${key}`\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    path: string;\n}\n\nexport class Fields4DialogOP implements v2.Fields4Dialog {\n    @syncRule({\n        manifest: {\n            path: (pageKeys, manifest, sectionId): string =>\n                getTableSettingsOBJsectionPathV2(pageKeys, manifest, sectionId) + '/createWithParameterDialog'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    fields: v2.CreationFieldKeys;\n}\n\nfunction importCreateParameters(manifestSection: object): object {\n    let configPart;\n    if (manifestSection['createWithParameterDialog']) {\n        configPart = JSON.parse(JSON.stringify(manifestSection['createWithParameterDialog'])) as Fields4DialogOP;\n    }\n    return configPart;\n}\nexport class ObjectPageCommonTableSettings<COLS = v2.GenericColumns> implements v2.ObjectPageCommonTableSettings<COLS> {\n    getDeprecated = (): DeprecatedProperties => {\n        return {\n            tableType: {\n                since: '1.50.0',\n                deprecated: {\n                    since: '1.70.0',\n                    text: 'Use tableSettings.type instead'\n                }\n            }\n        };\n    };\n\n    @syncRule({\n        manifest: {\n            key: 'createWithParameterDialog',\n            path: getTableSettingsOBJsectionPathV2,\n            import: importCreateParameters,\n            export: exportCreateParameters\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    createWithParameterDialog?: Fields4DialogOP;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.28.0'\n    })\n    editable?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.54.0'\n    })\n    multiSelect?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectAll?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.70.0'\n    })\n    selectionLimit?: number;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.63.0'\n    })\n    quickVariantSelection?: QuickVariantSelectionOP;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.26.0'\n    })\n    useExportToExcel?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.SmartTable,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.50.0'\n    })\n    exportType?: smarttable.ExportType;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.48.5'\n    })\n    createMode?: v2.CreateMode;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.61.0'\n    })\n    disableDefaultInlineCreateSort?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    variantManagement?: boolean;\n\n    @childId('toolBar')\n    toolBar?: v2.ObjectPageToolBar;\n}\n\nexport class ObjectPageResponsiveTable extends ObjectPageCommonTableSettings implements v2.ObjectPageResponsiveTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    type?: v2.TableTypeV2.ResponsiveTable;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    includeItemInSelection?: boolean;\n\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    popinLayout?: PopinLayout;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    inlineDelete?: boolean;\n    @syncRule({\n        flex: {\n            controlId: getSmartTableControlId,\n            controlType: (): ControlType => ControlType.Table,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    @validity({\n        since: '1.16.0'\n    })\n    growingThreshold?: number;\n}\n\nexport class ObjectPageAnalyticalTable extends ObjectPageCommonTableSettings implements v2.ObjectPageAnalyticalTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    type?: v2.TableTypeV2.AnalyticalTable;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.67.0'\n    })\n    condensedTableLayout?: boolean;\n}\n\nexport class ObjectPageGridTable extends ObjectPageCommonTableSettings implements v2.ObjectPageGridTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    type?: v2.TableTypeV2.GridTable;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.67.0'\n    })\n    condensedTableLayout?: boolean;\n}\n\nexport class ObjectPageTreeTable extends ObjectPageCommonTableSettings implements v2.ObjectPageTreeTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsOBJsectionPathV2\n        }\n    })\n    type?: v2.TableTypeV2.TreeTable;\n\n    @syncRule({\n        manifest: {\n            path: getAppSettingOBJsectionPathV2\n        }\n    })\n    @validity({\n        since: '1.67.0'\n    })\n    condensedTableLayout?: boolean;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { ControlType } from '@sap/ux-specification-types';\nimport { syncRule, exportToFlexChange } from '../../../common/decoration';\nimport {\n    addPatternForBindingChangeOfEnumOP,\n    convertSectionId,\n    getActionBreadcrumbParts,\n    convertActionKeyToStableId\n} from '../../../common';\nimport type { ButtonType } from 'sap/m/library';\nimport type { URI } from 'sap/ui/core/library';\n\n/**\n * Create stable ID for Object Page Toolbar Action button\n *\n * @param {string} baseId Base Id of the control\n * @param {string[]} _idBreadcrumbs\n * @param {string[]} breadcrumbs\n * @param {ControlTypeFunction} controlType\n * @param {string} facetID title from the app schema (comprising for instance the facet ID)\n * @returns {string} stable ID of Object Page Toolbar Action button\n */\nconst getActionButtonId = (\n    baseId: string,\n    _idBreadcrumbs: string[],\n    breadcrumbs: string[],\n    _controlType,\n    facetID: string\n): string => {\n    const { actionId } = getActionBreadcrumbParts(breadcrumbs);\n    const section = convertSectionId(breadcrumbs[1], facetID);\n    return `${baseId}${section}::action::${convertActionKeyToStableId(actionId).replace(':2f', '::')}`;\n};\n\nconst flexRuleForToolBarActionOP = {\n    controlId: getActionButtonId,\n    controlType: (): ControlType => ControlType.Button,\n    createFlexChange: exportToFlexChange\n};\n\nexport class ObjectPageToolBarAction implements v2.ObjectPageToolBarAction {\n    @syncRule({\n        flex: flexRuleForToolBarActionOP,\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    visible: boolean;\n\n    @syncRule({\n        flex: flexRuleForToolBarActionOP\n    })\n    tooltip?: string;\n\n    @syncRule({\n        flex: flexRuleForToolBarActionOP\n    })\n    icon?: URI;\n\n    @syncRule({\n        flex: flexRuleForToolBarActionOP\n    })\n    activeIcon?: URI;\n\n    @syncRule({\n        flex: flexRuleForToolBarActionOP\n    })\n    type?: ButtonType;\n}\n", "import type { UI5Version, ExtensionLogger, ExportResults } from '../..';\nimport type { v2, PageType } from '@sap/ux-specification-types';\nimport type { FlexChangesForTransfer } from './import/controls/table';\nimport type { MetadataFactory, MetadataInstanceInterface } from '../common/decoration/factory';\nimport type * as v2controls from './export/controls';\nimport type * as v2pages from './export/pages';\nimport type { Definition } from 'typescript-json-schema';\n\nexport type V2Controls = typeof v2controls;\nexport type V2Pages = typeof v2pages;\n\nexport type TransferParameterTypeV2 = {\n    v2Page: v2.SapUiAppPageV2;\n    exportResults: ExportResults;\n    appId: string;\n    baseId: string;\n    appSchema: object;\n    ui5Version: UI5Version;\n    factory: MetadataFactory;\n    pageKeys: string[];\n    pageType: PageType;\n    logger: ExtensionLogger;\n    propertyDefinition?: object;\n    nextDefinition?: object;\n};\n\nexport const MULTISELECTTABLE = 'ResponsiveTableWithMultiSelect<LineItems>';\nexport const INLINEDELETETABLE = 'ResponsiveTableWithInlineDelete<LineItems>';\nexport const TREETABLE = 'TreeTable<LineItems>';\nexport const ANALYTICALTABLE = 'AnalyticalTable<LineItems>';\nexport const GRIDTABLE = 'GridTable<LineItems>';\n\nexport enum SectionTypeV2 {\n    SectionAddress = 'ObjectPageSectionAddressV2',\n    SectionChart = 'ObjectPageSectionChartV2',\n    SectionContact = 'ObjectPageSectionContactV2',\n    SectionForm = 'ObjectPageSectionFormV2',\n    Section = 'ObjectPageSectionV2',\n    SubSection = 'ObjectPageSubSectionV2',\n    SectionTable = 'ObjectPageSectionTableV2',\n    SubSectionForm = 'ObjectPageSubSectionFormV2',\n    SubSectionTable = 'ObjectPageSubSectionTableV2',\n    SubSectionAddress = 'ObjectPageSubSectionAddressV2',\n    SubSectionContact = 'ObjectPageSubSectionContactV2',\n    SubSectionChart = 'ObjectPageSubSectionChartV2'\n}\n\nexport enum ActionTypeV2 {\n    Form = 'FormAction',\n    Header = 'HeaderAction',\n    OPToolBar = 'ObjectPageToolBarAction',\n    OPFooter = 'ObjectPageFooterAction',\n    OPColumn = 'ObjectPageTableColumnAction',\n    ToolBar = 'ToolBarAction',\n    Footer = 'FooterAction',\n    Column = 'TableColumnAction',\n    ToolBarIntentBased = 'ToolBarActionIntentBased',\n    FooterIntentBased = 'FooterActionIntentBased',\n    ColumnIntentBased = 'TableColumnActionIntentBased'\n}\n\nexport type ObjectPageV2ConfigParameters = {\n    factory: MetadataInstanceInterface;\n    pageKeys: string[];\n    flexChanges: FlexChangesForTransfer;\n    v2Page: v2.SapUiAppPageV2;\n    objectPageConfig?: v2.ObjectPageConfigV2;\n};\n\nexport type SectionPartProperties = {\n    id?: string;\n    type?: SectionTypeV2;\n    schema?: Definition;\n    title?: string;\n};\n", "import { determineTableType, transferSettingsOfObject, addFlex, addFragments, convertActionKey } from '../common/index';\nimport type { v2, ImportListReportV2Parameters } from '@sap/ux-specification-types';\nimport { LogSeverity, DefinitionName, MANIFESTPATH, ManifestSection, PageType } from '@sap/ux-specification-types';\nimport { parseChangeString } from '../../../common';\nimport { log } from '../../../../extensionLogger';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../../i18n/i18n';\nimport { findListReportPageV2, removeEmptySettings } from '../../import/utils';\nimport { MetadataInstanceFactoryV2 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport { INLINEDELETETABLE, MULTISELECTTABLE } from '../../types';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Imports filterbar information into the LR config\n * @param {ListReportConfig} listReportConfig - LR config, to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all input data\n * @param {Definition} schemaDefinitions - app schema definitions\n * @param {string} pageKey - key of the page in manifest\n */\nfunction importFilterBar(\n    listReportConfig: v2.ListReportConfigV2,\n    factory: MetadataInstanceInterface,\n    importParameters: ImportListReportV2Parameters,\n    schemaDefinitions: Definition,\n    pageKey: string\n) {\n    listReportConfig.filterBar = factory.createInstance(\n        PageType.ListReport,\n        DefinitionName.ListReportFilterBar,\n        listReportConfig.filterBar\n    );\n    transferSettingsOfObject(\n        listReportConfig.filterBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.ListReportFilterBar],\n        pageKey,\n        importParameters.logger\n    );\n    if (schemaDefinitions['SelectionFields']) {\n        listReportConfig.filterBar.selectionFields = factory.createInstance(\n            PageType.ListReport,\n            DefinitionName.ListReportFilterBar,\n            listReportConfig.filterBar.selectionFields\n        );\n        const schemaSelectionFields = schemaDefinitions['SelectionFields'].properties;\n        for (const selectionProperty in schemaSelectionFields) {\n            const selectionKey = selectionProperty;\n            listReportConfig.filterBar.selectionFields[selectionKey] = factory.createInstance(\n                PageType.ListReport,\n                'SelectionFieldDateSettings'\n            );\n            transferSettingsOfObject(\n                listReportConfig.filterBar.selectionFields[selectionKey],\n                importParameters.manifest,\n                schemaDefinitions['SelectionFieldDateSettings'],\n                pageKey,\n                importParameters.logger,\n                selectionKey\n            );\n        }\n    }\n}\n\n/**\n * Imports table information into the LR config\n * @param {TableTypeV2} tableType - table type\n * @param {Definition} schemaDefinitions - app schema definitions\n * @param {ListReportConfig} listReportConfig - LR config, to be filled\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all input data\n * @param {string} pageKey - key of the page in manifest\n */\nfunction importTable(\n    tableType: v2.TableTypeV2,\n    schemaDefinitions: Definition,\n    listReportConfig: v2.ListReportConfigV2,\n    importParameters: ImportListReportV2Parameters,\n    pageKey: string\n) {\n    let localJsonSchema: Definition;\n\n    if (tableType === 'TreeTable' || tableType === 'AnalyticalTable' || tableType === 'GridTable') {\n        localJsonSchema = schemaDefinitions[tableType + '<LineItems>'];\n    } else {\n        if (schemaDefinitions[MULTISELECTTABLE] && schemaDefinitions[INLINEDELETETABLE]) {\n            localJsonSchema = JSON.parse(JSON.stringify(schemaDefinitions[MULTISELECTTABLE])) as Definition;\n            localJsonSchema.properties = {\n                ...localJsonSchema.properties,\n                ...(schemaDefinitions[INLINEDELETETABLE] as Definition).properties\n            };\n        }\n    }\n    transferSettingsOfObject(\n        listReportConfig.table,\n        importParameters.manifest,\n        localJsonSchema,\n        pageKey,\n        importParameters.logger\n    );\n}\n\n/**\n * Adds manifest settings to the config.json of List Report V2\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfig} listReportConfig - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {string} pageKey - key of the page in manifest\n */\nfunction addSettings(\n    importParameters: ImportListReportV2Parameters,\n    listReportConfig: v2.ListReportConfigV2,\n    factory: MetadataInstanceInterface,\n    pageKey: string\n): void {\n    const tableType = determineTableType(importParameters.manifest, pageKey);\n    listReportConfig.table = factory.createInstance(PageType.ListReport, tableType, listReportConfig.table);\n    const schemaDefinitions = (importParameters.jsonSchema as Definition).definitions as Definition;\n\n    //Import table:\n    importTable(tableType, schemaDefinitions, listReportConfig, importParameters, pageKey);\n\n    //Import ToolBar:\n    listReportConfig.table.toolBar = factory.createInstance(PageType.ListReport, DefinitionName.ToolBar, {\n        actions: {}\n    });\n    transferSettingsOfObject(\n        listReportConfig.table.toolBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.ToolBarLR],\n        pageKey,\n        importParameters.logger\n    );\n    if (schemaDefinitions[DefinitionName.ActionsLR]) {\n        for (const actionProperty in schemaDefinitions[DefinitionName.ActionsLR].properties) {\n            const actionKey = convertActionKey(actionProperty);\n            listReportConfig.table.toolBar.actions[actionKey] = factory.createInstance(\n                PageType.ListReport,\n                DefinitionName.Action\n            );\n            transferSettingsOfObject(\n                listReportConfig.table.toolBar.actions[actionKey],\n                importParameters.manifest,\n                schemaDefinitions[DefinitionName.Action],\n                pageKey,\n                importParameters.logger\n            );\n        }\n    }\n\n    //Import FilterBar:\n    importFilterBar(listReportConfig, factory, importParameters, schemaDefinitions, pageKey);\n\n    //Import Footer:\n    listReportConfig.footer = { actions: {} };\n    const footerAction = schemaDefinitions[DefinitionName.FooterActionsLR];\n    if (footerAction) {\n        for (const actionProperty in footerAction.properties) {\n            const actionKey = convertActionKey(actionProperty);\n            listReportConfig.footer.actions[actionKey] = factory.createInstance(\n                PageType.ListReport,\n                DefinitionName.FooterAction\n            );\n            transferSettingsOfObject(\n                listReportConfig.footer.actions[actionKey],\n                importParameters.manifest,\n                schemaDefinitions[DefinitionName.Action],\n                pageKey,\n                importParameters.logger\n            );\n        }\n    }\n}\n\n/**\n * Creates the configuration file content for a list report V2\n * @param {ImportListReportV2Parameters} importParameters  - object comprising all input data\n *\n * @returns {ListReportConfig} - the configuration (JSON) for the list report\n */\nexport function createListReportConfig(\n    importParameters: ImportListReportV2Parameters\n): v2.ListReportConfigV2 | undefined {\n    // Initialize i18next\n    initI18n();\n\n    if (!importParameters.manifest[ManifestSection.generic]) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOFE'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    const v2Pages = importParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2;\n    if (!v2Pages) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOPAGES', { appId: importParameters.manifest['sap.app']['id'] }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    const factory = new Factory();\n    //Instantiate Page\n    const config = factory.createPageInstance(PageType.ListReport);\n\n    const pageKeys: string[] = [];\n    const v2Page = findListReportPageV2(importParameters.manifest[ManifestSection.generic].pages, pageKeys);\n    if (!v2Page) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOLR'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    //Add manifest settings to config\n    addSettings(importParameters, config, factory, pageKeys[0]);\n\n    // Add flex changes to config\n    importParameters.flex.forEach((change) => {\n        if (parseChangeString(change)) {\n            addFlex(config, change, importParameters.jsonSchema, importParameters.logger);\n        }\n    });\n    addFragments(config, importParameters.manifest, v2Page, PageType.ListReport, importParameters.fragments);\n    removeEmptySettings(config);\n    return config;\n}\n", "import i18next from 'i18next';\nimport i18nEn from '@sap/ux-specification-types';\nimport { initI18n as initSyncI18n } from '../sync/i18n';\n\nexport function initI18n(language = 'en'): void {\n    // Initialize i18next of ide-extension\n    i18next.init({\n        resources: {\n            en: {\n                translation: i18nEn\n            }\n        },\n        lng: language,\n        fallbackLng: 'en',\n        joinArrays: '\\n\\n'\n    });\n\n    // Initialize i18next of core module\n    initSyncI18n(i18next);\n}\n", "import type { i18n } from 'i18next';\nimport * as i18nSyncEn from './common/i18n.json';\n\nexport function initI18n(i18nInstance: i18n): void {\n    i18nInstance.addResourceBundle(i18nInstance.language, 'translation', i18nSyncEn);\n}\n", "import { v2, ManifestSection, PageType, MANIFESTPATH, LogSeverity } from '@sap/ux-specification-types';\nimport { ensureManifestSectionByPathV2 } from '../export/manifest';\nimport { getPageTypeV2 } from '../../common';\nimport i18next from 'i18next';\nimport type { ExtensionLogger } from '../../..';\nimport { log } from '../../../extensionLogger';\n\n/**\n * Determines a V2 object page in the manifest, based on the given entity set\n * @param v2Pages - manifest['sap.ui.generic.app'].pages\n * @param entitySet - current entityset\n * @param pageKeys - list of page keys, to be filled\n * @returns v2Page - page as specified in the manifest\n */\nexport function findObjectPageV2(\n    v2Pages: v2.SapUiAppPagesV2,\n    entitySet: string,\n    pageKeys: string[]\n): v2.SapUiAppPageV2 | undefined {\n    for (const key in v2Pages) {\n        const v2Page = v2Pages[key];\n        if (getPageTypeV2(v2Page.component.name) === PageType.ObjectPage && v2Page.entitySet === entitySet) {\n            pageKeys.push(key);\n            return v2Page;\n        } else if (v2Page.pages) {\n            pageKeys.push(key);\n            return findObjectPageV2(v2Page.pages, entitySet, pageKeys);\n        }\n    }\n}\n\n/**\n * Determines a V2 list report page in the manifest\n * @param v2Pages - manifest['sap.ui.generic.app'].pages\n * @param pageKeys - list of page keys, to be filled\n * @returns v2Page - page as specified in the manifest\n */\nexport function findListReportPageV2(v2Pages: v2.SapUiAppPagesV2, pageKeys: string[]): v2.SapUiAppPageV2 | undefined {\n    for (const key in v2Pages) {\n        const v2Page = v2Pages[key];\n        pageKeys.push(key);\n        if (getPageTypeV2(v2Page.component.name) === PageType.ListReport) {\n            return v2Page;\n        }\n    }\n}\n\n/**\n * Determines a V2 analytical list page in the manifest\n * @param v2Pages - manifest['sap.ui.generic.app'].pages\n * @param pageKeys - list of page keys, to be filled\n * @returns v2Page - page as specified in the manifest\n */\nexport function findAnalyticalListPage(\n    v2Pages: v2.SapUiAppPagesV2,\n    pageKeys: string[],\n    logger?: ExtensionLogger\n): v2.SapUiAppPageV2 | undefined {\n    for (const key in v2Pages) {\n        const v2Page = v2Pages[key];\n        pageKeys.push(key);\n        if (getPageTypeV2(v2Page.component.name) === PageType.AnalyticalListPage) {\n            return v2Page;\n        }\n    }\n    //Not found ==> log\n    log(logger, {\n        severity: LogSeverity.Error,\n        message: i18next.t('NOALP'),\n        location: {\n            path: MANIFESTPATH,\n            range: [ManifestSection.generic]\n        }\n    });\n}\n\n/**\n * Method checks if passed extension key is associated to custom section with passed entity.\n * @param {string} extensionKey - Extension key.\n * @param {string} entity - Entity to check in extension.\n * @returns {boolean} Is extension key relates to custom section and associated to passed entity.\n */\nexport function isAssociatedCustomSection(extensionKey: string, entity: string): boolean {\n    const keyParts = extensionKey.split('|');\n    return v2.SectionPosition[keyParts[0]] && keyParts[1] === entity;\n}\n\n/**\n * Method which finds custom section extensions in manifest for passed entitySet\n * @param manifest - manifest.\n * @param entitySet - Entity set to lookup while searching custom section extensions.\n * @returns {object} Found object with custom sections\n */\nexport function findCustomSectionExtensions(manifest: object, entitySet: string): object {\n    const customSectionViews = ensureManifestSectionByPathV2(\n        manifest,\n        `sap.ui5/extends/extensions/${v2.SAPUI5_VIEW_EXTENSION}/${v2.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE}`\n    );\n    const pageCustomSections = {};\n    for (const key in customSectionViews) {\n        if (isAssociatedCustomSection(key, entitySet)) {\n            pageCustomSections[key] = customSectionViews[key];\n        }\n    }\n    return pageCustomSections;\n}\n\n/**\n * Removes empty properties of Footer\n * @param {AnalyticalListPageConfig | ListReportConfig} config - the configuration to be checked\n */\nfunction removeEmptySettingsOfFooter(config: v2.AnalyticalListPageConfigV2 | v2.ListReportConfigV2) {\n    if (config.footer?.actions) {\n        for (const actionKey in config.footer.actions) {\n            if (Object.keys(config.footer.actions[actionKey]).length === 0) {\n                delete config.footer.actions[actionKey];\n            }\n        }\n        if (Object.keys(config.footer.actions).length === 0) {\n            delete config.footer.actions;\n        }\n        if (Object.keys(config.footer).length === 0) {\n            delete config.footer;\n        }\n    }\n}\n\n/**\n * Removes empty properties of FilterBar\n * @param {AnalyticalListPageConfig | ListReportConfig} config - the configuration to be checked\n */\nfunction removeEmptySettingsOfFilterBar(config: v2.AnalyticalListPageConfigV2 | v2.ListReportConfigV2) {\n    if (config.filterBar?.selectionFields) {\n        for (const fieldKey in config.filterBar.selectionFields) {\n            if (Object.keys(config.filterBar.selectionFields[fieldKey]).length === 0) {\n                delete config.filterBar.selectionFields[fieldKey];\n            }\n        }\n        if (Object.keys(config.filterBar?.selectionFields)?.length === 0) {\n            delete config.filterBar.selectionFields;\n        }\n    }\n}\n\n/**\n * Removes empty properties of ToolBar\n * @param {AnalyticalListPageConfig | ListReportConfig} config - the configuration to be checked\n */\nfunction removeEmptySettingsOfToolBar(config: v2.AnalyticalListPageConfigV2 | v2.ListReportConfigV2) {\n    if (config.table?.toolBar) {\n        for (const actionKey in config.table.toolBar.actions) {\n            if (Object.keys(config.table.toolBar.actions[actionKey]).length === 0) {\n                delete config.table.toolBar.actions[actionKey];\n            }\n        }\n        if (Object.keys(config.table.toolBar.actions).length === 0) {\n            delete config.table.toolBar.actions;\n        }\n        if (Object.keys(config.table.toolBar).length === 0) {\n            delete config.table.toolBar;\n        }\n    }\n}\n\n/**\n * Removes empty properties in the config.json of Analytical List Page V2 | ListReport Page V2\n * @param {AnalyticalListPageConfig | ListReportConfig} config - the configuration to be checked\n */\nexport function removeEmptySettings(config: v2.AnalyticalListPageConfigV2 | v2.ListReportConfigV2): void {\n    // Check ToolBar\n    removeEmptySettingsOfToolBar(config);\n    // Check FilterBar\n    removeEmptySettingsOfFilterBar(config);\n    // Check Footer\n    removeEmptySettingsOfFooter(config);\n}\n", "export * from './AnalyticalListPage';\nexport * from './ListReport';\nexport * from './ObjectPage';\nexport * from './OverviewPage';\n", "import { ControlType, v2 } from '@sap/ux-specification-types';\nimport type { AnalyticalTable } from '../controls/Table';\nimport { pageLayoutInformation, childId, syncRule } from '../../../common/decoration/decorators';\nimport { buildControlIdForPage, exportToFlexChange } from '../../../common/decoration';\n\n@pageLayoutInformation({\n    id: 'sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage',\n    pageId: v2.FE_TEMPLATE_V2_ALP\n})\nexport class AnalyticalListPage implements v2.AnalyticalListPageConfigV2 {\n    @syncRule({\n        flex: {\n            controlId: buildControlIdForPage,\n            controlType: (): ControlType => ControlType.DynamicPage,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    fitContent?: boolean;\n\n    @childId('table')\n    table?: AnalyticalTable;\n\n    @childId('template::SmartFilterBar')\n    filterBar?: v2.AnalyticalListPageFilterBar;\n\n    @childId('analyticalListPageChart')\n    chart?: v2.ChartSettings;\n\n    @childId('analyticalListFooter')\n    footer?: v2.GenericFooter;\n\n    keyPerformanceIndicators: {\n        [k: string]: v2.KPISettings;\n    };\n}\n", "import { ControlType, v2 } from '@sap/ux-specification-types';\nimport type { ResponsiveTable, TreeTable, AnalyticalTable, GridTable } from '../controls/Table';\nimport { pageLayoutInformation, childId, syncRule } from '../../../common/decoration/decorators';\nimport { buildControlIdForPage, exportToFlexChange } from '../../../common/decoration';\n\ntype TableClassType = ResponsiveTable | TreeTable | AnalyticalTable | GridTable;\n\n@pageLayoutInformation({\n    id: v2.SAPUI5_VIEW_EXTENSION_LIST_REPORT,\n    pageId: v2.FE_TEMPLATE_V2_LIST_REPORT\n})\nexport class ListReport implements v2.ListReportConfigV2 {\n    @syncRule({\n        flex: {\n            controlId: buildControlIdForPage,\n            controlType: (): ControlType => ControlType.DynamicPage,\n            createFlexChange: exportToFlexChange\n        }\n    })\n    fitContent?: boolean;\n\n    @childId('listReportFilter')\n    filterBar?: v2.ListReportFilterBar;\n\n    @childId('listReport')\n    table?: TableClassType;\n\n    @childId('listReportFooter')\n    footer?: v2.GenericFooter;\n}\n", "/**\n * The module is mapped to specification/v2/pages/ObjectPageConfig.ts\n * This comment is maintained as this module is named as ObjectPage.ts and the corresponding module is named as ObjectPageConfig.ts\n */\n\nimport { v2 } from '@sap/ux-specification-types';\nimport { pageLayoutInformation, childId, syncRule, validity } from '../../../common/decoration/decorators';\nimport { getAppSettingOBJPathV2, getAppRootSettingOBJPath } from '../../application';\nimport type { FlexibleColumnLayoutType } from '@sap/ux-specification-types';\n\n@pageLayoutInformation({\n    id: v2.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE,\n    pageId: v2.FE_TEMPLATE_V2_OBJECT_PAGE\n})\nexport class ObjectPage implements v2.ObjectPageConfigV2 {\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    showConfirmationOnDraftActivate?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.52.1'\n    })\n    hideChevronForUnauthorizedExtNav?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.48.0'\n    })\n    allowDeepLinking?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.52.0'\n    })\n    navToListOnSave?: boolean;\n\n    @childId('header')\n    header?: v2.ObjectPageHeader;\n\n    @childId('sections')\n    sections?: v2.CustomSections | v2.GenericSections;\n\n    @childId('layout')\n    layout?: v2.ObjectPageLayout;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppRootSettingOBJPath(pageKeys)\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    defaultLayoutTypeIfExternalNavigation?: FlexibleColumnLayoutType.MidColumnFullScreen;\n\n    @syncRule({\n        manifest: {\n            path: (pageKeys: string[]): string => getAppSettingOBJPathV2(pageKeys),\n            import: (value: object): object | undefined => {\n                if ('chartSettings' in value) {\n                    return value['chartSettings'];\n                }\n            },\n            key: 'chartSettings'\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    globalChartSettings?: v2.GlobalChartSettings;\n}\n", "import type { v2 } from '@sap/ux-specification-types';\nimport { pageLayoutInformation, syncRule, validity } from '../../../common/decoration/decorators';\nimport { getOVPsettingPath, getGlobalSettingsPath } from '../../application';\nimport type { ListCard, AnalyticalCard, StackCard, LinklistCard, TableCard, CustomCard } from '../controls/Card';\n\nfunction importDateSettingsFieldsOVP(manifestSection: object, configPart) {\n    for (const propertyKey in manifestSection['dateSettings']['fields']) {\n        configPart.fields[propertyKey] = manifestSection['dateSettings']['fields'][propertyKey];\n        const selectedValues = manifestSection['dateSettings']['fields'][propertyKey].selectedValues;\n        if (typeof selectedValues === 'string') {\n            configPart.fields[propertyKey].selectedValues = selectedValues.split(',') as v2.DateRangeType[];\n        }\n        for (const filterKey in manifestSection['dateSettings']['fields'][propertyKey].filter) {\n            const filterValue = manifestSection['dateSettings']['fields'][propertyKey].filter[filterKey];\n            configPart.fields[propertyKey].filter[filterKey] = filterValue;\n            if (filterValue.equals && typeof filterValue.equals === 'string') {\n                configPart.fields[propertyKey].filter[filterKey].equals = filterValue.equals.split(\n                    ','\n                ) as v2.DateRangeType[];\n            }\n        }\n    }\n}\n\nexport function importDateSettingsOVP(manifestSection: object): v2.DateRange {\n    if (!manifestSection || !manifestSection['dateSettings']) {\n        return undefined;\n    }\n    const configPart: v2.DateRange = JSON.parse(JSON.stringify(manifestSection['dateSettings']));\n    // converted CSV format to array of strings\n    if (typeof manifestSection['dateSettings']['selectedValues'] === 'string') {\n        configPart.selectedValues = manifestSection['dateSettings']['selectedValues'].split(',') as v2.DateRangeType[];\n    }\n    if (manifestSection['dateSettings']['fields']) {\n        importDateSettingsFieldsOVP(manifestSection, configPart);\n    }\n    return configPart;\n}\n\nexport function importFilterSettings(manifestSection: object): object {\n    const configPart = {};\n    configPart['dateSettings'] = importDateSettingsOVP(manifestSection['filterSettings']);\n    return configPart;\n}\n\nfunction exportFilterFields(configPart: v2.FilterSettingsType, key: string, manifestSection: unknown) {\n    for (const fieldName in configPart['filterSettings'][key]['fields']) {\n        const field = configPart['filterSettings'][key]['fields'][fieldName];\n        if (field.selectedValues) {\n            manifestSection['filterSettings'][key]['fields'][fieldName].selectedValues = field.selectedValues.join();\n        }\n        if (field.filter) {\n            for (const filterKey in field.filter) {\n                const filterValue = field.filter[filterKey];\n                if (filterValue.equals && Array.isArray(filterValue.equals)) {\n                    manifestSection['filterSettings'][key]['fields'][fieldName].filter[filterKey].equals =\n                        filterValue.equals.join();\n                }\n            }\n        }\n    }\n}\n\nexport function exportFilterSettings(manifestSection: object, configPart: v2.FilterSettingsType): void {\n    if (!manifestSection['filterSettings']) {\n        manifestSection['filterSettings'] = {};\n    }\n    const key = 'dateSettings';\n    if (configPart['filterSettings'][key] === undefined) {\n        delete manifestSection['filterSettings'][key];\n    } else {\n        manifestSection['filterSettings'][key] = JSON.parse(JSON.stringify(configPart['filterSettings'][key]));\n        //now convert enum array to joined string\n        if (configPart['filterSettings'][key]['selectedValues']) {\n            manifestSection['filterSettings'][key]['selectedValues'] =\n                configPart['filterSettings'][key]['selectedValues'].join();\n        }\n        if (configPart['filterSettings'][key]['fields']) {\n            exportFilterFields(configPart, key, manifestSection);\n        }\n    }\n}\n\ntype CardClassType = ListCard | AnalyticalCard | StackCard | LinklistCard | TableCard | CustomCard;\n\n@pageLayoutInformation({\n    id: 'sap.suite.ui.generic.template.OverviewPage.view.Details',\n    pageId: 'sap.suite.ui.generic.template.OverviewPage'\n})\nexport class OverviewPage implements v2.OverviewPageConfigV2 {\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    globalFilterModel?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    globalFilterEntityType?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    globalFilterEntitySet?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    containerLayout?: v2.ContainerLayoutType;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    smartVariantRequired?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    showDateInRelativeFormat?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    enableLiveFilter?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    imageSupported?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    considerAnalyticalParameters?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    refreshIntervalInMinutes?: number;\n\n    @syncRule({\n        manifest: { path: (): string => getOVPsettingPath() }\n    })\n    useDateRangeType?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (cardKeys): string => getGlobalSettingsPath(cardKeys)\n        }\n    })\n    @validity({\n        since: '1.80.0'\n    })\n    chartSettings?: v2.ChartSettingsType;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath(),\n            import: importFilterSettings,\n            export: exportFilterSettings\n        }\n    })\n    @validity({\n        since: '1.80.0'\n    })\n    filterSettings?: v2.FilterSettingsType;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    showBasicSearch?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    disableErrorPage?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => getOVPsettingPath()\n        }\n    })\n    bHeaderExpanded?: boolean;\n\n    cards: {\n        [k: string]: CardClassType;\n    };\n}\n", "import type { PageType, PageTypeV4 } from '@sap/ux-specification-types';\nimport type { V2Controls, V2Pages } from '../../v2/types';\nimport type { V4Controls, V4Pages } from '../../v4/types';\n\n/**\n * Common interface that is used for all instantiations of (reflect) metadata classes\n */\nexport interface MetadataInstanceInterface {\n    createInstance(\n        pageType: PageType | PageTypeV4,\n        schemaPropertyName: string,\n        data?: object,\n        controlPropertyValue?: string\n    ): any;\n    createPageInstance(pageType: PageType | PageTypeV4, data?: object): object;\n}\n\nexport abstract class MetadataFactory implements MetadataInstanceInterface {\n    private readonly controls: V2Controls | V4Controls;\n    private readonly pages: V2Pages | V4Pages;\n    private readonly pageTypes: object;\n\n    /**\n     * Sub-classes for V2 and V4 have to pass their specific (reflect) metadata classes:\n     * @param controls - list of imported metadata classes for controls\n     * @param pages - list of imported metadata classes for pages\n     * @param pageTypes - list of supported pages, entry point to further definitions\n     */\n    protected constructor(controls: V2Controls | V4Controls, pages: V2Pages | V4Pages, pageTypes: object) {\n        this.controls = controls;\n        this.pages = pages;\n        this.pageTypes = pageTypes;\n    }\n\n    /**\n     * Creates an instance of a metadata class for a given (complex) property of a JSON schema\n     * @param {PageType} pageType - page type of a Fiori Element\n     * @param schemaPropertyName - name of the complex property in the JSON schema of the page.\n     *                             Used as fallback if no metadataclass can be found by evaluating controlPropertyValue.\n     * @param data - data object from which the values shall be taken over, representing a part of the config\n     * @param controlPropertyValue - value of a controling property that categorizes the complex property, e.g. table type or card template\n     * @returns a class instance comprising the reflect metadata for import or export.\n     *          If no metadata class could be identified, assumption is that no dedicated handler class exists; thus the original data object is returned as is.\n     */\n    createInstance(\n        pageType: PageType | PageTypeV4,\n        schemaPropertyName: string,\n        data?: object,\n        controlPropertyValue?: string\n    ): any {\n        let metadataClass = this.controls[controlPropertyValue]\n            ? this.controls[controlPropertyValue]\n            : this.controls[schemaPropertyName];\n        if (!metadataClass) {\n            metadataClass = this.pageTypes[pageType][controlPropertyValue]\n                ? this.pageTypes[pageType][controlPropertyValue]\n                : this.pageTypes[pageType][schemaPropertyName];\n        }\n        return metadataClass ? Object.assign(new metadataClass(), data) : data;\n    }\n    /**\n     * Creates an instance of a metadata class for a given page\n     * @param {PageType} pageType - page type of a Fiori Element\n     * @param data - data to be taken over (from the config)\n     * @returns a class instance comprising the reflect metadata for import or export\n     */\n    createPageInstance(pageType: PageType | PageTypeV4, data?: object): object {\n        const metadataClass = this.pages[pageType];\n        return Object.assign(new metadataClass(), data);\n    }\n}\n", "import * as controls from './controls';\nimport * as pages from './pages';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport { MetadataFactory } from '../../common/decoration/factory';\nimport { v2, PageType, SAPUI5_FRAGMENT_CLASS, SAPUI5_VIEW_CLASS } from '@sap/ux-specification-types';\n\n/**\n * Note: If the key of the elements corresponds to the name of the definition in schema, you do not have to list it explicitly here.\n * The following tables only comprise entries for elements that do not follow the official pattern (yet)\n */\nconst ALPElements = {\n    //no deviations\n};\n\nconst LRElements = {\n    Table: controls.ResponsiveTable,\n    ResponsiveTableWithMultiSelect: controls.ResponsiveTable,\n    ResponsiveTableWithInlineDelete: controls.ResponsiveTable\n};\n\nconst OVPElements = {\n    [v2.CardSettingsType.listCardSettings]: controls.ListCard,\n    [v2.CardSettingsType.listCardSettingsv4]: controls.ListCard,\n    [v2.CardSettingsType.analyticalCardSettings]: controls.AnalyticalCard,\n    [v2.CardSettingsType.analyticalCardSettingsv4]: controls.AnalyticalCard,\n    [v2.CardSettingsType.stackCardSettings]: controls.StackCard,\n    [v2.CardSettingsType.linkListCardSettings]: controls.LinklistCard,\n    [v2.CardSettingsType.tableCardSettings]: controls.TableCard,\n    [v2.CardSettingsType.tableCardSettingsv4]: controls.TableCard\n};\n\nconst OPElements = {\n    [SAPUI5_VIEW_CLASS]: controls.ObjectPageCustomSectionView,\n    [SAPUI5_FRAGMENT_CLASS]: controls.ObjectPageCustomSectionFragment,\n    Table: controls.ObjectPageResponsiveTable, //default\n    ObjectPageResponsiveTableWithMultiSelect: controls.ObjectPageResponsiveTable,\n    ObjectPageResponsiveTableWithInlineDelete: controls.ObjectPageResponsiveTable\n};\n\nconst pageTypes = {\n    [PageType.AnalyticalListPage]: ALPElements,\n    [PageType.ListReport]: LRElements,\n    [PageType.ObjectPage]: OPElements,\n    [PageType.OverviewPage]: OVPElements\n};\n\n/**\n * V2 specific factory class for creating instances of (reflect) metadata classes\n */\nexport class MetadataInstanceFactoryV2 extends MetadataFactory implements MetadataInstanceInterface {\n    constructor() {\n        super(controls, pages, pageTypes);\n    }\n}\n", "import { transferSettingsOfObject, addFlex, determineTableType, addFragments, convertActionKey } from '../common/index';\nimport type { v2, ImportALPV2Parameters } from '@sap/ux-specification-types';\nimport { DefinitionName, MANIFESTPATH, ManifestSection, PageType, LogSeverity } from '@sap/ux-specification-types';\nimport { log } from '../../../../extensionLogger';\nimport { initI18n } from '../../../../i18n/i18n';\nimport i18next from 'i18next';\nimport { parseChangeString } from '../../../common';\nimport { findAnalyticalListPage, removeEmptySettings } from '../../import/utils';\nimport { MetadataInstanceFactoryV2 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Adds manifest settings to the config.json\n * @param {AnalyticalListPageConfig} analyticalListPageConfig - the configuration to be filled\n * @param {Manifest} manifest - manifest.json of the app\n * @param {object} jsonSchema - the app-specific schema\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {string} pageKey - key of the page in manifest\n * @param {ExtensionLogger} logger - instance for logging exceptions\n */\nfunction addSettings(\n    importParameters: ImportALPV2Parameters,\n    analyticalListPageConfig: v2.AnalyticalListPageConfigV2,\n    factory: MetadataInstanceInterface,\n    pageKey: string\n): void {\n    const tableType = determineTableType(importParameters.manifest, pageKey);\n    const schemaDefinitions = (importParameters.jsonSchema as Definition).definitions as Definition;\n\n    analyticalListPageConfig.table = factory.createInstance(\n        PageType.AnalyticalListPage,\n        `ALP${tableType}`,\n        analyticalListPageConfig.table\n    );\n    transferSettingsOfObject(\n        analyticalListPageConfig.table,\n        importParameters.manifest,\n        schemaDefinitions[`ALP${tableType}<LineItems>`],\n        pageKey,\n        importParameters.logger\n    );\n    // ToolBar:\n    analyticalListPageConfig.table.toolBar = factory.createInstance(\n        PageType.AnalyticalListPage,\n        DefinitionName.ToolBar,\n        {\n            actions: {}\n        }\n    );\n    transferSettingsOfObject(\n        analyticalListPageConfig.table.toolBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.ToolBar],\n        pageKey,\n        importParameters.logger\n    );\n    if (schemaDefinitions[DefinitionName.ActionsLR]) {\n        for (const actionProperty in schemaDefinitions[DefinitionName.ActionsLR].properties) {\n            const actionKey = convertActionKey(actionProperty);\n            analyticalListPageConfig.table.toolBar.actions[actionKey] = factory.createInstance(\n                PageType.AnalyticalListPage,\n                DefinitionName.Action\n            );\n            transferSettingsOfObject(\n                analyticalListPageConfig.table.toolBar.actions[actionKey],\n                importParameters.manifest,\n                schemaDefinitions[DefinitionName.Action],\n                pageKey,\n                importParameters.logger\n            );\n        }\n    }\n    //FilterBar:\n    analyticalListPageConfig.filterBar = factory.createInstance(\n        PageType.AnalyticalListPage,\n        DefinitionName.AnalyticalListPageFilterBar,\n        analyticalListPageConfig.filterBar\n    );\n    transferSettingsOfObject(\n        analyticalListPageConfig.filterBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.AnalyticalListPageFilterBar],\n        pageKey,\n        importParameters.logger\n    );\n    if (schemaDefinitions[DefinitionName.SelectionFields]) {\n        analyticalListPageConfig.filterBar.selectionFields = factory.createInstance(\n            PageType.AnalyticalListPage,\n            DefinitionName.AnalyticalListPageFilterBar,\n            analyticalListPageConfig.filterBar.selectionFields\n        );\n        const schemaSelectionFields = schemaDefinitions[DefinitionName.SelectionFields].properties;\n        for (const selectionProperty in schemaSelectionFields) {\n            const selectionKey = selectionProperty;\n            analyticalListPageConfig.filterBar.selectionFields[selectionKey] = factory.createInstance(\n                PageType.AnalyticalListPage,\n                'SelectionFieldDateSettings'\n            );\n            transferSettingsOfObject(\n                analyticalListPageConfig.filterBar.selectionFields[selectionKey],\n                importParameters.manifest,\n                schemaDefinitions['SelectionFieldDateSettings'],\n                pageKey,\n                importParameters.logger,\n                selectionKey\n            );\n        }\n    }\n\n    //Chart settings:\n    analyticalListPageConfig.chart = factory.createInstance(\n        PageType.AnalyticalListPage,\n        'ChartSettings',\n        analyticalListPageConfig.chart\n    );\n    transferSettingsOfObject(\n        analyticalListPageConfig.chart,\n        importParameters.manifest,\n        schemaDefinitions['ChartSettings'],\n        pageKey,\n        importParameters.logger\n    );\n    //Footer:\n    analyticalListPageConfig.footer = { actions: {} };\n    const footerAction = schemaDefinitions[DefinitionName.FooterActionsLR];\n    if (footerAction) {\n        for (const actionProperty in footerAction.properties) {\n            const actionKey = convertActionKey(actionProperty);\n            analyticalListPageConfig.footer.actions[actionKey] = factory.createInstance(\n                PageType.AnalyticalListPage,\n                DefinitionName.FooterAction\n            );\n            transferSettingsOfObject(\n                analyticalListPageConfig.footer.actions[actionKey],\n                importParameters.manifest,\n                schemaDefinitions[DefinitionName.Action],\n                pageKey,\n                importParameters.logger\n            );\n        }\n    }\n\n    //KPI's:\n    analyticalListPageConfig.keyPerformanceIndicators = {};\n    const kpiCards =\n        importParameters.manifest[ManifestSection.generic]['pages'][pageKey].component.settings\n            .keyPerformanceIndicators;\n    if (kpiCards) {\n        Object.keys(kpiCards).forEach((kpiKey) => {\n            analyticalListPageConfig.keyPerformanceIndicators[kpiKey] = factory.createInstance(\n                PageType.AnalyticalListPage,\n                'KPISettings'\n            );\n            analyticalListPageConfig.keyPerformanceIndicators = factory.createInstance(\n                PageType.AnalyticalListPage,\n                'KPISettings',\n                analyticalListPageConfig.keyPerformanceIndicators\n            );\n            transferSettingsOfObject(\n                analyticalListPageConfig.keyPerformanceIndicators[kpiKey],\n                importParameters.manifest,\n                schemaDefinitions['KPISettings'],\n                pageKey,\n                importParameters.logger,\n                kpiKey\n            );\n        });\n    }\n}\n\n/**\n * Creates the configuration file content for an analytical list page V2\n * @param {ImportALPV2Parameters} importParameters  - object comprising all input data\n *\n * @returns {AnalyticalListPageConfig} - the configuration (JSON)\n */\nexport function createAnalyticalListPageConfig(\n    importParameters: ImportALPV2Parameters\n): v2.AnalyticalListPageConfigV2 | undefined {\n    // Initialize i18next\n    initI18n();\n\n    if (!importParameters.manifest[ManifestSection.generic]) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOFE'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    const v2Pages = importParameters.manifest[ManifestSection.generic].pages as v2.SapUiAppPagesV2;\n    if (!v2Pages) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOPAGES', { appId: importParameters.manifest['sap.app']['id'] }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    const factory = new Factory();\n    //Instantiate Page\n    const config = factory.createPageInstance(PageType.AnalyticalListPage);\n\n    const pageKeys: string[] = [];\n    const v2Page = findAnalyticalListPage(\n        importParameters.manifest[ManifestSection.generic].pages,\n        pageKeys,\n        importParameters.logger\n    );\n    if (!v2Page) {\n        return;\n    }\n    addSettings(importParameters, config, factory, pageKeys[0]);\n    importParameters.flex.forEach((change) => {\n        if (parseChangeString(change)) {\n            addFlex(config, change, importParameters.jsonSchema);\n        }\n    });\n    addFragments(config, importParameters.manifest, v2Page, PageType.AnalyticalListPage, importParameters.fragments);\n    removeEmptySettings(config);\n    return config;\n}\n", "import type {\n    SapUiGenericAppPageSettings as Settings,\n    ChangeDefinition,\n    DeprecatedProperties,\n    ExtensionLogger,\n    ImportObjectPageV2Parameters,\n    ObjectPageSectionData,\n    SyncRule\n} from '@sap/ux-specification-types';\nimport {\n    ControlType,\n    LogSeverity,\n    v2,\n    ManifestSection,\n    ActionTitlePrefix,\n    PageType,\n    DefinitionName,\n    MANIFESTPATH,\n    PropertyName,\n    SchemaTag,\n    UIVOCABULARYALPHADOT,\n    VOCWITHSLASH\n} from '@sap/ux-specification-types';\nimport type { FlexChangesForTransfer, FlexForTransfer } from '../controls/table';\nimport { addFlexForTable } from '../controls/table';\nimport { log } from '../../../../extensionLogger';\nimport { findObjectPageV2, findCustomSectionExtensions } from '../utils';\nimport type {} from '../../../common';\nimport {\n    DEFINITION_LINK_PREFIX,\n    convertActionKeyToStableId,\n    getTargetFromCustomColumnRef,\n    getReflectMetadata,\n    getSectionTitle,\n    getTextForDeprecated,\n    parseChangeString\n} from '../../../common';\nimport { ensureManifestSectionByPathV2 } from '../../export/manifest';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../../i18n/i18n';\nimport { MetadataInstanceFactoryV2 as Factory } from '../../export/factory';\nimport type { ObjectPageV2ConfigParameters, SectionPartProperties } from '../../types';\nimport { ActionTypeV2, SectionTypeV2 } from '../../types';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { convertSelector, addFragments, convertActionKey } from '../common';\nimport type { Definition } from 'typescript-json-schema';\n\n// Comprises list of flexChanges that do not require a facet id\nconst SupportedFlexChangesWithoutFacetId = [ControlType.Avatar, ControlType.ObjectPageLayout, ControlType.DynamicPage];\n\n/**\n * Determines Facet ID from single string selector Id\n * @param {string} selectorId Selector ID\n * @returns {string} FacetID\n */\nfunction getSingleSelectorIdPart(selectorIdParts: string[], facetID: string) {\n    const lastIdParts = selectorIdParts[0].split('-');\n    const id = lastIdParts[lastIdParts.length - 1];\n    if (selectorIdParts[0].indexOf('::action::') >= 0 || selectorIdParts[0].startsWith('action::')) {\n        // Object Page ToolBar Actions\n        facetID =\n            lastIdParts[0].split('::action::')[0] ||\n            lastIdParts[0].split(`${UIAnnotationTerms.LineItem}::`)[1].split('::')[0];\n        facetID = `${ActionTitlePrefix}${facetID}`;\n    } else if (\n        selectorIdParts[0].indexOf(UIAnnotationTerms.LineItem) >= 0 ||\n        selectorIdParts[0].indexOf('UI.LineItem') >= 0 ||\n        selectorIdParts[0].indexOf('::Table') >= 0\n    ) {\n        facetID = lastIdParts[0].split('::Table')[0].split('::responsiveTable')[0];\n    } else {\n        const idParts = id.split('::');\n        if (idParts.length > 1) {\n            facetID = idParts[0];\n        } else if (lastIdParts[0].indexOf('::') > -1) {\n            facetID = lastIdParts[0].split('::')[0];\n        }\n    }\n    return facetID;\n}\n\n/**\n * Determines Facet ID of flex change\n * @param {string} selectorId Control ID of flex change\n * @returns {string} FacetID\n */\nfunction getFacetID(selectorId: string): string {\n    let facetID: string;\n    const selectorIdParts: string[] = selectorId.split(':::');\n    if (selectorIdParts.length === 1) {\n        facetID = getSingleSelectorIdPart(selectorIdParts, facetID);\n    } else if (selectorId.indexOf('sSmartTableId') >= 0) {\n        for (const element of selectorIdParts) {\n            if (element.startsWith('sSmartTableId')) {\n                facetID = element\n                    .split('sSmartTableId::')[1]\n                    .split('::Table')[0]\n                    .split('/responsiveTable')[0]\n                    .replace(`::${UIAnnotationTerms.LineItem}`, `/@${UIAnnotationTerms.LineItem}`);\n                break;\n            }\n        }\n    } else {\n        facetID = selectorIdParts[0];\n    }\n    return facetID;\n}\n\n/**\n * Prepares the list of flex changes\n * @param change - the flex change (UI Adaptation)\n * @returns {FlexChangesForTransfer} - list of prepared flex changes\n */\nfunction prepareFlexChanges(changes: string[], entitySet: string, logger?: ExtensionLogger): FlexChangesForTransfer {\n    const result: FlexChangesForTransfer = {};\n    const complexIdMatch = /.+DataField.+:::sSmartTableId::.+/;\n    changes.forEach((changeString) => {\n        try {\n            const change = parseChangeString(changeString) as ChangeDefinition;\n            if (\n                change &&\n                change.controlId?.includes(v2.FE_TEMPLATE_V2_OBJECT_PAGE) &&\n                change.controlId?.includes(entitySet)\n            ) {\n                let selectorId = change.controlId.split('--')[1].replace(/:3a:3a/g, '::');\n                if (complexIdMatch.exec(selectorId) !== null) {\n                    selectorId = selectorId.split('template:::TableColumn:::')[1];\n                }\n                const facetID: string = getFacetID(selectorId);\n                selectorId = convertSelector(selectorId)\n                    .replace(/:3a:3a/g, '::')\n                    .replace(/\\/@com.sap.vocabularies/g, '::com.sap.vocabularies');\n                result[`${selectorId}::${change.content.property}`] = {\n                    controlId: selectorId,\n                    propertyId: change.content.property,\n                    facetId: facetID,\n                    newValue:\n                        change.content.newBinding !== undefined ? change.content.newBinding : change.content.newValue,\n                    controlType: change.controlType,\n                    creation: change.creation\n                };\n            }\n        } catch (error) {\n            log(\n                logger,\n                {\n                    severity: LogSeverity.Error,\n                    message: i18next.t('FLEXERROR')\n                },\n                ...error\n            );\n        }\n    });\n    const sortedList = Object.entries(result).sort(\n        (a: [string, any], b: [string, any]) => a[1].creation - b[1].creation\n    );\n    return sortedList.reduce((accum, [k, v]) => {\n        accum[k] = v;\n        return accum;\n    }, {});\n}\n\n/**\n * Returns the type of a given section\n * @param schemaSection - current section\n * @returns {SectionTypeV2} - type of section, differentiated by level (Sub/Section)\n */\nconst getSectionType = (schemaSection: object): SectionTypeV2 => {\n    let reference;\n    if (schemaSection['$ref']) {\n        reference = schemaSection['$ref'].includes('<') ? schemaSection['$ref'].split('<')[0] : schemaSection['$ref'];\n        return reference.replace(DEFINITION_LINK_PREFIX, '');\n    } else if (schemaSection['properties']?.['subsections']?.['$ref']) {\n        reference = schemaSection['properties']['subsections']['$ref'];\n        reference = reference.includes('<') ? reference.split('<')[0] : reference;\n        return reference.replace(DEFINITION_LINK_PREFIX, '');\n    } else if (schemaSection['properties']?.['subsections']) {\n        return SectionTypeV2.SubSection;\n    }\n};\n\n/**\n * Import of flex changes of a table to the config JSON of OP\n * @param flexChanges - list of flex changes (pre-processed by prepareFlexChanges)\n * @param propertyKey - key of the current property in the app schema\n * @param configPart - part of the configuration to be filled\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param sectionTitle - title of the section (optional)\n * @param sectionId - ID of the given section (optional)\n */\nfunction importFlexChangesOfTable(\n    flexChanges: FlexChangesForTransfer,\n    propertyKey: string,\n    configPart: { [key: string]: any },\n    importParameters: ImportObjectPageV2Parameters,\n    sectionTitle: string,\n    sectionId: string\n) {\n    let facetIds;\n    if (sectionTitle) {\n        facetIds = [sectionTitle.replace(/@/g, '')];\n    } else {\n        facetIds = [sectionId.replace(/@/g, ''), sectionId?.replace(/::@com.sap.vocabularies/g, VOCWITHSLASH)];\n    }\n\n    for (const selector in flexChanges) {\n        const flexChange = flexChanges[selector];\n        const propertyIdMatch = flexChange.propertyId === propertyKey;\n        const isTableColumn = propertyKey === 'columns' && flexChange.controlType === ControlType.TableColumn;\n        if ((propertyIdMatch || isTableColumn) && facetIds.indexOf(flexChange?.facetId) > -1) {\n            addFlexForTable(configPart, flexChange, importParameters.jsonSchema);\n        }\n    }\n}\n\n/**\n * RegEx check of the control Id and/or the section Id against the selector of a flex change\n * @param schemaDefinition - current section of the app specific schema\n * @param flexChange - flex change\n * @param controlIdChecker - RegEx for the controlId\n * @param selectionIdChecker - RegEx for the selectionId\n * @param sectionId - title of the section (optional)\n * @param controlId - ID of the given control, for e.g. GroupElement, Action (optional)\n * @returns the result of all checks\n */\nfunction matchSelector(\n    schemaDefinition: Definition,\n    flexChange: FlexForTransfer,\n    controlIdChecker: RegExp,\n    selectionIdChecker: RegExp,\n    sectionId?: string,\n    controlId?: string\n): boolean {\n    let idMatch = false,\n        controlIdMatch = false;\n    const idElementChecker = (arr, target) => target.every((v) => arr.includes(v));\n\n    if (controlId) {\n        idMatch = controlIdMatch = controlIdChecker.test(flexChange.controlId);\n        if (sectionId) {\n            idMatch = controlIdMatch && selectionIdChecker.test(flexChange.controlId);\n        }\n    } else if (sectionId) {\n        idMatch = selectionIdChecker.test(flexChange.controlId);\n    }\n    const controlIdParts = flexChange.controlId.split('::');\n\n    return (\n        (flexChange.controlType === ControlType.GroupElement && controlIdMatch) ||\n        (flexChange.facetId?.includes(ActionTitlePrefix) && !sectionId && idMatch) ||\n        (sectionId && idElementChecker(controlIdParts, sectionId.split('::')) && idMatch) ||\n        (schemaDefinition.title && idElementChecker(controlIdParts, schemaDefinition.title.split('::'))) ||\n        (!flexChange.facetId && SupportedFlexChangesWithoutFacetId.includes(flexChange.controlType as ControlType))\n    );\n}\n\n/**\n * Import of (regular) flex changes to the config JSON of OP\n * @param schemaDefinition - current section of the app specific schema\n * @param configPart - part of the configuration to be filled\n * @param flexChanges - list of flex changes (pre-processed by prepareFlexChanges)\n * @param propertyKey - key of the current property in the app schema\n * @param sectionId - title of the section (optional)\n * @param elementId - stable ID part of the given element, for e.g. GroupElement, Action (optional)\n */\nfunction importFlexChanges(\n    schemaDefinition: Definition,\n    configPart: { [key: string]: any },\n    flexChanges: FlexChangesForTransfer,\n    propertyKey: string,\n    sectionId?: string,\n    elementId?: string\n) {\n    const controlIdChecker = new RegExp(`.*${elementId}`);\n    const selectionIdChecker = new RegExp(`.*${sectionId}`);\n\n    for (const selector in flexChanges) {\n        const flexChange = flexChanges[selector];\n        //Property match?\n        if (flexChange.propertyId !== propertyKey) {\n            continue;\n        }\n        //Control type match?\n        if (flexChange.controlType !== schemaDefinition.properties[flexChange.propertyId]?.[SchemaTag.controlType]) {\n            continue;\n        }\n        const match = matchSelector(\n            schemaDefinition,\n            flexChange,\n            controlIdChecker,\n            selectionIdChecker,\n            sectionId,\n            elementId\n        );\n        if (match) {\n            configPart[propertyKey] = flexChange.newValue;\n        }\n    }\n}\n\n/**\n * Checks for deprecated properties and writes them to the log\n * @param manifestSection - given section in the manifest\n * @param deprecatedProperties - list of deperecated properties\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param manifestPath - manifest path, as calcualted by the sync rule\n */\nfunction checkDeprecatedProperties(\n    manifestSection: object,\n    deprecatedProperties: DeprecatedProperties,\n    importParameters: ImportObjectPageV2Parameters,\n    manifestPath: string\n) {\n    if (manifestSection && deprecatedProperties) {\n        for (const key in manifestSection) {\n            const deprecated = deprecatedProperties[key];\n            if (deprecated) {\n                log(importParameters.logger, {\n                    severity: LogSeverity.Warning,\n                    message: getTextForDeprecated(key, deprecated),\n                    location: {\n                        path: 'webapp/manifest.json/',\n                        range: manifestPath.split('/')\n                    }\n                });\n                delete deprecatedProperties[key];\n            }\n        }\n    }\n}\n\n/**\n * Imports manifest settings to the object page config\n * @param syncRule - sync rule for accessing the reflect-metadata\n * @param pageKeys - list of page keys (comprises the one entry describing the given page)\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param configPart - part of the configuration to be filled\n * @param propertyKey  - key of the current property of the schema definition\n * @param deprecatedProperties - list od deperecated properties\n * @param sectionId - ID of the given section (optional)\n * @param sectionTitle - title of the section (optional)\n */\nfunction importManifestSetting(\n    syncRule: SyncRule,\n    pageKeys: string[],\n    importParameters: ImportObjectPageV2Parameters,\n    configPart: { [key: string]: any },\n    propertyKey: string,\n    deprecatedProperties: DeprecatedProperties,\n    sectionPart?: SectionPartProperties\n) {\n    const sectionIdInManifest = sectionPart?.id\n        ? sectionPart.id.replace(/\\/@/g, '::').replace(/@com.sap/g, 'com.sap')\n        : undefined;\n    let manifestPath: string;\n    let manifestSection: object;\n    if (sectionPart?.title) {\n        manifestPath = syncRule.manifest.path(pageKeys, {}, sectionPart.title);\n        manifestSection = ensureManifestSectionByPathV2(importParameters.manifest, manifestPath);\n        if (Object.values(manifestSection).length === 0) {\n            manifestPath = syncRule.manifest.path(pageKeys, {}, sectionIdInManifest);\n            manifestSection = ensureManifestSectionByPathV2(importParameters.manifest, manifestPath);\n        }\n    } else {\n        manifestPath = syncRule.manifest.path(pageKeys, {}, sectionIdInManifest);\n        manifestSection = ensureManifestSectionByPathV2(importParameters.manifest, manifestPath);\n    }\n    const importHandler = syncRule.manifest.import;\n    if (importHandler && typeof importHandler === 'function') {\n        const value = importHandler(manifestSection, sectionPart?.id);\n        if (value !== undefined) {\n            configPart[propertyKey] = value;\n        }\n    } else {\n        const manifestKey = syncRule.manifest.key || propertyKey;\n        if (manifestKey in manifestSection) {\n            configPart[propertyKey] = manifestSection[manifestKey];\n        }\n    }\n    // Check for deprecated properties.\n    checkDeprecatedProperties(manifestSection, deprecatedProperties, importParameters, manifestPath);\n    return manifestSection;\n}\n\n/**\n * Transfers settings from manifest and flexChanges to object page config\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param configPart - part of the configuration to be filled\n * @param schemaDefinition - current section of the app specific schema\n * @param configParameters - comprises page keys and flex changes\n * @param sectionPart - structure comprising the section information\n * @param elementId - stable ID part of the given element (action, column, ...) (optional)\n */\nfunction transferSettingsAndFlexChanges(\n    importParameters: ImportObjectPageV2Parameters,\n    configPart: { [key: string]: any },\n    schemaDefinition: Definition,\n    configParameters: ObjectPageV2ConfigParameters,\n    sectionPart?: SectionPartProperties,\n    elementId?: string\n): void {\n    if (!schemaDefinition) {\n        return;\n    }\n    const deprecatedProperties: DeprecatedProperties = configPart?.getDeprecated ? configPart.getDeprecated() : {};\n    for (const propertyKey in schemaDefinition.properties || schemaDefinition) {\n        const syncRule = getReflectMetadata(configPart, propertyKey);\n        if (propertyKey === 'columns' || syncRule?.flex) {\n            if (\n                sectionPart?.type?.startsWith('ObjectPageSectionTableV2') ||\n                sectionPart?.type?.startsWith('ObjectPageSubSectionTableV2')\n            ) {\n                importFlexChangesOfTable(\n                    configParameters.flexChanges,\n                    propertyKey,\n                    configPart,\n                    importParameters,\n                    sectionPart.title,\n                    sectionPart.id\n                );\n            } else {\n                const facetId = sectionPart?.title || sectionPart?.id;\n                importFlexChanges(\n                    schemaDefinition,\n                    configPart,\n                    configParameters.flexChanges,\n                    propertyKey,\n                    facetId,\n                    elementId\n                );\n            }\n        } else if (syncRule?.manifest) {\n            importManifestSetting(\n                syncRule,\n                configParameters.pageKeys,\n                importParameters,\n                configPart,\n                propertyKey,\n                deprecatedProperties,\n                sectionPart\n            );\n        }\n    }\n}\n\n/**\n *\n * @param actionType - type of action\n * @param configActionId - id of action in config\n * @param {ActionTypeV2|string} importTypeId - type of action that was be initiated\n * @returns {string} actionId - to be used for import of flex changes\n */\nfunction getActionId(actionType: string, configActionId: string, importTypeId: string, facetId: string): string {\n    let actionId = convertActionKeyToStableId(configActionId);\n    if (actionType === ActionTypeV2.Form) {\n        actionId = `action::${actionId}::${facetId}::${importTypeId}`;\n    } else if (actionType === ActionTypeV2.OPFooter) {\n        actionId = `action::${actionId}::Determining`;\n    } else if (actionType === ActionTypeV2.OPToolBar) {\n        actionId = actionId.includes('sAction::')\n            ? `action::${actionId.split('sAction::')[1]}`\n            : `action::${actionId.replace(':2f', '::')}`;\n    }\n    return actionId.replace(/@/g, '');\n}\n\n/**\n *  Fills the action of the configuration\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {object} actionProperties - current properties' list (of action)\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n * @param {ActionTypeV2|string} importTypeId - type of action that should be initiated\n */\nfunction fillActions(\n    importParameters: ImportObjectPageV2Parameters,\n    actionProperties: object,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters,\n    importTypeId: ActionTypeV2 | string,\n    facetId?: string\n): void {\n    configPart[PropertyName.actions] = {};\n    const actionType = importTypeId.split('::').pop();\n    if (configParameters.flexChanges && Object.keys(configParameters.flexChanges).length > 0) {\n        const sectionPart: SectionPartProperties = {};\n        if (facetId) {\n            sectionPart.id = facetId;\n        }\n        for (const actionProperty in actionProperties) {\n            const configActionId = convertActionKey(actionProperty);\n            const actionId = getActionId(actionType, configActionId, importTypeId, facetId);\n            if (actionId) {\n                configPart[PropertyName.actions][configActionId] = configParameters.factory.createInstance(\n                    PageType.ObjectPage,\n                    actionType\n                );\n                transferSettingsAndFlexChanges(\n                    importParameters,\n                    configPart[PropertyName.actions][configActionId],\n                    (importParameters.jsonSchema as Definition).definitions[actionType] as Definition,\n                    configParameters,\n                    sectionPart,\n                    actionId\n                );\n            }\n            if (\n                configPart[PropertyName.actions]?.[configActionId] &&\n                Object.keys(configPart[PropertyName.actions][configActionId]).length === 0\n            ) {\n                delete configPart[PropertyName.actions][configActionId];\n            }\n        }\n    }\n    if (Object.keys(configPart[PropertyName.actions]).length === 0) {\n        delete configPart[PropertyName.actions];\n    }\n}\n\n/**\n *  Fills the fields of an object page form\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of form section\n * @param fieldProperties - current properties' list (of fields)\n * @param configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillFields(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    fieldProperties: object,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n): void {\n    let fieldId: string;\n    configPart[sectionPart.id]['form']['fields'] = {};\n    for (const fieldProperty in fieldProperties) {\n        fieldId = `${fieldProperty}::GroupElement`;\n        configPart[sectionPart.id]['form']['fields'][fieldProperty] = configParameters.factory.createInstance(\n            PageType.ObjectPage,\n            'Field'\n        );\n        const elementId = sectionPart.title.includes(UIVOCABULARYALPHADOT)\n            ? `${sectionPart.id.replace(/@/g, '')}::${fieldId}`\n            : `${sectionPart.title}::${fieldId}`;\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id]['form']['fields'][fieldProperty],\n            (importParameters.jsonSchema as Definition).definitions[DefinitionName.Field] as Definition,\n            configParameters,\n            {},\n            elementId\n        );\n        if (Object.keys(configPart[sectionPart.id]['form']['fields'][fieldProperty]).length === 0) {\n            delete configPart[sectionPart.id]['form']['fields'][fieldProperty];\n        }\n    }\n    if (Object.keys(configPart[sectionPart.id]['form']['fields']).length === 0) {\n        delete configPart[sectionPart.id]['form']['fields'];\n    }\n}\n\n/**\n * Adjusts the app schema by choosing the right table definition, depending on the table type\n * @param tableType - the type of the given table\n * @param {SectionPartProperties} sectionPart - current properties' list\n * @param schemaDefinitions - definitions' section of the app schema\n * @returns the right schema definition for the given table\n */\nfunction prepareTableSchema(\n    tableType: string,\n    sectionPart: SectionPartProperties,\n    schemaDefinitions: Definition\n): Definition {\n    let tableSchema: object;\n    if (tableType === 'TreeTable' || tableType === 'AnalyticalTable' || tableType === 'GridTable') {\n        tableSchema = schemaDefinitions[`ObjectPage${tableType}<${sectionPart.id}>`] as Definition;\n    } else if (\n        schemaDefinitions[`ObjectPageResponsiveTableWithMultiSelect<${sectionPart.id}>`] &&\n        schemaDefinitions[`ObjectPageResponsiveTableWithInlineDelete<${sectionPart.id}>`]\n    ) {\n        tableSchema = JSON.parse(\n            JSON.stringify(schemaDefinitions[`ObjectPageResponsiveTableWithMultiSelect<${sectionPart.id}>`])\n        );\n        tableSchema['properties'] = {\n            ...tableSchema['properties'],\n            ...schemaDefinitions[`ObjectPageResponsiveTableWithInlineDelete<${sectionPart.id}>`]['properties']\n        };\n    }\n    return tableSchema;\n}\n\n/**\n *  Fills the table section of the object page config\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {SectionPartProperties} sectionPart - current properties' list\n * @param {Settings} manifestSettings - object page settings section of the manifest\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillTableInConfig(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    manifestSettings: Settings,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n): void {\n    const manifestKey = sectionPart.title || sectionPart.id.replace('@com.sap', 'com.sap');\n    const manifestSection = manifestSettings && manifestSettings.sections && manifestSettings.sections[manifestKey];\n\n    if (manifestSection || configParameters.flexChanges) {\n        const tableType: string = manifestSection?.tableSettings?.type || 'ResponsiveTable';\n\n        //Instantiate metadata\n        const OPtable = configParameters.factory.createInstance(PageType.ObjectPage, `ObjectPage${tableType}`, {\n            toolBar: {}\n        });\n        configPart[sectionPart.id] = configParameters.factory.createInstance(PageType.ObjectPage, sectionPart.type, {\n            table: {}\n        });\n        configPart[sectionPart.id][PropertyName.table] = OPtable;\n\n        const schemaDefinitions = (importParameters.jsonSchema as Definition).definitions;\n\n        const tableSchema = prepareTableSchema(tableType, sectionPart, schemaDefinitions);\n        //Transfer settings of (sub)section\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            { title: sectionPart.title }\n        );\n        //Transfer settings of table\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id][PropertyName.table],\n            tableSchema,\n            configParameters,\n            sectionPart\n        );\n        //Transfer settings of table toolbar actions\n        const toolBarActions = JSON.parse(JSON.stringify(schemaDefinitions))[\n            `Actions<${sectionPart.id}>`\n        ] as Definition;\n        if (toolBarActions?.properties) {\n            const facetId = sectionPart?.title\n                ? sectionPart.title.replace(/@/g, '::').replace(/::com/g, 'com')\n                : sectionPart?.id?.replace(/@/g, '::').replace(/::com/g, 'com');\n            fillActions(\n                importParameters,\n                toolBarActions.properties,\n                configPart[sectionPart.id][PropertyName.table]['toolBar'],\n                configParameters,\n                ActionTypeV2.OPToolBar,\n                facetId\n            );\n        }\n        if (Object.keys(configPart[sectionPart.id][PropertyName.table]['toolBar']).length === 0) {\n            delete configPart[sectionPart.id][PropertyName.table]['toolBar'];\n        }\n    }\n}\n\n/**\n * Fills custom columns in a V2 object page config JSON\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {string} escapedSectionId - escaped version of the section ID\n * @param {string} sectionTitle - title of current section, if available\n * @param {object} configPart - the given part of the object page config\n * @param {SapUiAppPageV2} v2Page - v2 page from manifest.\n */\nfunction fillCustomColumnsInConfig(\n    importParameters: ImportObjectPageV2Parameters,\n    escapedSectionId: string,\n    configPart: object,\n    v2Page: v2.SapUiAppPageV2\n) {\n    const customColumnSchemaProp = (\n        (importParameters.jsonSchema as Definition).definitions[escapedSectionId] as Definition\n    ).properties.custom as Definition;\n    const customColumnTarget = customColumnSchemaProp\n        ? getTargetFromCustomColumnRef(customColumnSchemaProp.$ref)\n        : undefined;\n    if (customColumnTarget) {\n        const objectPageSectionData: ObjectPageSectionData = {\n            key: escapedSectionId.replace('@', ''),\n            target: customColumnTarget\n        };\n        addFragments(\n            configPart[escapedSectionId],\n            importParameters.manifest,\n            v2Page,\n            PageType.ObjectPage,\n            importParameters.fragments,\n            objectPageSectionData\n        );\n    }\n}\n\n/**\n *  Fills the sections and subsections of the object page config (recursive function)\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of chart section\n * @param {Settings} manifestSettings - object page settings section of the manifest\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillChartSection(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    manifestSettings: Settings,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n) {\n    const manifestKey = sectionPart.id.replace('@com.sap', 'com.sap');\n    const manifestSection = manifestSettings && manifestSettings.sections && manifestSettings.sections[manifestKey];\n    configPart[sectionPart.id] = configParameters.factory.createInstance(PageType.ObjectPage, sectionPart.type, {\n        chart: {}\n    });\n    configPart[sectionPart.id][PropertyName.chart] = configParameters.factory.createInstance(\n        PageType.ObjectPage,\n        'ObjectPageChart'\n    );\n    if (manifestSection || configParameters.flexChanges) {\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            { title: sectionPart.title }\n        );\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id][PropertyName.chart],\n            (importParameters.jsonSchema as Definition).definitions[DefinitionName.ObjectPageChart] as Definition,\n            configParameters,\n            sectionPart\n        );\n    }\n}\n\n/**\n * Fills the form section of the object page config\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of form section\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillFormSection(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n) {\n    const formId = sectionPart.schema['properties']['form']['$ref'].split('SectionForm')[1];\n    configPart[sectionPart.id] = configParameters.factory.createInstance(PageType.ObjectPage, sectionPart.type, {\n        form: {}\n    });\n    if (configParameters.flexChanges) {\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            { title: sectionPart.title }\n        );\n    }\n    const formActions = (importParameters.jsonSchema as Definition).definitions[\n        `SectionActions${formId}`\n    ] as Definition;\n    const facetId = sectionPart?.title\n        ? sectionPart.title.replace(/@/g, '::').replace(/::com/g, 'com')\n        : sectionPart?.id?.replace(/@/g, '::').replace(/::com/g, 'com');\n    if (formActions?.properties) {\n        fillActions(\n            importParameters,\n            formActions.properties,\n            configPart[sectionPart.id]['form'],\n            configParameters,\n            ActionTypeV2.Form,\n            facetId\n        );\n    }\n    const formFields = (importParameters.jsonSchema as Definition).definitions[`SectionFields${formId}`] as Definition;\n    if (formFields?.properties) {\n        fillFields(importParameters, sectionPart, formFields.properties, configPart, configParameters);\n    }\n    if (Object.keys(configPart[sectionPart.id]['form']).length === 0) {\n        delete configPart[sectionPart.id]['form'];\n    }\n    if (Object.keys(configPart[sectionPart.id]).length === 0) {\n        delete configPart[sectionPart.id];\n    }\n}\n\n/**\n *  Fills the subsection of the object page config\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {sectionPartProperties} sectionPart - current properties' list of subsection\n * @param {Settings} manifestSettings - object page settings section of the manifest\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig\n */\nfunction fillSubSection(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionPart: SectionPartProperties,\n    manifestSettings: Settings,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n) {\n    configPart[sectionPart.id] = configParameters.factory.createInstance(PageType.ObjectPage, sectionPart.type, {\n        subsections: {}\n    });\n    if (configParameters.flexChanges) {\n        transferSettingsAndFlexChanges(\n            importParameters,\n            configPart[sectionPart.id],\n            sectionPart.schema,\n            configParameters,\n            sectionPart\n        );\n    }\n    let currentSchemaSection;\n    const schemaProperties = sectionPart.schema.properties;\n    if ((schemaProperties?.subsections as Definition)?.properties) {\n        currentSchemaSection = (schemaProperties.subsections as Definition).properties;\n    } else {\n        currentSchemaSection = schemaProperties;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    fillSectionsInConfig(\n        importParameters,\n        currentSchemaSection,\n        manifestSettings,\n        configPart[sectionPart.id]['subsections'],\n        configParameters\n    );\n    if (Object.keys(configPart[sectionPart.id]['subsections']).length < 1) {\n        delete configPart[sectionPart.id]['subsections'];\n    }\n}\n\n/**\n * Fills the sections and subsections of the object page config (recursive function)\n * @param {ImportObjectPageV2Parameters} importParameters - object comprising all input data\n * @param {object} sectionProperties - current properties' list (of sections or subsections)\n * @param {Settings} manifestSettings - object page settings section of the manifest\n * @param {object} configPart - the given part of the object page config\n * @param {ObjectPageV2ConfigParameters} configParameters - container for factory, pageKeys, flexChanges, v2Page, ObjectPageConfig.\n */\nfunction fillSectionsInConfig(\n    importParameters: ImportObjectPageV2Parameters,\n    sectionProperties: object,\n    manifestSettings: Settings,\n    configPart: object,\n    configParameters: ObjectPageV2ConfigParameters\n): void {\n    const appSchemaDefinitions = (importParameters.jsonSchema as Definition).definitions;\n    for (const sectionId in sectionProperties) {\n        const escapedSectionId = sectionId.replace(/\\/@/g, '::');\n        const sectionPart: SectionPartProperties = {\n            id: escapedSectionId,\n            type: getSectionType(sectionProperties[sectionId]),\n            schema: sectionProperties[sectionId],\n            title: getSectionTitle(sectionProperties[sectionId], importParameters.jsonSchema)\n        };\n        if (sectionPart.schema['$ref'] && sectionPart.type) {\n            switch (sectionPart.type) {\n                case SectionTypeV2.SectionTable:\n                case SectionTypeV2.SubSectionTable: {\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillTableInConfig(importParameters, sectionPart, manifestSettings, configPart, configParameters);\n                    // Custom column ref\n                    fillCustomColumnsInConfig(importParameters, escapedSectionId, configPart, configParameters.v2Page);\n                    break;\n                }\n                case SectionTypeV2.SectionChart:\n                case SectionTypeV2.SubSectionChart: {\n                    // Section without subsections\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillChartSection(importParameters, sectionPart, manifestSettings, configPart, configParameters);\n                    break;\n                }\n                case SectionTypeV2.SectionForm:\n                case SectionTypeV2.SubSectionForm: {\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillFormSection(importParameters, sectionPart, configPart, configParameters);\n                    break;\n                }\n                case SectionTypeV2.Section:\n                case SectionTypeV2.SectionAddress:\n                case SectionTypeV2.SubSectionAddress:\n                case SectionTypeV2.SectionContact:\n                case SectionTypeV2.SubSectionContact:\n                case SectionTypeV2.SubSection: {\n                    // Section with subsections\n                    sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n                    fillSubSection(importParameters, sectionPart, manifestSettings, configPart, configParameters);\n                    break;\n                }\n            }\n        } else if (sectionPart.schema.properties?.['subsections']) {\n            sectionPart.schema = appSchemaDefinitions[`${sectionPart.type}<${sectionId}>`] as Definition;\n            fillSubSection(importParameters, sectionPart, manifestSettings, configPart, configParameters);\n        }\n    }\n}\n\n/**\n * Fill properties of object page confg based on manifest settings\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n * @param pageKeys - list of page keys (comprises the one entry describing the given page)\n * @param flexChangesForTransfer - list of flex changes (pre-processed by prepareFlexChanges)\n * @param v2Page - page definition in manifest.json\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @returns {ObjectPageConfig} - the object page configuration (JSON)\n */\nfunction fillConfig(\n    importParameters: ImportObjectPageV2Parameters,\n    configParameters: ObjectPageV2ConfigParameters\n): v2.ObjectPageConfigV2 {\n    const objectPageConfig: v2.ObjectPageConfigV2 = configParameters.factory.createPageInstance(PageType.ObjectPage);\n\n    const manifestSettings = configParameters.v2Page.component.settings;\n    // Transfer page information\n    transferSettingsAndFlexChanges(\n        importParameters,\n        objectPageConfig,\n        importParameters.jsonSchema['properties'],\n        configParameters\n    );\n\n    // Transfer header information\n    objectPageConfig.header = configParameters.factory.createInstance(\n        PageType.ObjectPage,\n        DefinitionName.ObjectPageHeader\n    );\n    const definitions = (importParameters.jsonSchema as Definition).definitions;\n    const schemaDefinition = definitions[DefinitionName.ObjectPageHeader]\n        ? definitions[DefinitionName.ObjectPageHeader]\n        : definitions['ObjectPageHeader<GenericActions>'];\n    transferSettingsAndFlexChanges(\n        importParameters,\n        objectPageConfig.header,\n        schemaDefinition as Definition,\n        configParameters\n    );\n    const headerAction = definitions[DefinitionName.HeaderActions] as Definition;\n    if (headerAction) {\n        fillActions(\n            importParameters,\n            headerAction.properties,\n            objectPageConfig.header,\n            configParameters,\n            ActionTypeV2.Header\n        );\n    }\n    objectPageConfig.footer = {};\n    const footerAction = definitions[DefinitionName.FooterActions] as Definition;\n    if (footerAction) {\n        fillActions(\n            importParameters,\n            footerAction.properties,\n            objectPageConfig.footer,\n            configParameters,\n            ActionTypeV2.OPFooter\n        );\n    }\n\n    // Transfer Layout information\n    objectPageConfig.layout = configParameters.factory.createInstance(PageType.ObjectPage, 'ObjectPageLayout');\n    transferSettingsAndFlexChanges(\n        importParameters,\n        objectPageConfig.layout,\n        definitions[DefinitionName.ObjectPageLayout] as Definition,\n        configParameters\n    );\n    if (Object.keys(objectPageConfig.layout).length === 0) {\n        delete objectPageConfig.layout;\n    }\n\n    // Fill sections and subsections\n    objectPageConfig.sections = {};\n    const sections = definitions[DefinitionName.Sections] as Definition;\n    if (sections) {\n        fillSectionsInConfig(\n            importParameters,\n            sections.properties,\n            manifestSettings,\n            objectPageConfig.sections,\n            configParameters\n        );\n    }\n\n    // Find custom sections\n    const customSections = findCustomSectionExtensions(importParameters.manifest, importParameters.entitySet);\n    if (Object.keys(customSections).length > 0) {\n        objectPageConfig.sections.custom = [];\n        for (const sectionId in customSections) {\n            const customSection =\n                'fragmentName' in customSections[sectionId]\n                    ? configParameters.factory.createInstance(PageType.ObjectPage, 'ObjectPageCustomSectionFragment')\n                    : configParameters.factory.createInstance(PageType.ObjectPage, 'ObjectPageCustomSectionView');\n            const customSectionDefinition =\n                definitions[\n                    'fragmentName' in customSections[sectionId]\n                        ? 'ObjectPageCustomSectionFragment'\n                        : 'ObjectPageCustomSectionView'\n                ];\n            transferSettingsAndFlexChanges(\n                importParameters,\n                customSection,\n                customSectionDefinition as Definition,\n                configParameters,\n                { id: sectionId }\n            );\n            objectPageConfig.sections.custom.push(customSection);\n        }\n    }\n\n    return objectPageConfig;\n}\n\n/**\n * Creates the configuration (file content) for a V2 object page\n * @param {ImportObjectPageV2Parameters} importParameters  - object comprising all input data\n *\n * @returns {ObjectPageConfig} - the object page configuration (JSON)\n */\nexport function createObjectPageConfigV2(\n    importParameters: ImportObjectPageV2Parameters\n): v2.ObjectPageConfigV2 | undefined {\n    // Initialize i18next\n    initI18n();\n    if (!importParameters.manifest[ManifestSection.generic]) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOFE'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    const pageKeys: string[] = [];\n    const v2Pages = importParameters.manifest[ManifestSection.generic].pages;\n    if (!v2Pages) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOPAGES', { appId: importParameters.manifest['sap.app']['id'] }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    const entitySet = importParameters.entitySet;\n    const v2Page: v2.SapUiAppPageV2 = findObjectPageV2(v2Pages, importParameters.entitySet, pageKeys);\n    if (!v2Page) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYSET', { entitySet }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    const flexChangesForTransfer = prepareFlexChanges(importParameters.flex, entitySet);\n\n    const factory = new Factory();\n\n    //Fill config.json with manifest settings and flex changes\n    return fillConfig(importParameters, { pageKeys, flexChanges: flexChangesForTransfer, v2Page, factory });\n}\n", "import type { Manifest, v2, Files } from '@sap/ux-specification-types';\nimport { FioriElementsVersion, PageType, ManifestSection, SchemaType } from '@sap/ux-specification-types';\nimport { AppProvider } from '../../../common/appProvider';\nimport { transferSettingsOfObject } from '../common';\nimport { createOverviewPageConfig } from '../pages/overviewPage';\nimport { AppSettings } from '../../application';\nimport { getSchemaFilePath, generatePageId } from '../../../common';\nimport type { ExtensionLogger, ImportOverviewPageV2Parameters } from '../../../..';\n\nexport class V2OvpProvider extends AppProvider {\n    public constructor(manifest: Manifest, schemas: Files, logger?: ExtensionLogger) {\n        const pages: v2.Pages = {};\n        const sapOvp = manifest[ManifestSection.ovp];\n        const appSettings = new AppSettings();\n        const schemaFile = getSchemaFilePath(SchemaType.Application);\n        transferSettingsOfObject(\n            appSettings,\n            manifest,\n            schemas[schemaFile.filename]['definitions']['AppSettings'],\n            undefined\n        );\n        const jsonSchema: string = Object.keys(schemas).find((element) => element.includes(PageType.OverviewPage));\n        const parameters: ImportOverviewPageV2Parameters = {\n            manifest,\n            jsonSchema: schemas[jsonSchema]\n        };\n        const page: v2.Page = {\n            pageType: PageType.OverviewPage,\n            config: createOverviewPageConfig(parameters),\n            entitySet: sapOvp.globalFilterEntitySet\n        };\n        const id = generatePageId(page.pageType, page.entitySet);\n        pages[id] = page;\n        super(manifest, schemas, id, pages, FioriElementsVersion.v2, appSettings, logger);\n    }\n}\n", "import type { Manifest } from '@sap/ux-specification-types';\nimport { v2, ManifestSection, PageType } from '@sap/ux-specification-types';\nimport { getReflectMetadata } from '../../../common/decoration/decorators';\nimport { ensureManifestSectionByPathV2 } from '../../export/manifest';\nimport { MetadataInstanceFactoryV2 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport { assignReflectMetadataRules } from '../../export/export';\nimport { importProperty } from '../../../common';\nimport type { ImportOverviewPageV2Parameters } from '../../../..';\n\n/**\n * Transfers the card settings from manifest to config\n * @param propertyKey - Key of the property or setting\n * @param manifestSection - Section in manifest.json\n * @param configPart - Part of the config JSON\n * @param pathHierarchy - Parts of the path or breadcrumbs\n */\nfunction transferCardSettings(\n    propertyKey: string,\n    manifestSection: object,\n    configPart: { [key: string]: any },\n    pathHierarchy?: string[]\n): void {\n    if (propertyKey === 'settings') {\n        switch (manifestSection['template']) {\n            case 'sap.ovp.cards.charts.analytical':\n                configPart[pathHierarchy[0]][v2.CardSettingsType.analyticalCardSettings] = manifestSection[propertyKey];\n                break;\n            case 'sap.ovp.cards.v4.charts.analytical':\n                configPart[pathHierarchy[0]][v2.CardSettingsType.analyticalCardSettingsv4] =\n                    manifestSection[propertyKey];\n                break;\n            case 'sap.ovp.cards.list':\n            case 'sap.ovp.cards.v4.list':\n                configPart[pathHierarchy[0]][v2.CardSettingsType.listCardSettings] = manifestSection[propertyKey];\n                break;\n            case 'sap.ovp.cards.stack':\n                configPart[pathHierarchy[0]][v2.CardSettingsType.stackCardSettings] = manifestSection[propertyKey];\n                break;\n            case 'sap.ovp.cards.linklist':\n            case 'sap.ovp.cards.v4.linklist':\n                configPart[pathHierarchy[0]][v2.CardSettingsType.linkListCardSettings] = manifestSection[propertyKey];\n                break;\n            case 'sap.ovp.cards.table':\n            case 'sap.ovp.cards.v4.table':\n                configPart[pathHierarchy[0]][v2.CardSettingsType.tableCardSettings] = manifestSection[propertyKey];\n                break;\n            default:\n                configPart[pathHierarchy[0]].settings = manifestSection[propertyKey];\n                break;\n        }\n    } else {\n        configPart[pathHierarchy[0]][propertyKey] = manifestSection[propertyKey];\n    }\n}\n\n/**\n * Handles a list of properties of a given part of the schema, transfers the relevant property values or settings from manifest to config.\n * @param configPart - Part of the config JSON\n * @param manifest - manifest.json or app descriptor\n * @param appSchema - app specific JSON schema\n * @param pathHierarchy - Parts of the path or breadcrumbs\n */\nfunction transferSettingsOfObject(\n    configPart: { [key: string]: any },\n    manifest: Manifest,\n    appSchema: object,\n    pathHierarchy?: string[]\n): void {\n    for (const propertyKey in appSchema) {\n        const syncRule = getReflectMetadata(configPart, propertyKey);\n        if (syncRule?.manifest) {\n            const path = syncRule.manifest.path([...pathHierarchy, propertyKey]);\n            const manifestSection = ensureManifestSectionByPathV2(manifest, path);\n            if (Object.prototype.hasOwnProperty.call(manifestSection, propertyKey)) {\n                if (pathHierarchy.length !== 0) {\n                    transferCardSettings(propertyKey, manifestSection, configPart, pathHierarchy);\n                } else {\n                    importProperty(syncRule, manifestSection, propertyKey, configPart);\n                }\n            }\n        }\n    }\n}\n\n/**\n * OVP: Transfers all settings from manifest to config\n * @param pageConfig - the OVP configuration (JSON)\n * @param manifest  - manifest.json or app descriptor\n * @param appSchema - app specific JSON schema\n * @param factory - Metadata factory\n */\nfunction addSettings(\n    pageConfig: v2.OverviewPageConfigV2,\n    manifest: Manifest,\n    appSchema: object,\n    factory: MetadataInstanceInterface\n): void {\n    transferSettingsOfObject(pageConfig, manifest, appSchema['properties'], []);\n\n    pageConfig.cards = {};\n\n    Object.keys(manifest[ManifestSection.ovp]['cards']).forEach((newKey) => {\n        const cardTemplate = manifest[ManifestSection.ovp]['cards'][newKey].template;\n        const cardType = v2.cardTemplateTypeMap[cardTemplate];\n\n        //instantiate Card:\n        pageConfig.cards[newKey] = assignReflectMetadataRules(factory, cardType, {}, 'CustomCard') as v2.CardType;\n\n        pageConfig.cards = assignReflectMetadataRules(factory, cardType, pageConfig.cards, 'CustomCard') as {\n            [k: string]: v2.CardType;\n        };\n\n        //transfer settings:\n        transferSettingsOfObject(pageConfig.cards, manifest, manifest[ManifestSection.ovp]['cards'][newKey], [newKey]);\n    });\n}\n\n/**\n * Creates the configuration (file content) for an overview page\n * @param {object} manifest  - manifest of the app\n * @param {object} jsonSchema - app specific JSON schema\n *\n * @returns {object} - the OVP configuration (JSON)\n */\nexport function createOverviewPageConfig(importParameters: ImportOverviewPageV2Parameters): object {\n    const factory = new Factory();\n    //Instantiate Page\n    const config = factory.createPageInstance(PageType.OverviewPage);\n\n    if (importParameters.jsonSchema) {\n        addSettings(config, importParameters.manifest, importParameters.jsonSchema, factory);\n    }\n    return config;\n}\n", "// Note: the main functions or entry points reside in ./exportPage.ts\nimport merge from 'deepmerge';\nimport type { ObjectPageCustomSectionFragment, ObjectPageCustomSectionView } from './controls';\nimport { exportCustomColumnsToFragment, getCustomColumnPath, deleteColumnFromFragment } from './controls';\nimport type { NextDefinition } from '../../common';\nimport {\n    getReflectMetadata,\n    getChildId,\n    convertSectionId,\n    getNextTargetDefinition,\n    DEFINITION_LINK_PREFIX,\n    arrayCombineMerge,\n    deleteEmptyStructure,\n    fillFlexChangeContent,\n    getTargetFromCustomColumnRef\n} from '../../common';\nimport { getViewExtensionsPath } from '../application';\nimport { ensureManifestSectionByPathV2, getManifestSectionByPathV2 } from './manifest';\nimport { isAssociatedCustomSection } from '../import/utils';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport type { TransferParameterTypeV2 } from '../types';\nimport type { Definition } from 'typescript-json-schema';\nimport type {\n    Manifest,\n    SapOvp,\n    ExportHandlerFunction,\n    ExportResults,\n    SyncRule,\n    ObjectPageSectionData\n} from '@sap/ux-specification-types';\n\nimport {\n    v2,\n    PropertyName,\n    ViewTemplateType,\n    ManifestSection,\n    PageType,\n    FacetTitlePrefix\n} from '@sap/ux-specification-types';\n\n/**\n * Create missing card from the manifest\n * @param key - card name\n * @param ovp - OVP section of manifest, to be updated\n */\nfunction createCard(key: string, ovp: SapOvp): void {\n    if (!ovp.cards) {\n        ovp.cards = {};\n    }\n    if (!(key in ovp.cards)) {\n        ovp.cards[key] = {};\n    }\n}\n\n/**\n * Recursive function that searches for next avaialble id by increasing number by 1.\n * @param {boolean} sectionIds All ids in use.\n * @param {string} candidateId Candidate id to check if it is available.\n * @return {string} Id string.\n */\nfunction findAvailableId(sectionIds: string[], candidateId: string): string {\n    if (sectionIds.includes(candidateId)) {\n        const idParts = candidateId.split('|');\n        if (idParts.length === 3) {\n            idParts.push('1');\n        } else {\n            idParts[3] = (parseInt(idParts[3]) + 1).toString();\n        }\n        return findAvailableId(sectionIds, idParts.join('|'));\n    }\n    return candidateId;\n}\n\n/**\n * Private recursive function that traverses the content of the current object. It reads decorators and fills manifest entries and flex changes\n * @param configObject - current object to traverse\n * @param exportResults - object with all collected manifest entries and flex changes\n * @param jsonSchema - application specific schema\n * @param targetDefinition - the current entry point or definition in the app schema\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n * @param pathHierarchy -  elements of the path indicating the hierarchical level\n */\nexport function transferManifestEntriesOVP(\n    configObject: { [key: string]: any },\n    exportResults: ExportResults,\n    jsonSchema: object,\n    targetDefinition: object,\n    factory: MetadataInstanceInterface,\n    pathHierarchy?: string[]\n): void {\n    if (targetDefinition) {\n        if (targetDefinition['properties']) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            processProperties(\n                configObject,\n                exportResults,\n                jsonSchema,\n                targetDefinition['properties'],\n                factory,\n                pathHierarchy\n            );\n        } else if (targetDefinition['additionalProperties']) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            processProperties(\n                configObject,\n                exportResults,\n                jsonSchema,\n                targetDefinition['additionalProperties'],\n                factory,\n                pathHierarchy\n            );\n        }\n    }\n}\n\n/**\n * Assign sync rules to {currentObject}\n * @param {string} structureName - name of the complex structure in schema\n * @param {object} currentObject - the given part of the configuration\n * @param {string} defaultTypeName - name of the default type that shall be taken if no class is registered for structureName\n */\nexport function assignReflectMetadataRules(\n    factory: MetadataInstanceInterface,\n    structureName: string,\n    currentObject: object,\n    defaultTypeName: string\n): object {\n    return factory.createInstance(PageType.OverviewPage, defaultTypeName, currentObject, structureName);\n}\n\ntype ProcessDefinitionParams = {\n    pathHierarchy: string[];\n    propertyList: object;\n    appSchema: Definition;\n    currentObject: object;\n    configObject: { [key: string]: any };\n    factory: MetadataInstanceInterface;\n    exportResults: ExportResults;\n};\n\nfunction processAnyOfDefinitionsOfOVP(params: ProcessDefinitionParams): object {\n    params.pathHierarchy.pop();\n    let newConfigObject = params.currentObject;\n    for (const anyOfKey in params.propertyList['anyOf']) {\n        if (params.propertyList['anyOf'][anyOfKey].$ref) {\n            const definitionArray = params.propertyList['anyOf'][anyOfKey].$ref.split(DEFINITION_LINK_PREFIX);\n            const nextTargetDefinition = params.appSchema['definitions'][definitionArray[definitionArray.length - 1]];\n            const cardSettingsType = params.pathHierarchy[1];\n            params.currentObject = params.configObject[cardSettingsType];\n            newConfigObject = assignReflectMetadataRules(\n                params.factory,\n                cardSettingsType,\n                params.currentObject,\n                'CustomCard'\n            );\n            transferManifestEntriesOVP(\n                newConfigObject,\n                params.exportResults,\n                params.appSchema,\n                nextTargetDefinition as Definition,\n                params.factory,\n                [...params.pathHierarchy]\n            );\n        } else if (typeof params.propertyList['anyOf'][anyOfKey] === 'object') {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            processProperties(\n                params.configObject,\n                params.exportResults,\n                params.appSchema,\n                params.propertyList['anyOf'][anyOfKey].properties,\n                params.factory,\n                [...params.pathHierarchy, 'anyOfObject']\n            );\n        }\n    }\n    return newConfigObject;\n}\n\nfunction checkSyncRuleForExport(\n    exportHandler: boolean | ExportHandlerFunction,\n    manifestSection: object,\n    configObject: { [key: string]: any },\n    key: string,\n    currentObject: object,\n    exceptionList: string[]\n) {\n    if (exportHandler && typeof exportHandler === 'function') {\n        exportHandler(manifestSection, configObject, key);\n    } else if (typeof currentObject === 'object' && !exceptionList.includes(key)) {\n        // colorPalette is an exception as it can contain anything as per our schema, so just replace the object\n        manifestSection[key] = merge(manifestSection[key] || {}, currentObject || {}, {\n            arrayMerge: arrayCombineMerge\n        });\n    } else {\n        manifestSection[key] = currentObject;\n    }\n}\n\n/**\n * Transfer manifest settings from config to manifest\n * @param syncRule - metadata rule used for import and export\n * @param pathHierarchy -  elements of the path indicating the hierarchical level\n * @param key\n * @param exportResults - overall result list, to be updated\n * @param currentObject\n * @param configObject\n */\nfunction transferToManifest(\n    syncRule: SyncRule,\n    pathHierarchy: string[],\n    key: string,\n    exportResults: ExportResults,\n    currentObject: object,\n    configObject: { [key: string]: any }\n) {\n    const exceptionList = ['colorPalette', 'tabs'];\n    const path = syncRule.manifest.path([...pathHierarchy, key]);\n    const manifestSection = ensureManifestSectionByPathV2(exportResults.manifest, path);\n    if (key in v2.CardSettingsType || key === 'settings') {\n        manifestSection['settings'] = merge(manifestSection['settings'] || {}, currentObject || {}, {\n            arrayMerge: arrayCombineMerge\n        });\n    } else if (currentObject !== undefined) {\n        const exportHandler = syncRule.manifest.export;\n        if (exportHandler !== false) {\n            checkSyncRuleForExport(exportHandler, manifestSection, configObject, key, currentObject, exceptionList);\n        }\n    } else if (manifestSection[key] !== undefined) {\n        delete manifestSection[key];\n    }\n}\n\nfunction transferCards(\n    currentObject: object,\n    appSchema: Definition,\n    factory: MetadataInstanceInterface,\n    exportResults: ExportResults\n) {\n    Object.keys(currentObject).forEach((cardKey) => {\n        const cardType = currentObject[cardKey].template;\n        //Determine target defintion\n        let targetDefinition;\n        if (!Object.values(v2.CardTemplateType).includes(cardType)) {\n            targetDefinition = ['CustomCard'];\n        } else {\n            targetDefinition = Object.keys(appSchema.definitions).filter(\n                (definition) =>\n                    (\n                        (appSchema.definitions[definition] as Definition).properties?.template as Definition\n                    )?.enum?.indexOf(currentObject[cardKey].template) > -1\n            );\n        }\n        //Get metadata\n        currentObject[cardKey] = assignReflectMetadataRules(\n            factory,\n            targetDefinition[0],\n            currentObject[cardKey],\n            'CustomCard'\n        );\n        createCard(cardKey, exportResults['manifest'][ManifestSection.ovp]);\n        transferManifestEntriesOVP(\n            currentObject[cardKey],\n            exportResults,\n            appSchema,\n            appSchema.definitions[targetDefinition[0]] as Definition,\n            factory,\n            [cardKey]\n        );\n    });\n    //check for deletions:\n    Object.keys(exportResults.manifest[ManifestSection.ovp].cards).forEach((manifestCard) => {\n        if (!currentObject[manifestCard]) {\n            delete exportResults.manifest[ManifestSection.ovp].cards[manifestCard];\n        }\n    });\n}\n\nfunction exportOfObject(params: ProcessDefinitionParams, key: string, factory: MetadataInstanceInterface): void {\n    if (key === 'cards') {\n        //inserts and updates:\n        transferCards(params.currentObject, params.appSchema, factory, params.exportResults);\n    } else if (params.propertyList[key].$ref) {\n        const definitionArray = params.propertyList[key].$ref.split(DEFINITION_LINK_PREFIX);\n        const nextTargetDefinition = params.appSchema.definitions[definitionArray[definitionArray.length - 1]];\n        params.currentObject = assignReflectMetadataRules(\n            params.factory,\n            key,\n            params.currentObject,\n            key === 'settings' ? 'CustomCard' : ''\n        );\n        transferManifestEntriesOVP(\n            params.currentObject,\n            params.exportResults,\n            params.appSchema,\n            nextTargetDefinition as Definition,\n            factory,\n            [...params.pathHierarchy, key]\n        );\n    } else if (params.propertyList[key].anyOf) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        processProperties(\n            params.configObject,\n            params.exportResults,\n            params.appSchema,\n            params.propertyList[key],\n            factory,\n            [...params.pathHierarchy, key, 'anyOf']\n        );\n    } else if (params.propertyList[key]['properties'] !== undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        processProperties(\n            params.configObject,\n            params.exportResults,\n            params.appSchema,\n            params.propertyList[key].properties,\n            params.factory,\n            [...params.pathHierarchy, key, 'objectProperties']\n        );\n    }\n}\n\n/**\n * Recursive function that transfers the content of a list of properties of a configuration to the overall exportResults\n * @param configObject - the given part of the configuration\n * @param exportResults - overall result list, to be updated\n * @param appSchema - app-specific JSON schema\n * @param propertyList - current property list of the config (properties or additional properties)\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n * @param pathHierarchy -  elements of the path indicating the hierarchical level\n */\nfunction processProperties(\n    configObject: { [key: string]: any },\n    exportResults: ExportResults,\n    appSchema: Definition,\n    propertyList: object,\n    factory: MetadataInstanceInterface,\n    pathHierarchy?: string[]\n): void {\n    let isAnyOfObject = false;\n    let isObjectProperty = false;\n\n    for (const key in propertyList) {\n        let currentObject = configObject[key];\n        let syncRule = getReflectMetadata(configObject, key);\n\n        if (pathHierarchy[pathHierarchy.length - 1] === 'anyOfObject') {\n            isAnyOfObject = true;\n            pathHierarchy.pop();\n        }\n        if (isAnyOfObject) {\n            currentObject = configObject[pathHierarchy[pathHierarchy.length - 1]][key];\n            syncRule = getReflectMetadata(configObject, pathHierarchy[pathHierarchy.length - 1]);\n        }\n\n        if (pathHierarchy[pathHierarchy.length - 1] === 'objectProperties') {\n            isObjectProperty = true;\n            pathHierarchy.pop();\n        }\n        if (isObjectProperty) {\n            currentObject = configObject[pathHierarchy[pathHierarchy.length - 1]][key];\n            syncRule = getReflectMetadata(configObject, pathHierarchy[pathHierarchy.length - 1]);\n        }\n\n        const processDefinitionParams: ProcessDefinitionParams = {\n            pathHierarchy,\n            propertyList,\n            appSchema,\n            currentObject,\n            configObject,\n            factory,\n            exportResults\n        };\n        if (pathHierarchy[pathHierarchy.length - 1] === 'anyOf') {\n            currentObject = processAnyOfDefinitionsOfOVP(processDefinitionParams);\n        }\n        if (syncRule?.manifest) {\n            transferToManifest(syncRule, pathHierarchy, key, exportResults, currentObject, configObject);\n        }\n        if (currentObject && typeof currentObject === 'object' && propertyList[key]) {\n            exportOfObject(processDefinitionParams, key, factory);\n        }\n    }\n}\n\n/**\n * Evaluates an export rule for a property, transfers to flex change\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param syncRule - export rule from the object classes decorator\n * @param configObject - current (sub)object of the configuration file\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param key - key of the given property\n */\nfunction evaluateFlexRule(\n    transferParameters: TransferParameterTypeV2,\n    breadcrumbs: string[],\n    syncRule: SyncRule,\n    ids: string[],\n    title: string,\n    configObject: object,\n    key: string\n): void {\n    let localBreadcrumbs: string[];\n\n    if (breadcrumbs.length === 0) {\n        //only added on top = page level, do not forward\n        localBreadcrumbs = ['page'];\n    } else {\n        localBreadcrumbs = breadcrumbs;\n    }\n    const controlId = syncRule.flex.controlId(\n        transferParameters.baseId,\n        ids,\n        localBreadcrumbs,\n        syncRule.flex.controlType,\n        title\n    );\n    const flexChange = fillFlexChangeContent(configObject, syncRule, transferParameters.ui5Version, key, controlId);\n    const localManifest = JSON.parse(JSON.stringify(transferParameters.exportResults.manifest)) as Manifest;\n    localManifest['sap.app'].id = transferParameters.appId;\n    const completeFlexChange = syncRule.flex.createFlexChange(flexChange, localManifest);\n    const flexChangeExists = transferParameters.exportResults.flexChanges.find((change) => {\n        let result = false,\n            oldChange: object = JSON.parse(change);\n        oldChange = {\n            content: oldChange['content'],\n            selector: oldChange['selector']\n        };\n        let newChange: object = JSON.parse(completeFlexChange);\n        newChange = {\n            content: newChange['content'],\n            selector: newChange['selector']\n        };\n        if (JSON.stringify(oldChange) === JSON.stringify(newChange)) {\n            result = true;\n        }\n        return result;\n    });\n    if (!flexChangeExists) {\n        transferParameters.exportResults.flexChanges.push(completeFlexChange);\n    }\n}\n\n/**\n * Exports a given config property value to manifest\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param syncRule - export rule from the object classes decorator\n * @param manifestSection - current section in manifest.json\n * @param configObject - current (sub)object of the configuration file\n * @param key - key of the given property in the config\n * @param manifestKey - key of the given property in manifest\n */\nfunction exportConfigValue(\n    transferParameters: TransferParameterTypeV2,\n    syncRule: SyncRule,\n    manifestSection: object,\n    configObject: object,\n    key: string,\n    manifestKey: string\n) {\n    if (\n        // In case of arrays we take over complete array\n        !(\n            transferParameters.propertyDefinition['type'] !== 'array' &&\n            transferParameters.nextDefinition &&\n            transferParameters.nextDefinition['targetDefinition'].type === 'object' &&\n            transferParameters.nextDefinition['targetDefinition'].properties\n        )\n    ) {\n        const exportHandler = syncRule.manifest.export;\n        if (exportHandler && typeof exportHandler === 'function') {\n            exportHandler(manifestSection, configObject, key, manifestKey);\n        } else if (exportHandler !== false) {\n            manifestSection[manifestKey] = configObject[key];\n        }\n    } else if (\n        transferParameters.propertyDefinition['type'] !== 'array' &&\n        manifestSection[manifestKey] === undefined\n    ) {\n        manifestSection[manifestKey] = {};\n    }\n}\n\n/**\n * Evaluates an export rule for a property, transfers to manifest setting\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param syncRule - export rule from the object classes decorator\n * @param configObject - current (sub)object of the configuration file\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param key - key of the given property\n */\nfunction evaluateManifestRule(\n    transferParameters: TransferParameterTypeV2,\n    path: string,\n    syncRule: SyncRule,\n    key: string,\n    configObject: object\n) {\n    const manifestSection = ensureManifestSectionByPathV2(transferParameters.exportResults.manifest, path);\n    const manifestKey = syncRule.manifest.key || key;\n    if (configObject[key] !== undefined) {\n        exportConfigValue(transferParameters, syncRule, manifestSection, configObject, key, manifestKey);\n    } else {\n        //delete value\n        const deleteHandler = syncRule.manifest.delete;\n        if (deleteHandler && typeof deleteHandler === 'function') {\n            deleteHandler(manifestSection, configObject, key, manifestKey);\n        } else if (Object.prototype.hasOwnProperty.call(manifestSection, manifestKey)) {\n            delete manifestSection[manifestKey];\n        }\n    }\n    deleteEmptyStructure(transferParameters.exportResults.manifest, path);\n}\n\nfunction getManifestPathOfSections(\n    breadcrumbs: string[],\n    path: string,\n    syncRule: SyncRule,\n    transferParameters: TransferParameterTypeV2,\n    title: string\n) {\n    if (breadcrumbs[1] === 'custom') {\n        path = syncRule.manifest.path(transferParameters.pageKeys, {}, breadcrumbs[2]);\n    } else {\n        path = syncRule.manifest.path(\n            transferParameters.pageKeys,\n            {},\n            title?.startsWith(FacetTitlePrefix) ? title.split(FacetTitlePrefix)[1] : breadcrumbs[1],\n            breadcrumbs[breadcrumbs.length - 1]\n        );\n        path = path.replace('/@', '::').replace(/VOCWITHCOLONS/g, '::com.sap.vocabularies');\n    }\n    return path;\n}\n\nfunction getManifestPathOfTable(\n    breadcrumbs: string[],\n    path: string,\n    syncRule: SyncRule,\n    transferParameters: TransferParameterTypeV2,\n    configObject: object\n) {\n    if (breadcrumbs[1] === 'columns' && breadcrumbs[2] === 'custom') {\n        path = syncRule.manifest.path(\n            transferParameters.pageKeys,\n            transferParameters.exportResults.manifest,\n            configObject['tabKey']\n        );\n    } else {\n        path = syncRule.manifest.path(transferParameters.pageKeys, {}, breadcrumbs[breadcrumbs.length - 1]);\n    }\n    return path;\n}\n\n/**\n * Determines the path to a manifest setting, based on the syncRule\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param {SyncRule} syncRule - export rule from the object classes decorator\n * @param configObject - current (sub)object of the configuration file\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @returns the path to the manifest setting\n */\nfunction getManifestPath(\n    transferParameters: TransferParameterTypeV2,\n    breadcrumbs: string[],\n    syncRule: SyncRule,\n    configObject: object,\n    title: string\n): string {\n    let path: string;\n    if (breadcrumbs[0] === PropertyName.sections) {\n        path = getManifestPathOfSections(breadcrumbs, path, syncRule, transferParameters, title);\n    } else if (breadcrumbs[0] === PropertyName.table) {\n        path = getManifestPathOfTable(breadcrumbs, path, syncRule, transferParameters, configObject);\n    } else if (breadcrumbs[0] === 'keyPerformanceIndicators') {\n        path = syncRule.manifest.path(transferParameters.pageKeys, transferParameters.exportResults.manifest, title);\n    } else if (breadcrumbs[0] === 'filterBar' && breadcrumbs[1] === 'selectionFields') {\n        path = syncRule.manifest.path(\n            transferParameters.pageKeys,\n            transferParameters.exportResults.manifest,\n            breadcrumbs.slice(2).join('/')\n        );\n    } else {\n        path = syncRule.manifest.path(transferParameters.pageKeys);\n    }\n    return path;\n}\n\n/**\n * Evaluates an export rule for a property or object, transfers to flex change or manifest setting\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param {SyncRule} syncRule - export rule from the object classes decorator\n * @param configObject - current (sub)object of the configuration file\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param key - key of the given property\n */\nfunction evaluateExportRule(\n    transferParameters: TransferParameterTypeV2,\n    syncRule: SyncRule,\n    configObject: object,\n    breadcrumbs: string[],\n    ids: string[],\n    title: string,\n    key: string\n): void {\n    if (!syncRule) {\n        return;\n    }\n    //eliminate subsections' hierarchy\n    let index = breadcrumbs.indexOf('subsections');\n    while (index > -1) {\n        breadcrumbs.splice(index - 1, 2);\n        index = breadcrumbs.indexOf('subsections');\n    }\n\n    if (syncRule.flex) {\n        evaluateFlexRule(transferParameters, breadcrumbs, syncRule, ids, title, configObject, key);\n    } else if (syncRule.manifest) {\n        const path = getManifestPath(transferParameters, breadcrumbs, syncRule, configObject, title);\n        evaluateManifestRule(transferParameters, path, syncRule, key, configObject);\n    }\n}\n\ntype ColumnParams = {\n    path: string;\n    exportResults: ExportResults;\n    entitySet: string;\n    config: v2.TableCustomColumns;\n    sectionKey: string;\n    extensionType: string;\n    appId: string;\n};\n\n/**\n * Deletes an obsolete custom column from manifest\n */\nfunction deleteObsoleteColumn(key: string, columnParams: ColumnParams, manifestSection: object) {\n    const keyParts = key.split('|');\n    const keyEntitySet = keyParts[1];\n    const keyTab = keyParts[2];\n    if (keyEntitySet === columnParams.entitySet) {\n        //relevant extension. still present in config?\n        const existingConfigEntries = columnParams.config?.filter(\n            (column) =>\n                (column.tabKey === keyTab ||\n                    (keyTab === undefined && column.tabKey === '') ||\n                    (keyTab && columnParams.sectionKey === keyTab)) &&\n                column.extensionType === columnParams.extensionType\n        );\n        if (!existingConfigEntries || existingConfigEntries.length === 0) {\n            deleteColumnFromFragment(manifestSection, key, columnParams.appId, columnParams.exportResults.fragments);\n            // delete from manifest\n            delete manifestSection[key];\n            // delete cells entry\n            if (key.startsWith(ViewTemplateType.ResponsiveTableColumnsExtension)) {\n                const cellsPattern = key.replace(\n                    ViewTemplateType.ResponsiveTableColumnsExtension,\n                    ViewTemplateType.ResponsiveTableCellsExtension\n                );\n                deleteColumnFromFragment(\n                    manifestSection,\n                    cellsPattern,\n                    columnParams.appId,\n                    columnParams.exportResults.fragments\n                );\n                // delete from manifest\n                delete manifestSection[cellsPattern];\n            }\n        }\n    }\n}\n\n/**\n * Walks through the extensions registered in manifest and compares the columns of the fragment with the ones present in config.\n * If not present anymore, the extension column gets deleted from fragment.\n * @param path - path to extesnions section in manifest\n * @param exportResults - result structure, including the fragments that may get updated\n * @param entitySet - current entity set\n * @param config - current config JSON\n * @param sectionKey - section key\n * @param extensionType - extensionType\n * @param appId - application ID\n */\nfunction deleteObsoleteColumnsFromFragment(columnParams: ColumnParams) {\n    const folderPath = columnParams.path.substring(0, columnParams.path.lastIndexOf('/'));\n    const manifestSection = getManifestSectionByPathV2(columnParams.exportResults.manifest, folderPath);\n    const extensionPattern = columnParams.path.substring(columnParams.path.lastIndexOf('/') + 1);\n    for (const key in manifestSection) {\n        if (key.startsWith(extensionPattern)) {\n            deleteObsoleteColumn(key, columnParams, manifestSection);\n        }\n    }\n}\n\n/**\n * Clusters the custom columns if a config by the extension's path in manifest\n * @param customColumnsInConfig - list of all custom columns in config\n * @param schemaDefinition - schema definition of the table custom column\n * @param v2Page - current page in manifest\n * @param entitySet - current entity set\n * @param sectionKey key of the section (in case of OP)\n * @returns the custom columns, clustered by the manifest path\n */\nfunction clusterConfigColumnsByPath(\n    customColumnsInConfig: v2.TableCustomColumns,\n    schemaDefinition: object,\n    v2Page: v2.SapUiAppPageV2,\n    entitySet: string,\n    sectionKey: string\n): object {\n    const cluster = {};\n    for (const customColumn of customColumnsInConfig) {\n        //verify that mandatory parameters are filled\n        if (\n            !customColumn['className'] ||\n            !customColumn['fragmentName'] ||\n            !customColumn['columnKey'] ||\n            !customColumn['extensionType']\n        ) {\n            continue;\n        }\n        //check fragment name\n        if (schemaDefinition['properties']['fragmentName']['pattern']) {\n            const namePattern = new RegExp(schemaDefinition['properties']['fragmentName']['pattern']);\n            if (namePattern.test(customColumn['fragmentName']) === false) {\n                continue;\n            }\n        }\n        const { path, viewTemplateType } = getCustomColumnPath(\n            v2Page,\n            entitySet,\n            customColumn.tabKey || sectionKey,\n            customColumn['extensionType']\n        );\n\n        if (!cluster[path]) {\n            cluster[path] = {\n                viewTemplateType: viewTemplateType,\n                columns: []\n            };\n        }\n        cluster[path].columns.push(customColumn);\n    }\n    return cluster;\n}\n\n/**\n * Transfers column extensions to manifest and fragment files\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param {TableCustomColumns} customColumnsInConfig - config part comprising the table custom columns\n * @param {object} schemaDefinition - Column schema definition\n * @param {ObjectPageSectionData} [objectPageSectionData] - Object Page section's data containing target and key options.\n */\nfunction transferColumnExtensions(\n    transferParameters: TransferParameterTypeV2,\n    customColumnsInConfig: v2.TableCustomColumns,\n    schemaDefinition: object,\n    objectPageSectionData?: ObjectPageSectionData\n): void {\n    const sectionKey = objectPageSectionData ? objectPageSectionData.key : undefined;\n    const sectionTarget = objectPageSectionData ? objectPageSectionData.target : undefined;\n    const entitySet = sectionTarget || transferParameters.v2Page.entitySet;\n    for (const extensionType in v2.TableColumnExtensionTypeV2) {\n        const { path } = getCustomColumnPath(transferParameters.v2Page, entitySet, sectionKey, extensionType);\n        if (!path) {\n            continue;\n        }\n        const columParams = {\n            path,\n            exportResults: transferParameters.exportResults,\n            entitySet,\n            config: customColumnsInConfig,\n            sectionKey,\n            extensionType,\n            appId: transferParameters.appId\n        };\n        deleteObsoleteColumnsFromFragment(columParams);\n    }\n    if (customColumnsInConfig) {\n        //cluster existing custom columns by manifest path (or tab key)\n        const cluster = clusterConfigColumnsByPath(\n            customColumnsInConfig,\n            schemaDefinition,\n            transferParameters.v2Page,\n            entitySet,\n            sectionKey\n        );\n        //Export to fragment\n        for (const path in cluster) {\n            exportCustomColumnsToFragment(\n                transferParameters.exportResults,\n                path,\n                cluster[path].columns,\n                transferParameters.appId,\n                cluster[path].viewTemplateType,\n                transferParameters.logger\n            );\n        }\n    }\n}\n\n/**\n * Recursive function that traverses the content of the current object. It reads decorators and fills manifest entries and flex changes\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param configSections - sections from configuration object\n * @param pageKey  - page key\n * @param parentIds - array of collected parent ids\n * @param breadcrumbs - array of properties that we are currently processing. Required for instance for table column name\n * @param targetDefinition - the current entry point or definition in the app schema\n */\nfunction transferManifestExtensions(\n    transferParameters: TransferParameterTypeV2,\n    configSections: (ObjectPageCustomSectionFragment | ObjectPageCustomSectionView)[],\n    pageKey: string,\n    parentIds: string[],\n    breadcrumbs: string[],\n    targetDefinition: object\n): void {\n    const sectionIds: string[] = [];\n    const entity = pageKey.split('|')[1];\n    if (!configSections) {\n        return;\n    }\n    for (const section of configSections) {\n        const id = findAvailableId(sectionIds, [section.relativePosition, entity, section.relatedFacet].join('|'));\n        sectionIds.push(id);\n    }\n    for (let index = 0; index < sectionIds.length; index++) {\n        const definition = targetDefinition['anyOf'].find((element) =>\n            element.$ref.includes(configSections[index].constructor.name)\n        );\n        const definitionArray = definition.$ref.split(DEFINITION_LINK_PREFIX);\n        const nextTargetDefinition =\n            transferParameters.appSchema['definitions'][definitionArray[definitionArray.length - 1]];\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            configSections[index],\n            parentIds,\n            [...breadcrumbs, sectionIds[index]],\n            nextTargetDefinition\n        );\n    }\n    // Delete removed manifest entries\n    const manifestSections = ensureManifestSectionByPathV2(\n        transferParameters.exportResults.manifest,\n        getViewExtensionsPath()\n    );\n    for (const key in manifestSections) {\n        if (isAssociatedCustomSection(key, entity) && !sectionIds.includes(key)) {\n            delete manifestSections[key];\n        }\n    }\n}\n\n/**\n * Method returns converted section id by resolving passed section id and title from schema.\n * @param {string[]} breadcrumbs Array of properties that we are currently processing. Required for instance for table column name.\n * @param {string} title Title from JSON schema, comprising the facet ID\n * @returns {string | undefined} Resolved section id.\n */\nfunction getSectionId(breadcrumbs: string[], title: string): string | undefined {\n    let sectionId = undefined;\n    for (let i = breadcrumbs.length - 1; i >= 0; i--) {\n        if (breadcrumbs[i] === PropertyName.table) {\n            sectionId = breadcrumbs[i - 1];\n            break;\n        }\n    }\n    return convertSectionId(sectionId, title);\n}\n\n/**\n * Processes index tables in schema\n */\nfunction transferIndexTable(\n    currentConfigObject: object,\n    transferParameters: TransferParameterTypeV2,\n    title: string,\n    key: string,\n    ids: string[],\n    breadcrumbs: string[]\n) {\n    const propertyDefinition = transferParameters.propertyDefinition as Definition;\n    if (!currentConfigObject || !propertyDefinition?.additionalProperties) {\n        return;\n    }\n    Object.keys(currentConfigObject).forEach((newKey) => {\n        const nextDefinition = getNextTargetDefinition(\n            transferParameters.appSchema,\n            title,\n            currentConfigObject[newKey],\n            propertyDefinition.additionalProperties as Definition,\n            key,\n            transferParameters.factory,\n            transferParameters.pageType\n        );\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            nextDefinition.configObject,\n            ids,\n            [...breadcrumbs, key],\n            nextDefinition.targetDefinition,\n            newKey\n        );\n    });\n}\n\n/**\n * Transfers custom columns of schema\n */\nfunction transferCustomColumns(\n    propertyDefinition: any,\n    breadcrumbs: string[],\n    title: string,\n    transferParameters: TransferParameterTypeV2,\n    configObject: { [key: string]: any },\n    nextDefinition: NextDefinition\n) {\n    let objectPageSectionData: ObjectPageSectionData | undefined;\n    const target = getTargetFromCustomColumnRef(propertyDefinition.$ref);\n    if (target) {\n        objectPageSectionData = {\n            target,\n            key: getSectionId(breadcrumbs, title)\n        };\n    }\n    transferColumnExtensions(\n        transferParameters,\n        configObject?.custom as v2.TableCustomColumns,\n        nextDefinition.targetDefinition,\n        objectPageSectionData\n    );\n}\n\n/**\n * Processes anyOf definitions of schema\n */\nfunction handleAnyOfDefinitions(\n    propertyDefinition: any,\n    transferParameters: TransferParameterTypeV2,\n    title: string,\n    currentConfigObject: object,\n    key: string,\n    ids: string[],\n    breadcrumbs: string[]\n) {\n    propertyDefinition['anyOf'].forEach((element) => {\n        const nextDefinition = getNextTargetDefinition(\n            transferParameters.appSchema,\n            title,\n            currentConfigObject,\n            element,\n            key,\n            transferParameters.factory,\n            transferParameters.pageType\n        );\n        if (nextDefinition) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            transferManifestEntriesAndFlexChange(\n                transferParameters,\n                nextDefinition.configObject,\n                ids,\n                [...breadcrumbs, key],\n                nextDefinition.targetDefinition,\n                nextDefinition.title\n            );\n        }\n    });\n}\n\n/**\n * Processes complex definitions of schema\n */\nfunction transferComplexProperty(\n    transferParameters: TransferParameterTypeV2,\n    breadcrumbs: string[],\n    configObject: { [key: string]: any },\n    ids: string[],\n    propertyKey: string,\n    nextDefinition: NextDefinition,\n    title?: string\n): void {\n    const propertyDefinition = transferParameters.propertyDefinition as Definition;\n    if (\n        propertyDefinition?.type === 'array' &&\n        (breadcrumbs[0] === 'sections' || breadcrumbs[0] === 'subsections') &&\n        propertyKey === 'custom'\n    ) {\n        transferManifestExtensions(\n            transferParameters,\n            configObject[propertyKey],\n            transferParameters.pageKeys[transferParameters.pageKeys.length - 1],\n            ids,\n            [...breadcrumbs, propertyKey],\n            propertyDefinition?.items as Definition\n        );\n    } else if (nextDefinition && propertyKey === 'custom') {\n        transferCustomColumns(propertyDefinition, breadcrumbs, title, transferParameters, configObject, nextDefinition);\n        return;\n    } else if (nextDefinition) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            nextDefinition.configObject,\n            ids,\n            [...breadcrumbs, propertyKey],\n            nextDefinition.targetDefinition,\n            nextDefinition.title\n        );\n    } else if (propertyDefinition['anyOf']) {\n        handleAnyOfDefinitions(\n            propertyDefinition,\n            transferParameters,\n            title,\n            configObject?.[propertyKey],\n            propertyKey,\n            ids,\n            breadcrumbs\n        );\n    }\n}\n\n/**\n * Function that traverses the content of the current object. It reads decorators and fills manifest entries and flex changes\n * @param {TransferParameterTypeV2} transferParameters - list of input parameters for the recursive function call\n * @param configObject - current (sub)object of the configuration file\n * @param parentIds - array of collected parent ids\n * @param breadcrumbs - array of properties that we are currently processing. Required for instance for table column name\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param title - title from the app schema (comprising for instance the facet ID)\n */\nexport function transferManifestEntriesAndFlexChange(\n    transferParameters: TransferParameterTypeV2,\n    configObject: { [key: string]: any },\n    parentIds: string[],\n    breadcrumbs: string[],\n    schemaDefinition: Definition,\n    title?: string\n): void {\n    let currentConfigObject: object;\n\n    if (!schemaDefinition?.properties) {\n        return;\n    }\n    for (const propertyKey in schemaDefinition.properties) {\n        currentConfigObject = configObject?.[propertyKey];\n        const childId = configObject && getChildId(configObject, propertyKey);\n        const ids = childId ? [...parentIds, childId] : parentIds;\n        const syncRule = getReflectMetadata(configObject, propertyKey);\n        const propertyDefinition = (transferParameters.propertyDefinition = schemaDefinition.properties[\n            propertyKey\n        ] as Definition);\n        const nextDefinition = (transferParameters.nextDefinition = getNextTargetDefinition(\n            transferParameters.appSchema,\n            title,\n            currentConfigObject,\n            propertyDefinition,\n            propertyKey,\n            transferParameters.factory,\n            transferParameters.pageType\n        ));\n        //Evaluate sync rule for the export\n        evaluateExportRule(transferParameters, syncRule, configObject, [...breadcrumbs], ids, title, propertyKey);\n        //index table\n        transferIndexTable(currentConfigObject, transferParameters, title, propertyKey, ids, breadcrumbs);\n\n        if (currentConfigObject === undefined || typeof currentConfigObject === 'object') {\n            transferComplexProperty(\n                transferParameters,\n                breadcrumbs,\n                configObject,\n                ids,\n                propertyKey,\n                nextDefinition,\n                title\n            );\n        } else if (propertyDefinition?.$ref === DEFINITION_LINK_PREFIX + 'TableCustomColumns') {\n            //empty config ==> delete all given extensions\n            transferColumnExtensions(\n                transferParameters,\n                [],\n                transferParameters.appSchema['definitions']['TableCustomColumn']\n            );\n            continue;\n        }\n    }\n}\n", "import type {\n    LineItem,\n    DataFieldForActionAbstractTypes,\n    DataFieldAbstractTypes\n} from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport type { AnnotationTerm, ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport { getDataFieldDescription, findAlias, DEFINITION_LINK_PREFIX } from '../../common/utils';\nimport { getStableIdPartFromDataField } from './StableIdHelper';\nimport { UIAnnotationTypes, UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport {\n    addCommonLineItemDefinitions,\n    getFacetDefinitionLink,\n    parseSchemaDefinition,\n    prepareRef,\n    addDescriptiveEnumDefinition,\n    getActionKey,\n    addKeyToDefinition\n} from '../../common';\nimport i18next from 'i18next';\nimport { log, LogSeverity } from '../../..';\nimport type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport type { ExtensionLogger, GenerateAppSchemaParameters } from '@sap/ux-specification-types';\nimport {\n    v4,\n    ManifestSection,\n    SchemaTag,\n    MANIFESTPATH,\n    DefinitionName,\n    UIVOCABULARY,\n    PropertyName,\n    TemplateType\n} from '@sap/ux-specification-types';\n\ntype CustomExtension = v4.TableCustomColumn | v4.CustomAction;\n\ninterface CustomExtensions {\n    [key: string]: CustomExtension;\n}\n\n/**\n * Sort function for properties in schema definitions.\n * @param definition - definition which contains list of properties, unsorted\n * @returns - list of properties, sorted by property index\n */\nfunction sortPropertiesRecords(definition: DefinitionOrBoolean) {\n    definition = typeof definition === 'object' ? definition : {};\n    function sortByPropertyIndex(): (a: [string, unknown], b: [string, unknown]) => number {\n        return ([_key1, value1], [_key2, value2]) => value1[SchemaTag.propertyIndex] - value2[SchemaTag.propertyIndex];\n    }\n    const unsortedObjArr = [...Object.entries(definition.properties)];\n    return unsortedObjArr.sort(sortByPropertyIndex());\n}\n\n/**\n * Method receives extension object and returns title/text.\n * @param extension - custom extension object from manifest.\n * @returns Title/text of custom extension.\n */\nfunction getExtensionText(extension: CustomExtension): string {\n    return 'header' in extension ? extension.header : extension.text;\n}\n\n/**\n * Adds a custom extension to the right position of a sorted array\n * @param extension - custom extension\n * @param sortedExtensionsArray - array of all entries(annotation entries and extensions), to be enhanced\n * @param targetIndex - index of the anchor entry\n * @param extId - ID of the new custom extension\n * @param newExtensionReference - schema reference of the new extension\n */\nfunction addExtensionToSortedArray(\n    extension: CustomExtension,\n    sortedExtensionsArray: [string, unknown][],\n    targetIndex: number,\n    extId: string,\n    newExtensionReference: { $ref: string; description: string }\n): void {\n    const placement = extension.position?.placement || v4.Placement.After;\n    if (placement === v4.Placement.Before) {\n        sortedExtensionsArray.splice(targetIndex, 0, [extId, newExtensionReference]);\n    } else {\n        sortedExtensionsArray.splice(targetIndex + 1, 0, [extId, newExtensionReference]);\n    }\n}\n\n/**\n * Adds remaining custom extensions that might self-reference and were not added in previous steps\n * @param {CustomExtensions} remainingExtensions - list of custom extensions that are left for post-processing\n * @param {string} extId - current id of remaining extensions\n * @param {CustomExtension} extension - current extension of remaining custom extensions\n * @param {[string, unknown]} sortedExtArray - sorted array of annotation-based extensions, to be updated\n * @param { $ref, description, key } newCustomExt - description based on extension in manifest\n */\nfunction addRemainingTargetByBefore(\n    remainingExtensions: CustomExtensions,\n    extId: string,\n    extension: CustomExtension,\n    sortedExtArray: [string, unknown][],\n    newCustomExt: { $ref: string; description: string; key: string }\n) {\n    const targetRemainingIndex = Object.entries(remainingExtensions)\n        .filter(([key]) => key !== extId)\n        .findIndex(\n            ([_key, entry]) =>\n                entry.position?.placement === 'Before' && entry.position?.anchor === extension.position?.anchor\n        );\n    if (targetRemainingIndex === -1) {\n        sortedExtArray.splice(sortedExtArray.length, 0, [extId, newCustomExt]);\n        delete remainingExtensions[extId];\n    }\n}\n\n/**\n * Post-processing of custom extensions that are left after the first loop of adding extensions, i.e. custom extensions referring to other custom extensions\n * @param remainingExtensions - list of custom extensions that are left for post-processing\n * @param extensionDefinitionName - custom extension definition name, different in LR and OP\n * @param sortedExtArray - sorted array of annotation-based extensions, to be updated\n * @param logger - logger for error messages\n * @param {boolean} forceAdd - add self-referencing custom extensions after other additions\n */\nfunction adjustCustomExtReferringToCustomExt(\n    remainingExtensions: CustomExtensions,\n    extensionDefinitionName: string,\n    sortedExtArray: [string, unknown][],\n    logger: ExtensionLogger,\n    forceAdd = false\n): void {\n    const initialRemaining = Object.entries(remainingExtensions).length;\n    const getExtensionDetails = (extension: CustomExtension, extId: string) => {\n        const description = getExtensionText(extension);\n        return {\n            $ref: `${DEFINITION_LINK_PREFIX}${extensionDefinitionName}`,\n            description,\n            key: `Key: ${extId}`\n        };\n    };\n    for (const extId in remainingExtensions) {\n        const extension = remainingExtensions[extId];\n        // Detect description based on extension in manifest\n        const newCustomExt = getExtensionDetails(extension, extId);\n        if (extension.position?.anchor && extension.position?.placement) {\n            const targetIndex = sortedExtArray.findIndex((element) => element[0] === extension.position.anchor);\n            if (targetIndex > -1) {\n                addExtensionToSortedArray(extension, sortedExtArray, targetIndex, extId, newCustomExt);\n                delete remainingExtensions[extId];\n            } else if (\n                extId === extension.position.anchor ||\n                Object.keys(remainingExtensions).indexOf(extension.position.anchor) === -1\n            ) {\n                log(logger, {\n                    severity: LogSeverity.Error,\n                    message: i18next.t('INVALIDANCHOR', { id: extId, anchor: extension.position.anchor }),\n                    location: {\n                        path: MANIFESTPATH,\n                        range: [ManifestSection.generic]\n                    }\n                });\n                sortedExtArray.splice(sortedExtArray.length, 0, [extId, newCustomExt]);\n                delete remainingExtensions[extId];\n            } else if (forceAdd) {\n                addRemainingTargetByBefore(remainingExtensions, extId, extension, sortedExtArray, newCustomExt);\n            }\n        }\n    }\n    const endRemaining = Object.entries(remainingExtensions).length;\n    if (endRemaining > 0 && initialRemaining !== endRemaining) {\n        adjustCustomExtReferringToCustomExt(remainingExtensions, extensionDefinitionName, sortedExtArray, logger);\n    } else if (endRemaining > 0) {\n        adjustCustomExtReferringToCustomExt(remainingExtensions, extensionDefinitionName, sortedExtArray, logger, true);\n    }\n}\n\n/**\n * Returns anchor for extension. Priority:\n * 1. 'anchor' property in extension;\n * 2. When 'anchor' is not defined in extension and does calculation based placement and current list of extension and annotation entries.\n * @param extension - extension in manifest\n * @param sortedExtensionsArray - sorted array of annotation-based nodes, to be enhanced by extensions\n */\nfunction getExtensionAnchor(extension: CustomExtension, sortedExtensionsArray: [string, unknown][]): string {\n    // Default placement is After\n    const placement = extension.position?.placement || v4.Placement.After;\n    let anchor = extension.position?.anchor;\n    if (!anchor) {\n        // Simulate runtime behavior - if there no anchor, then logic uses first or last annotation node\n        // In some cases last extension can be previously inserted extension - in such case we still need use annotation node\n        const index = placement === v4.Placement.Before ? 0 : sortedExtensionsArray.length - 1;\n        anchor = sortedExtensionsArray[index] ? sortedExtensionsArray[index][0] : undefined;\n    }\n    return anchor;\n}\n\n/**\n * Adds extension at the right position of the sorted array of annotation-based nodes\n * @param extensions - list of extensions in manifest\n * @param sortedExtensionsArray - sorted array of annotation-based nodes, to be enhanced by extensions\n * @param extensionDefinitionName - extension definition name, different in LR and OP\n * @param loggeloggerr - logger for error messages\n */\nfunction addExtensionToArray(\n    extensions: CustomExtensions,\n    sortedExtensionsArray: [string, unknown][],\n    extensionDefinitionName: string,\n    templatePropertyName = 'template',\n    logger?: ExtensionLogger\n): [string, unknown][] {\n    const annotationEntries = [...sortedExtensionsArray];\n    const localExtensions = { ...extensions };\n    for (const extensionId in localExtensions) {\n        const extension = localExtensions[extensionId];\n        if (!(templatePropertyName in extension)) {\n            // Skip regular entries(columns, actions, etc.)\n            delete localExtensions[extensionId];\n            continue;\n        }\n        const newExtensionReference = {\n            $ref: `${DEFINITION_LINK_PREFIX}${extensionDefinitionName}`,\n            description: getExtensionText(extension) || extensionId,\n            key: `Key: ${extensionId}`\n        };\n        const anchor = getExtensionAnchor(extension, annotationEntries);\n        if (anchor) {\n            const targetIndex = sortedExtensionsArray.findIndex((element) => element[0] === anchor);\n            if (targetIndex > -1) {\n                addExtensionToSortedArray(\n                    extension,\n                    sortedExtensionsArray,\n                    targetIndex,\n                    extensionId,\n                    newExtensionReference\n                );\n                delete localExtensions[extensionId];\n            }\n        } else {\n            // Empty array - no any anchor to reference to\n            sortedExtensionsArray.push([extensionId, newExtensionReference]);\n            delete localExtensions[extensionId];\n        }\n    }\n    if (Object.keys(localExtensions).length > 0) {\n        //Second loop is necessary for custom columns that refer to custom columns\n        adjustCustomExtReferringToCustomExt(localExtensions, extensionDefinitionName, sortedExtensionsArray, logger);\n    }\n    return sortedExtensionsArray;\n}\n\n/**\n * Common function for enhancing the LineItems definition of app schema by custom columns\n * @param appSchema - app-specific JSON schema\n * @param v4Page - actual page in the manifest\n * @param logger - logger for error messages\n * @param customColumnDefinitionName - custom column definition name\n * @param sectionId - identifier of the current object page section in schema\n * @param sectionIdInManifest - identifier of the current object page section in manifest\n */\nexport function addCustomColumnDefinition(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    logger: ExtensionLogger,\n    customColumnDefinitionName: string = DefinitionName.CustomColumn,\n    sectionId?: string,\n    sectionIdInManifest?: string\n): void {\n    const lineItemId = sectionId || DefinitionName.LineItems;\n    const lineItems = appSchema.definitions[lineItemId];\n    if (!lineItems) {\n        return;\n    }\n    //sort line items\n    let sortedColumnsArray = sortPropertiesRecords(lineItems);\n\n    const id = sectionIdInManifest ? sectionIdInManifest.replace(/::/g, '/') : `@${UIAnnotationTerms.LineItem}`;\n    const columns = v4Page.options?.settings?.controlConfiguration?.[id]?.['columns'];\n    if (columns) {\n        sortedColumnsArray = addExtensionToArray(\n            columns,\n            sortedColumnsArray,\n            customColumnDefinitionName,\n            undefined,\n            logger\n        );\n    }\n    //Adjust propertyIndex\n    for (let index = 0; index < sortedColumnsArray.length; index++) {\n        sortedColumnsArray[index][1][SchemaTag.propertyIndex] = index;\n    }\n    const sortedColumnsAsObject = {};\n    sortedColumnsArray.forEach(([key, value]) => (sortedColumnsAsObject[key] = value));\n    (appSchema.definitions[lineItemId] as Definition).properties = sortedColumnsAsObject;\n}\n\n/**\n * Processes a LineItem record of type DataFieldForAction during app schema generation\n * @param {LineItemDataForSchema} data: structure of input data\n * @param actions - actions definition in schema, parent object\n * @param lineItemPath - annotation path to the line item\n * @param lineItemRecord - actual record of the line item collection\n * @param recordIndex - record index in the collection\n */\nfunction addActionRecordToSchema(\n    data: LineItemDataForSchema,\n    actionsDefinition: Definition,\n    lineItemPath: string,\n    lineItemRecord: DataFieldForActionAbstractTypes,\n    recordIndex: number\n): void {\n    // Action but not inline action\n    if (lineItemRecord.Determining !== true) {\n        //no footer bar -> toolbar action\n        let actionDefinitionName: DefinitionName;\n        if (data.lineItemId.startsWith(DefinitionName.LineItemsOfView)) {\n            actionDefinitionName = DefinitionName.ViewToolBarAction;\n        } else if (data.lineItemId.startsWith(DefinitionName.LineItems)) {\n            actionDefinitionName = DefinitionName.ToolBarAction;\n        } else {\n            actionDefinitionName = DefinitionName.ObjectPageToolBarAction;\n        }\n        const actionId = (lineItemRecord.Action as string).replace('/', '??');\n        const description = getDataFieldDescription(lineItemRecord as DataFieldAbstractTypes, data.entityType);\n        const prefix = lineItemRecord.$Type.split(`${UIVOCABULARY}.`)[1];\n        const actionDefinition = (actionsDefinition.properties[`${prefix}::${lineItemRecord.Action as string}`] = {\n            $ref: getFacetDefinitionLink(actionDefinitionName, prepareRef(actionId)),\n            description\n        });\n        const { key, ns } = getActionKey(lineItemRecord.Action as string, true);\n        actionDefinition[SchemaTag.propertyIndex] = recordIndex;\n        actionDefinition[SchemaTag.key] = `Action: ${key}`;\n        if (ns) {\n            actionDefinition[SchemaTag.target] = ns;\n        }\n        actionDefinition[SchemaTag.annotationType] = lineItemRecord.$Type;\n        const action = parseSchemaDefinition(actionDefinitionName, prepareRef(actionId), data.appSchema);\n        action[SchemaTag.annotationPath] = `${lineItemPath}/${recordIndex}`;\n    }\n}\n\n/**\n * Processes a LineItem record of type DataField during app schema generation\n * @param {LineItemDataForSchema} data: structure of input data\n * @param lineItem - object comprising the line item information:\n * { lineItemRecord, lineItemId, lineItemPath }\n * @param columnDefinitionName - Schema definition name for the column\n * @param recordIndex - record index in the collection\n */\nfunction addLineItemRecordToSchema(\n    data: LineItemDataForSchema,\n    lineItem: object,\n    columnDefinitionName: string,\n    recordIndex: number\n) {\n    const lineItemId = lineItem['lineItemId'];\n    const lineItemRecord = lineItem['lineItemRecord'];\n    if (lineItemRecord['Target']?.['value']) {\n        const regex = `@${findAlias(UIVOCABULARY, data.oDataServiceAVT)}.`;\n        lineItemRecord['Target']['value'] = lineItemRecord['Target']['value'].replace(regex, '@');\n    }\n    const schemaKey = getStableIdPartFromDataField(lineItemRecord);\n    if (schemaKey) {\n        const properties = (data.appSchema.definitions[lineItemId] as Definition).properties;\n        properties[schemaKey] = {\n            $ref: DEFINITION_LINK_PREFIX + columnDefinitionName,\n            description: getDataFieldDescription(lineItemRecord, data.entityType)\n        };\n        properties[schemaKey][SchemaTag.annotationType] = lineItemRecord?.$Type;\n        properties[schemaKey][SchemaTag.annotationPath] = `${lineItem['lineItemPath']}/${recordIndex}`;\n        properties[schemaKey][SchemaTag.propertyIndex] = recordIndex;\n        if (lineItemRecord['Value']?.$target?.type) {\n            properties[schemaKey][SchemaTag.dataType] = lineItemRecord['Value']?.$target?.type.replace('Edm.', '');\n        }\n        addKeyToDefinition(lineItemRecord, properties, schemaKey);\n    }\n}\n\nexport type LineItemDataForSchema = {\n    appSchema: Definition;\n    lineItemAnnotation: AnnotationTerm<LineItem>;\n    entityType: EntityType;\n    oDataServiceAVT: ConvertedMetadata;\n    lineItemId: string;\n};\n\n/**\n * Adds the line item definition, columns and actions to the app schema (for the list report or an object page section comprising a table)\n * @param {LineItemDataForSchema} data: structure comprising\n * - appSchema - the app specific schema that shall get enhanced\n * - lineItemAnnotation - the UI.LineItem annotation, comprising all records\n * - entityType - the entity type as part of the AVT ConvertedMetadata\n * - oDataServiceAVT - complete service information, as returned by Annotation Vocabularies Tool\n * - lineItemId - in case of OP the parameter must be passed to distinguish the OP tables;\n *                in case of LR or ALP 'LineItems' is passed.\n * @param columnDefinitionName - name of the column definition, i.e. TableColumn or ObjectPageTableColumn\n * @param customColumnDefinitionName - name of the custom column definition\n */\nexport function addLineItemsTypeToSchema(\n    data: LineItemDataForSchema,\n    columnDefinitionName: string = DefinitionName.TableColumn,\n    customColumnDefinitionName: string = DefinitionName.CustomColumn,\n    customActionDefinitionName: string = DefinitionName.CustomAction\n): void {\n    const { actions, lineItemPath } = addCommonLineItemDefinitions(\n        data.appSchema,\n        data.lineItemAnnotation,\n        data.entityType,\n        data.lineItemId,\n        customColumnDefinitionName,\n        customActionDefinitionName\n    );\n\n    if (!data.lineItemAnnotation) {\n        return;\n    }\n    let i = 0;\n    data.lineItemAnnotation.forEach((lineItemRecord) => {\n        if (\n            (lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction ||\n                lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) &&\n            (lineItemRecord.Inline !== true || lineItemRecord.Determining === true)\n        ) {\n            addActionRecordToSchema(data, actions, lineItemPath, lineItemRecord, i);\n        } else {\n            const lineItem = { lineItemRecord, lineItemId: data.lineItemId, lineItemPath };\n            const columnDefinition =\n                lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction\n                    ? `${columnDefinitionName}Action`\n                    : columnDefinitionName;\n            addLineItemRecordToSchema(data, lineItem, columnDefinition, i);\n        }\n        i++;\n    });\n}\n\n/**\n * Adds an enum or value help to position > anchor of custom column\n * @param appSchema - app specific JSON schema\n * @param lineItemId - ID of the current line item in schema\n * @param v4Page - current page in manifest\n * @param positionName - ID of the definition of custom column position in schema\n * @param sectionIdInManifest - identifier of the current object page section in manifest\n */\nexport function addFragmentEnumForAnchor(\n    appSchema: Definition,\n    lineItemId: string,\n    v4Page: v4.SapUiAppPageV4,\n    positionName: string = DefinitionName.Position,\n    sectionIdInManifest?: string\n): void {\n    const columns = (appSchema.definitions[lineItemId] as Definition)?.properties;\n    const enumEntries = [];\n    if (columns) {\n        for (const key in columns) {\n            if (key !== 'custom') {\n                enumEntries.push(key);\n            }\n        }\n    }\n    const id = lineItemId !== DefinitionName.LineItems ? sectionIdInManifest : `@${UIAnnotationTerms.LineItem}`;\n    const columnsInManifest = v4Page.options?.settings?.controlConfiguration?.[id]?.['columns'];\n    if (columnsInManifest) {\n        for (const key in columnsInManifest) {\n            if (enumEntries.indexOf(key) === -1) {\n                enumEntries.push(key);\n            }\n        }\n    }\n    if (enumEntries.length > 0) {\n        (appSchema.definitions[positionName] as Definition).properties['anchor']['enum'] = enumEntries;\n    }\n}\n\n/**\n * Adds an enum or value help to position > anchor of custom column\n * @param appSchema - app specific JSON schema\n * @param definitionId - definition key of actions\n * @param positionName - target definition to update\n */\nexport function addEnumForActionAnchor(\n    appSchema: Definition,\n    definitionId: string,\n    positionName: string = DefinitionName.CustomActionPosition\n): void {\n    addDescriptiveEnumDefinition(appSchema, appSchema.definitions[definitionId], {\n        definition: positionName,\n        property: 'anchor'\n    });\n}\n\n/**\n * Find the relevant V4 page under the routing targets of manifest,json\n * @param pages - list of all pages in manifest\n * @param pageName - search criterion: page name\n * @param entitySet - search criterion: entity set\n * @param logger - logger for messages\n * @returns the page definition in manifest (if found)\n */\nexport function findPageV4(\n    pages: v4.SapUiAppPageV4[],\n    pageName: string,\n    entitySet: EntitySet,\n    logger: ExtensionLogger\n): v4.SapUiAppPageV4 | undefined {\n    let v4Page: v4.SapUiAppPageV4;\n    if (entitySet) {\n        for (const i in pages) {\n            if (\n                pages[i].options?.settings?.entitySet === entitySet.name &&\n                (pages[i].name === pageName ||\n                    (pageName === v4.FE_TEMPLATE_V4_ALP && pages[i].name === v4.FE_TEMPLATE_V4_LIST_REPORT))\n            ) {\n                v4Page = pages[i];\n                break;\n            }\n        }\n    }\n    if (!v4Page) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYSET', { entitySet }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n    }\n    return v4Page;\n}\n\n/**\n * Depending on the template type, strip down the app schema so that only the relevant views are part of it\n * @param {Definition} appSchema - app specific JSON schema, to be adjusted\n * @param {GenerateAppSchemaParameters} generateParameters - object comprising all input parameters\n * @returns the right definition name for the table in the schema\n */\nexport function alignSchemaWithTemplateType(\n    appSchema: Definition,\n    generateParameters: GenerateAppSchemaParameters\n): DefinitionName.Table | DefinitionName.ALPTableView {\n    let tableDefinitionName;\n    const tableDefinition = appSchema.properties[PropertyName.table] as Definition;\n    if (generateParameters.templateType === TemplateType.AnalyticalListPageV4) {\n        tableDefinitionName = DefinitionName.ALPTableView;\n\n        delete tableDefinition.anyOf;\n        tableDefinition.$ref = `${DEFINITION_LINK_PREFIX}${DefinitionName.ALPTableView}`;\n        delete appSchema.definitions[DefinitionName.Table];\n        delete appSchema.definitions[DefinitionName.LRChartView];\n        delete appSchema.definitions[DefinitionName.LRTableView];\n        delete appSchema.definitions[DefinitionName.MultiTableModeV4];\n    } else if (generateParameters.templateType === TemplateType.ListReportObjectPageV4) {\n        tableDefinitionName = DefinitionName.Table;\n\n        delete tableDefinition.anyOf;\n        tableDefinition.$ref = `${DEFINITION_LINK_PREFIX}${DefinitionName.Table}`;\n        (appSchema.definitions[tableDefinitionName] as Definition).properties[PropertyName.annotationPath][\n            SchemaTag.hidden\n        ] = true;\n        delete appSchema.definitions[DefinitionName.ALPTableView];\n        appSchema.properties[PropertyName.defaultPath][SchemaTag.hidden] = true;\n    }\n    return tableDefinitionName;\n}\n\n/**\n * Common function for enhancing LineItems and FieldGroups definitions of app schema by custom action definitions\n * @param appSchema - app-specific JSON schema\n * @param v4Page - actual page in the manifest\n * @param logger - logger for error messages\n * @param customActionDefinitionName - definition name of custom action\n * @param sectionId - identifier of the current object page section in schema\n * @param sectionIdInManifest - identifier of the current object page section in manifest\n */\nexport function addCustomActionDefinition(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    logger: ExtensionLogger,\n    customActionDefinitionName: string = DefinitionName.CustomAction,\n    sectionId = '',\n    sectionIdInManifest = ''\n): void {\n    const definition = appSchema.definitions[sectionId];\n    if (!definition) {\n        return;\n    }\n    // Sort existing actions\n    let sortedActionsArray = sortPropertiesRecords(definition);\n\n    let configId;\n    if (sectionIdInManifest) {\n        if (customActionDefinitionName.indexOf(DefinitionName.FormCustomActionOP) !== -1) {\n            configId = sectionIdInManifest.replace(/::/g, '#');\n        } else {\n            configId = sectionIdInManifest.replace(/::/g, '/');\n        }\n    } else {\n        if (customActionDefinitionName === DefinitionName.FormCustomActionOP) {\n            configId = `@${UIAnnotationTerms.FieldGroup}`;\n        } else {\n            configId = `@${UIAnnotationTerms.LineItem}`;\n        }\n    }\n\n    const actions = v4Page.options?.settings?.controlConfiguration?.[configId]?.['actions'];\n    if (actions) {\n        sortedActionsArray = addExtensionToArray(\n            actions,\n            sortedActionsArray,\n            customActionDefinitionName,\n            'press',\n            logger\n        );\n    }\n    // Adjust propertyIndex\n    for (let index = 0; index < sortedActionsArray.length; index++) {\n        sortedActionsArray[index][1][SchemaTag.propertyIndex] = index;\n    }\n    const sortedActionsAsObject = {};\n    sortedActionsArray.forEach(([key, value]) => (sortedActionsAsObject[key] = value));\n    (appSchema.definitions[sectionId] as Definition).properties = sortedActionsAsObject;\n}\n", "import type { LineItemDataForSchema } from '../utils/utils';\nimport {\n    alignSchemaWithTemplateType,\n    addCustomColumnDefinition,\n    addFragmentEnumForAnchor,\n    addLineItemsTypeToSchema,\n    findPageV4,\n    addEnumForActionAnchor,\n    addCustomActionDefinition\n} from '../utils/utils';\n\nimport {\n    ArtifactType,\n    ManifestSection,\n    UIVOCABULARY,\n    TemplateType,\n    Visualization,\n    PropertyName,\n    DefinitionName,\n    FacetBase,\n    MANIFESTPATH,\n    SchemaTag,\n    LogSeverity,\n    UIVOCABULARYDOT\n} from '@sap/ux-specification-types';\nimport type { v4, GenerateAppSchemaParameters } from '@sap/ux-specification-types';\nimport type { AnnotationTerm, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { DataFieldAbstractTypes, LineItem, SelectionFields } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport i18next from 'i18next';\nimport { log } from '../../../extensionLogger';\nimport {\n    addEnumForSingleTabVariant,\n    createAnnotationPath,\n    DEFINITION_LINK_PREFIX,\n    determineDataType,\n    findAlias,\n    getDataFieldDescription,\n    getLabelForPropertyPath,\n    prepareRef,\n    parseSchemaDefinition,\n    addDefinitionRef,\n    getCustomExtensionDefinitionName,\n    getDefinitionKey\n} from '../../common';\nimport type { Definition } from 'typescript-json-schema';\n\n/**\n * Adds the selection fields to the app schema, as properties of the FilterBar\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param appSchema - the app specific schema that shall get enhanced\n * @param selectionFieldsAnnotation - the UI.SelectionField annotation\n */\nfunction addSelectionFields(\n    entityType: EntityType,\n    appSchema: object,\n    selectionFieldsAnnotation: AnnotationTerm<SelectionFields>\n): void {\n    const selectionFieldsDefinition = appSchema['definitions'].SelectionFields as Definition;\n    selectionFieldsDefinition.additionalProperties = false;\n    selectionFieldsDefinition.properties = {};\n    if (!entityType) {\n        return;\n    }\n    selectionFieldsDefinition[SchemaTag.annotationPath] = createAnnotationPath(\n        entityType.fullyQualifiedName,\n        UIAnnotationTerms.SelectionFields\n    );\n    if (!selectionFieldsAnnotation) {\n        return;\n    }\n    let i = 0;\n    selectionFieldsAnnotation.forEach((selectionField) => {\n        let description = selectionField.value;\n        const fieldDefinition = 'SelectionField::' + prepareRef(selectionField.value);\n        if (selectionField.type === 'PropertyPath') {\n            description = getLabelForPropertyPath(selectionField, entityType);\n        }\n        selectionFieldsDefinition['properties'][fieldDefinition] = {\n            $ref: DEFINITION_LINK_PREFIX + fieldDefinition\n        };\n        selectionFieldsDefinition['properties'][fieldDefinition][SchemaTag.propertyIndex] = i;\n        const dataType = determineDataType(selectionField);\n        appSchema['definitions'][fieldDefinition] = {\n            type: 'object',\n            properties: {},\n            description,\n            key: `Value: ${selectionField.value}`,\n            annotationPath: `${selectionFieldsDefinition[SchemaTag.annotationPath]}/${i}`,\n            isViewNode: true,\n            additionalProperties: false,\n            annotationType: selectionField?.type,\n            ...(dataType && { dataType })\n        };\n        i++;\n    });\n}\n\n/**\n * Convert alias prefix of visualization if different from @UI (e.g. SAP__UI)\n * @param visualization visualization of an (Selection)PresentationVariant\n * @param alias - the given alias or namespace of the OData annotations\n * @returns the converted visualization\n */\nfunction convertVisualization(visualization: string, alias: string): string | undefined {\n    if (visualization && !visualization.startsWith(`@${alias}`)) {\n        return visualization.replace(visualization.split('.')[0], '@UI');\n    } else {\n        return visualization;\n    }\n}\n\nfunction defineActions(\n    appSchema: Definition,\n    schemaIdForActions: string,\n    annotations,\n    targetAnnotation: string,\n    entityType: EntityType\n) {\n    appSchema.definitions[schemaIdForActions] = JSON.parse(JSON.stringify(appSchema.definitions['Actions']));\n    const actions = appSchema.definitions[schemaIdForActions] as Definition;\n    actions.properties = {};\n    actions.additionalProperties = false;\n    const chartAnnotation = annotations[targetAnnotation?.split(`${UIVOCABULARY}.`)[1]];\n    if (chartAnnotation && chartAnnotation.Actions) {\n        let i = 0;\n        chartAnnotation.Actions.forEach((actionRecord) => {\n            const actionDefinition = prepareRef(`${DefinitionName.ChartToolBarAction}<${actionRecord.Action}>`);\n            const description = getDataFieldDescription(actionRecord as DataFieldAbstractTypes, entityType);\n            const prefix = actionRecord.$Type.split(`${UIVOCABULARY}.`)[1];\n            const action = (actions.properties[`${prefix}::${actionRecord.Action}`] = {\n                $ref: DEFINITION_LINK_PREFIX + actionDefinition,\n                description\n            });\n            //Add tags\n            action[SchemaTag.propertyIndex] = i;\n            action[SchemaTag.annotationType] = actionRecord.$Type;\n            action[SchemaTag.annotationPath] = `/${actionRecord.fullyQualifiedName}`;\n            //as ChartToolBarAction is an empty object, copy ViewToolBarAction and remove properties\n            appSchema.definitions[actionDefinition] = JSON.parse(\n                JSON.stringify(appSchema.definitions[DefinitionName.ViewToolBarAction])\n            );\n            (appSchema.definitions[actionDefinition] as Definition).properties = {};\n            appSchema.definitions[actionDefinition][SchemaTag.annotationPath] = actionRecord.fullyQualifiedName;\n            i++;\n        });\n    }\n}\n\n/**\n * Finds the right visualization for a given view\n * @param allVisualizations - list of visualizations for the given (S)PV\n * @param alias - alias definition for the relevant namespace\n * @param namespace - namespace for the UI annotations\n * @param viewKey - view key: primary, secondary, or anything else; may also be undefined. The first visualization is taken in this case.\n * @param visualizationType - allows to find the right visualization if there are many.\n * @returns the value of the first fitting visualization\n */\nfunction findTheRightVisualization(\n    allVisualizations: Array<object>,\n    alias: string,\n    namespace: string,\n    viewKey?: string,\n    visualizationType?: Visualization\n): { visualization: string; targetAnnotation: string } {\n    let visualization: string, visualizationObject: object, targetAnnotation: string;\n    if (allVisualizations) {\n        if (viewKey === 'primary') {\n            visualizationObject = allVisualizations.find((vis) => {\n                return vis['value'].indexOf('Chart') > -1;\n            });\n        } else if (viewKey === 'secondary') {\n            visualizationObject = allVisualizations.find((vis) => {\n                return vis['value'].indexOf(FacetBase.LineItem) > -1;\n            });\n        } else {\n            if (visualizationType) {\n                visualizationObject = allVisualizations.find((v) => v['value'].indexOf(visualizationType) > -1);\n            } else {\n                visualizationObject = allVisualizations[0];\n            }\n        }\n        visualization = convertVisualization(visualizationObject?.['value'], alias);\n        if (visualizationObject?.['$target']?.fullyQualifiedName) {\n            targetAnnotation = `/${namespace}/${visualizationObject['$target'].fullyQualifiedName.split(namespace)[1]}`;\n        } else if (visualization) {\n            targetAnnotation = `/${namespace}/` + visualization.replace(`UI`, UIVOCABULARY);\n        }\n    }\n    return { visualization, targetAnnotation };\n}\n\n/**\n * An annotationPath must be analyzed, to find the right target annotation and visualization\n *\n */\nfunction analyzeChartAnnotation(\n    namespace: string,\n    annotationPath: string,\n    annotationAVT: object,\n    viewKey: string\n): { visualization: string; targetAnnotation: string; chartTitle: string } {\n    const visualization = '@UI.Chart';\n    const targetAnnotationFullName = `/${namespace}/@${annotationPath}`;\n    let chartTitle: string;\n\n    if (annotationAVT['Title']) {\n        chartTitle = annotationAVT['Title'];\n    } else {\n        chartTitle = `Chart View (${viewKey})`;\n    }\n    return { visualization, targetAnnotation: targetAnnotationFullName, chartTitle };\n}\n\n/**\n * An annotationPath must be analyzed, to find the right target annotation and visualization\n * @param annotationPath - given annotationPath\n * @param uIAnnotations - annotations of UI namespace of the given entityType\n * @param generateParameters - parameters required to generate app schema\n * @param viewKey - allows to distinguish the different view types (LR or ALP)\n * @param visualizationType - allows to find the right visualization if there are many.\n * @returns { visualization: string describing the visualization of the annotation,\n *            targetAnnotation: the target annotation behind the visualization\n *            namespace: namespace of the annotation,\n *            title: title to be shown, derived from the annotation }\n */\nfunction analyzeViewAnnotation(\n    annotationPath: string,\n    uIAnnotations: object,\n    generateParameters: GenerateAppSchemaParameters,\n    viewKey?: string,\n    visualizationType?: Visualization\n): { visualization: string; targetAnnotation: string; namespace: string; title: string } {\n    let namespace: string = undefined,\n        title: string;\n    const UILINEITEM = '@UI.LineItem';\n    const annotationInManifest = annotationPath?.split(`${UIVOCABULARY}.`)[1];\n    const annotationAVT = annotationInManifest && uIAnnotations[annotationInManifest];\n    if (!annotationAVT) {\n        return { visualization: undefined, targetAnnotation: undefined, namespace, title: `View (${viewKey})` };\n    }\n    title = annotationAVT.Text;\n    namespace = annotationAVT.fullyQualifiedName.split('@com.sap.vocabularies.UI.v1.')[0];\n    const alias = findAlias(UIVOCABULARY, generateParameters.serviceAVT);\n\n    if (annotationInManifest.startsWith('PresentationVariant')) {\n        const { visualization, targetAnnotation } = findTheRightVisualization(\n            annotationAVT.Visualizations,\n            alias,\n            namespace,\n            viewKey,\n            visualizationType\n        );\n        title = title || `View (${viewKey})`;\n        return { visualization, targetAnnotation, namespace, title };\n    } else if (annotationInManifest.startsWith('SelectionPresentationVariant')) {\n        let { visualization, targetAnnotation } = findTheRightVisualization(\n            annotationAVT.PresentationVariant.Visualizations,\n            alias,\n            namespace,\n            viewKey,\n            visualizationType\n        );\n        if (!visualization) {\n            visualization = UILINEITEM; // default visualization\n            targetAnnotation = `/${namespace}/` + visualization.replace(`UI`, UIVOCABULARY); // default targetAnnotation\n        }\n        title = title || `View (${viewKey})`;\n        return { visualization, targetAnnotation, namespace, title };\n    } else if (annotationInManifest.startsWith('SelectionVariant')) {\n        const visualization = UILINEITEM;\n        const targetAnnotation = `/${namespace}/@com.sap.vocabularies.UI.v1.LineItem`;\n        title = title || `Table View (${viewKey})`;\n        return { visualization, targetAnnotation, namespace, title };\n    } else if (annotationInManifest.startsWith('LineItem')) {\n        const visualization = UILINEITEM;\n        const targetAnnotation = `/${namespace}/@${annotationPath}`;\n        title = title || `Table View (${viewKey})`;\n        return { visualization, targetAnnotation, namespace, title };\n    } else if (annotationInManifest.startsWith('Chart')) {\n        const { visualization, targetAnnotation, chartTitle } = analyzeChartAnnotation(\n            namespace,\n            annotationPath,\n            annotationAVT,\n            viewKey\n        );\n        return { visualization, targetAnnotation, namespace, title: chartTitle };\n    }\n    return { visualization: undefined, targetAnnotation: undefined, namespace, title: `View (${viewKey})` };\n}\n\n/**\n * Adds the ALP chart view to the app-specific schema\n * @param {Definition} appSchema - app-specific JSON schema\n * @param targetAnnotation - target annotation of the chart view, as determined by analyzeViewAnnotation\n * @param annotations - UI annotations, as determined by AVT\n */\nfunction addALPChartView(appSchema: Definition, chartAnnotationPath: string, targetAnnotation: string, annotations) {\n    const chartView = appSchema.definitions[DefinitionName.ALPChartView] as Definition;\n    appSchema.definitions[DefinitionName.ALPChart] = JSON.parse(JSON.stringify(chartView));\n    delete appSchema.definitions[DefinitionName.ALPChart][SchemaTag.isViewNode];\n    if (targetAnnotation) {\n        appSchema.definitions[DefinitionName.ALPChart][SchemaTag.annotationPath] = targetAnnotation;\n    }\n    (appSchema.definitions[DefinitionName.ALPChart] as Definition).properties.annotationPath[SchemaTag.hidden] = true;\n\n    chartView.properties.annotationPath[SchemaTag.hidden] = true;\n    chartView.additionalProperties = false;\n    chartView.description = `Chart (key: primary)`;\n    chartView.title = `Chart`;\n    chartView.$ref = `${DEFINITION_LINK_PREFIX}${DefinitionName.ALPChart}`;\n    if (chartAnnotationPath) {\n        const viewAnnotation = chartAnnotationPath.split(UIVOCABULARYDOT)[1];\n        const pathParts = annotations[viewAnnotation].fullyQualifiedName.split('@');\n        chartView[SchemaTag.annotationPath] = `/${pathParts[0]}/@${pathParts[1]}`;\n    }\n    chartView[SchemaTag.artifactType] = ArtifactType.Manifest;\n    chartView[SchemaTag.key] = 'primary';\n}\n\n/**\n * Adds the ALP views to the app-specific schema\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {Array<Object>} viewsPaths - views' paths' section in the manifest\n * @param {EntityType} entityType - actual entity type of the page's entitySet\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param templateAnnotation - defaultTemplateAnnotationPath as registered in manifest\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n */\nfunction addALPViews(\n    appSchema: Definition,\n    viewsPaths: Array<Object>,\n    entityType: EntityType,\n    generateParameters: GenerateAppSchemaParameters,\n    templateAnnotation: string,\n    v4Page: v4.SapUiAppPageV4,\n    tableDefinitionName: string\n) {\n    const annotations = entityType.annotations.UI;\n    //1. Chart View\n    const chartAnnotationPath = viewsPaths?.[0]?.['primary']?.[0]?.[SchemaTag.annotationPath];\n    const { targetAnnotation } = analyzeViewAnnotation(chartAnnotationPath, annotations, generateParameters, 'primary');\n    addALPChartView(appSchema, chartAnnotationPath, targetAnnotation, annotations);\n    // Copy toolbar\n    const schemaIdForActions = `Actions<ALPChart>`;\n    (appSchema.definitions[DefinitionName.ViewChartToolBar] as Definition).properties.actions['$ref'] =\n        DEFINITION_LINK_PREFIX + schemaIdForActions;\n\n    defineActions(appSchema, schemaIdForActions, annotations, targetAnnotation, entityType);\n\n    //2. Table View\n    const { visualization: tableVisualization, targetAnnotation: target } = analyzeViewAnnotation(\n        viewsPaths?.[0]?.['secondary']?.[0]?.[SchemaTag.annotationPath],\n        annotations,\n        generateParameters,\n        'secondary'\n    );\n    const tableDefinition = appSchema.definitions[tableDefinitionName] as Definition;\n    if (tableVisualization || templateAnnotation) {\n        tableDefinition.properties.toolBar['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n        // Switch from generic column to specific definition\n        tableDefinition.properties['columns'] = {\n            $ref: DEFINITION_LINK_PREFIX + DefinitionName.LineItems\n        };\n        tableDefinition.properties.annotationPath[SchemaTag.hidden] = true;\n    } else {\n        tableDefinition.properties = {};\n    }\n    const tableView = appSchema.definitions[DefinitionName.ALPTableView] as Definition;\n    appSchema.definitions[DefinitionName.ALPTable] = JSON.parse(JSON.stringify(tableView));\n    delete appSchema.definitions[DefinitionName.ALPTable][SchemaTag.isViewNode];\n    tableView.additionalProperties = false;\n    tableView.description = `Table (key: secondary)`;\n    tableView.title = `Table`;\n    if (tableVisualization) {\n        delete tableView.properties;\n        tableView.$ref = `${DEFINITION_LINK_PREFIX}${DefinitionName.ALPTable}`;\n    } else if (!templateAnnotation) {\n        tableView.properties = {};\n    }\n    tableView[SchemaTag.artifactType] = ArtifactType.Manifest;\n\n    let annotationTerm: string, viewAnnotation: string;\n    if (tableVisualization && tableVisualization.indexOf(FacetBase.LineItem) > -1) {\n        annotationTerm = tableVisualization.split('.')[1];\n        viewAnnotation = viewsPaths[0]['secondary'][0].annotationPath.split(UIVOCABULARYDOT)[1];\n    } else if (templateAnnotation) {\n        annotationTerm = viewAnnotation = templateAnnotation.split(UIVOCABULARYDOT)[1];\n    }\n    if (annotationTerm) {\n        const dataForLineItem: LineItemDataForSchema = {\n            appSchema,\n            lineItemAnnotation: entityType.annotations.UI[annotationTerm] as AnnotationTerm<LineItem>,\n            entityType,\n            oDataServiceAVT: generateParameters.serviceAVT,\n            lineItemId: DefinitionName.LineItems\n        };\n        addLineItemsTypeToSchema(dataForLineItem, DefinitionName.ViewTableColumn);\n        appSchema.definitions[DefinitionName.ALPTable][SchemaTag.annotationPath] = target;\n        const pathParts = annotations[viewAnnotation].fullyQualifiedName.split('@');\n        tableView[SchemaTag.annotationPath] = `/${pathParts[0]}/@${pathParts[1]}`;\n        tableView[SchemaTag.key] = 'secondary';\n    }\n    addCustomColumnDefinition(appSchema, v4Page, generateParameters.logger);\n    // Table toolbar actions with custom actions\n    const schemaIdForToolbarActions = `${DefinitionName.Actions}<${prepareRef(DefinitionName.LineItems)}>`;\n    addCustomActionDefinition(appSchema, v4Page, generateParameters.logger, undefined, schemaIdForToolbarActions);\n    addEnumForActionAnchor(appSchema, schemaIdForToolbarActions, DefinitionName.CustomActionPosition);\n}\n\ntype ViewsParameters = {\n    viewKey: string;\n    appSchema: Definition;\n    targetAnnotation: string;\n    navPropName: string;\n    targetEntityType: EntityType;\n    title: string;\n};\n\n/**\n * Modifies the app schema, adds the right line chart settings\n * @param inputParameters - list of input parameters as collected by the calling instance\n * @param annotations - UI annotations of the given entityType\n * @returns the ID for the chart view in schema\n */\nfunction addViewChartDefinitions(inputParameters: ViewsParameters, annotations): string {\n    const idForChart = `${DefinitionName.LRChartView}<${inputParameters.viewKey}>`;\n    inputParameters.appSchema.definitions[idForChart] = JSON.parse(\n        JSON.stringify(inputParameters.appSchema.definitions[DefinitionName.LRChartView])\n    );\n    delete inputParameters.appSchema.definitions[idForChart][SchemaTag.isViewNode];\n    inputParameters.appSchema.definitions[idForChart][SchemaTag.annotationPath] = inputParameters.targetAnnotation;\n    if (inputParameters.navPropName) {\n        inputParameters.appSchema.definitions[idForChart]['navigationProperty'] = inputParameters.navPropName;\n    }\n    //Copy toolbar\n    const idForToolbar = `${DefinitionName.ViewChartToolBar}<${inputParameters.viewKey}>`;\n    inputParameters.appSchema.definitions[idForToolbar] = JSON.parse(\n        JSON.stringify(inputParameters.appSchema.definitions[DefinitionName.ViewChartToolBar])\n    );\n    inputParameters.appSchema.definitions[idForChart][\n        'properties'\n    ].toolBar.$ref = `${DEFINITION_LINK_PREFIX}${idForToolbar}`;\n    //Copy actions\n    const schemaIdForActions = `${DefinitionName.Actions}<${inputParameters.viewKey}>`;\n    defineActions(\n        inputParameters.appSchema,\n        schemaIdForActions,\n        annotations,\n        inputParameters.targetAnnotation,\n        inputParameters.targetEntityType\n    );\n    inputParameters.appSchema.definitions[idForToolbar]['properties'][PropertyName.actions][\n        '$ref'\n    ] = `${DEFINITION_LINK_PREFIX}${schemaIdForActions}`;\n\n    return idForChart;\n}\n\n/**\n * Adds the definition of a chart view to the app schema\n * @param inputParameters - list of input parameters as collected by the calling instance\n * @param UIAnnotations - AVT UI annotations of the given entity type\n * @param appSchema - app schema\n * @param viewsDefinition - the views definition in app schema (MultiTableModeV4)\n * @param viewKey - view key\n * @param title - view title\n */\nfunction addViewChart(\n    inputParameters: ViewsParameters,\n    UIAnnotations,\n    appSchema: Definition,\n    viewsDefinition: Definition,\n    viewKey: string,\n    title: string\n) {\n    const idForChart = addViewChartDefinitions(inputParameters, UIAnnotations);\n    (appSchema.definitions[idForChart] as Definition).properties.annotationPath[SchemaTag.hidden] = true;\n    (appSchema.definitions[idForChart] as Definition).properties.index[SchemaTag.hidden] = true;\n    (appSchema.definitions[idForChart] as Definition).properties.entitySet[SchemaTag.hidden] = true;\n    const titleOnHover = `Chart View (key: ${viewKey})`;\n    viewsDefinition.properties[viewKey] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${idForChart}`,\n        description: title ? title : titleOnHover,\n        title: titleOnHover\n    };\n}\n\n/**\n * Modifies the app schema, adds the right line item settings as derived from the visualization\n * @param inputParameters - list of input parameters as collected by the calling instance\n * @param viewsDefinition - the views definition in app schema (MultiTableModeV4)\n * @param visualization - visualization from the given (S)PV\n * @param templateAnnotation - defaultTemplateAnnotationPath as registered in manifest\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n */\nfunction addViewLineItems(\n    inputParameters: ViewsParameters,\n    viewsDefinition: Definition,\n    visualization: string,\n    templateAnnotation: string,\n    generateParameters: GenerateAppSchemaParameters\n): void {\n    const tableId = `${DefinitionName.LRTableView}<${inputParameters.viewKey}>`;\n    const viewId = `${DefinitionName.LineItemsOfView}::${inputParameters.viewKey}`;\n    const lrTableView = parseSchemaDefinition(\n        DefinitionName.LRTableView,\n        inputParameters.viewKey,\n        inputParameters.appSchema\n    );\n    delete lrTableView[SchemaTag.isViewNode];\n    lrTableView[SchemaTag.annotationPath] = inputParameters.targetAnnotation;\n    if (inputParameters.navPropName) {\n        lrTableView['navigationProperty'] = inputParameters.navPropName;\n    }\n    //Copy toolbar\n    addDefinitionRef(lrTableView.properties.toolBar as Definition, DefinitionName.ToolBar, viewId);\n    const title = `Table View (key: ${inputParameters.viewKey})`;\n    viewsDefinition.properties[inputParameters.viewKey] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${tableId}`,\n        description: inputParameters.title || title,\n        title\n    };\n    addDefinitionRef(lrTableView.properties.columns as Definition, viewId);\n    lrTableView.properties.annotationPath[SchemaTag.hidden] = true;\n    lrTableView.properties.index[SchemaTag.hidden] = true;\n    lrTableView.properties.entitySet[SchemaTag.hidden] = true;\n    const annotationTerm = visualization?.split('.')[1] || templateAnnotation.split(UIVOCABULARYDOT)[1];\n    const dataForLineItem: LineItemDataForSchema = {\n        appSchema: inputParameters.appSchema,\n        lineItemAnnotation: inputParameters.targetEntityType.annotations.UI[annotationTerm] as AnnotationTerm<LineItem>,\n        entityType: inputParameters.targetEntityType,\n        oDataServiceAVT: generateParameters.serviceAVT,\n        lineItemId: viewId\n    };\n    addLineItemsTypeToSchema(\n        dataForLineItem,\n        DefinitionName.ViewTableColumn,\n        DefinitionName.ViewCustomColumn,\n        DefinitionName.ViewCustomAction\n    );\n}\n\n/**\n * Adds the schema tags to a given view\n * @param viewsDefinition - the views definition in app schema (MultiTableModeV4)\n * @param viewKey - key property of the view\n * @param namespace - target namespace for annotations\n * @param view - the given view\n */\nfunction addTagsToView(viewsDefinition: Definition, viewKey: string, namespace: string, view: Object) {\n    viewsDefinition.properties[viewKey][SchemaTag.isViewNode] = true;\n    viewsDefinition.properties[viewKey][SchemaTag.annotationPath] = namespace\n        ? `/${namespace}/@${view[SchemaTag.annotationPath]}`\n        : undefined;\n    viewsDefinition.properties[viewKey][SchemaTag.artifactType] = ArtifactType.Manifest;\n    viewsDefinition.properties[viewKey][SchemaTag.key] = viewKey;\n}\n\n/**\n * Adjusts the entity type if a different entity set is maintained for a view\n * @param {EntitySet} entitySet - actual entity set (AVT information)\n * @param view - the current view in manifest\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {EntityType} entityType - actual entity type of the page's entitySet\n * @returns the target entity type\n */\nfunction getTargetEntityType(\n    entitySet: EntitySet,\n    view: Object,\n    generateParameters: GenerateAppSchemaParameters,\n    entityType: EntityType\n): EntityType {\n    let targetEntityType = entityType;\n    let viewEntitySet = entitySet;\n    if (view['entitySet'] && view['entitySet'] !== entitySet.name) {\n        viewEntitySet = generateParameters.serviceAVT?.entitySets.find((es) => {\n            return es.name === view['entitySet'];\n        });\n        targetEntityType = viewEntitySet.entityType;\n    }\n    return targetEntityType;\n}\n\n/**\n * Adds view custom extensions - custom column and custom action definitions\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} commonInputParameters - list of input parameters as collected by the calling instance\n * @param {string} visualization - visualization of the annotation\n * @param {SapUiAppPageV4} v4Page - the given page in manifest\n */\nfunction addViewCustomExtensions(\n    commonInputParameters: ViewsParameters,\n    generateParameters: GenerateAppSchemaParameters,\n    visualization: string,\n    v4Page: v4.SapUiAppPageV4\n) {\n    const sectionId = `${DefinitionName.LineItemsOfView}::${commonInputParameters.viewKey}`;\n    const navigationProperty = commonInputParameters.navPropName ? `${commonInputParameters.navPropName}/` : '';\n    const sectionIdInManifest = `${navigationProperty}@${UIAnnotationTerms.LineItem}${\n        visualization.split(Visualization.LineItem)[1]\n    }`;\n    const viewColumnDefinition = parseSchemaDefinition(\n        DefinitionName.ViewCustomColumn,\n        sectionId,\n        commonInputParameters.appSchema\n    );\n    addDefinitionRef(viewColumnDefinition.properties.position as Definition, DefinitionName.ViewPosition, sectionId);\n    parseSchemaDefinition(DefinitionName.ViewPosition, sectionId, commonInputParameters.appSchema);\n    addCustomColumnDefinition(\n        commonInputParameters.appSchema,\n        v4Page,\n        generateParameters.logger,\n        `${DefinitionName.ViewCustomColumn}<${sectionId}>`,\n        sectionId,\n        sectionIdInManifest\n    );\n    addFragmentEnumForAnchor(\n        commonInputParameters.appSchema,\n        sectionId,\n        v4Page,\n        `${DefinitionName.ViewPosition}<${sectionId}>` as DefinitionName,\n        sectionIdInManifest\n    );\n    // Remove generic position\n    if (commonInputParameters.appSchema.definitions.Position) {\n        delete commonInputParameters.appSchema.definitions.Position;\n        delete commonInputParameters.appSchema.definitions.TableCustomColumn;\n    }\n    // Table toolbar actions with custom actions\n    const schemaIdForToolbarActions = `${DefinitionName.Actions}<${sectionId}>`;\n    const customActionDefinitionKey = `${DefinitionName.ViewCustomAction}<${sectionId}>`;\n    addCustomActionDefinition(\n        commonInputParameters.appSchema,\n        v4Page,\n        generateParameters.logger,\n        customActionDefinitionKey,\n        schemaIdForToolbarActions,\n        sectionIdInManifest\n    );\n    // Anchor selection\n    parseSchemaDefinition(DefinitionName.ViewCustomActionPosition, sectionId, commonInputParameters.appSchema);\n    const customActionPositionDefinitionKey = `${DefinitionName.ViewCustomActionPosition}<${sectionId}>`;\n    const customActionDefinition = commonInputParameters.appSchema.definitions[customActionDefinitionKey] as Definition;\n    (\n        customActionDefinition.properties.position as Definition\n    ).$ref = `${DEFINITION_LINK_PREFIX}${customActionPositionDefinitionKey}`;\n    addEnumForActionAnchor(\n        commonInputParameters.appSchema,\n        schemaIdForToolbarActions,\n        customActionPositionDefinitionKey\n    );\n    // Remove generic position\n    if (commonInputParameters.appSchema.definitions.CustomActionPosition) {\n        delete commonInputParameters.appSchema.definitions.CustomActionPosition;\n    }\n}\n\n/**\n * Adds definition parts to a LR View (LineItem/Chart)\n * @param {string} templateAnnotation - defaultTemplateAnnotationPath as registered in manifest\n * @param {string} visualization - visualization of the annotation\n * @param viewsDefinition - the views definition in app schema (MultiTableModeV4)\n * @param {object} commonInputParameters - list of input parameters as collected by the calling instance\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page - the given page in manifest\n * @param uiAnnotations - UI annotations of the given entityType\n * @paran view - the given view\n */\nfunction addLRViewParts(\n    visualization: string,\n    viewsDefinition: Definition,\n    commonInputParameters: ViewsParameters,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4,\n    uiAnnotations: object,\n    view: object\n) {\n    if (visualization?.indexOf(Visualization.LineItem) > -1) {\n        //Add Line item view\n        addViewLineItems(\n            commonInputParameters,\n            viewsDefinition,\n            visualization,\n            commonInputParameters.targetAnnotation,\n            generateParameters\n        );\n        addViewCustomExtensions(commonInputParameters, generateParameters, visualization, v4Page);\n    } else if (visualization?.indexOf('Chart') > -1) {\n        //Add Chart view\n        addViewChart(\n            commonInputParameters,\n            uiAnnotations,\n            commonInputParameters.appSchema,\n            viewsDefinition,\n            commonInputParameters.viewKey,\n            commonInputParameters.title\n        );\n    } else if (view['template']) {\n        const titleOnHover = view['label'] || `Custom View (key: ${commonInputParameters.viewKey})`;\n        viewsDefinition.properties[commonInputParameters.viewKey] = {\n            description: commonInputParameters.title || titleOnHover,\n            title: titleOnHover,\n            // Default view - use table view reference as default\n            $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.TableViewExtension}`\n        };\n    } else {\n        const titleOnHover = `View (key: ${commonInputParameters.viewKey})`;\n        viewsDefinition.properties[commonInputParameters.viewKey] = {\n            description: commonInputParameters.title || titleOnHover,\n            title: titleOnHover,\n            // Default view - use table view reference as default\n            $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.LRTableView}`\n        };\n    }\n}\n\n/**\n * Add list report views to the app-specific schema\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {Array<Object>} viewsPaths - views' paths' section in the manifest\n * @param {EntityType} entityType - actual entity type of the page's entitySet\n * @param {EntitySet} entitySet - actual entity set (AVT information)\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {string} templateAnnotation - defaultTemplateAnnotationPath as registered in manifest\n * @param {SapUiAppPageV4} v4Page - the given page in manifest\n */\nfunction addLRViews(\n    appSchema: Definition,\n    viewsPaths: Array<Object>,\n    entityType: EntityType,\n    entitySet: EntitySet,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4,\n    tableDefinitionName: DefinitionName.Table | DefinitionName.ALPTableView\n) {\n    const tableDefinition = appSchema.definitions[tableDefinitionName] as Definition;\n    tableDefinition.properties = {\n        annotationPath: tableDefinition.properties.annotationPath,\n        initialLoad: tableDefinition.properties.initialLoad,\n        views: tableDefinition.properties.views\n    };\n    const viewsDefinition = appSchema.definitions.MultiTableModeV4 as Definition;\n    for (const view of viewsPaths) {\n        if (!view[SchemaTag.key]) {\n            continue;\n        }\n        let navPropName: string = undefined;\n        const targetEntityType = getTargetEntityType(entitySet, view, generateParameters, entityType);\n        const uiAnnotations = targetEntityType.annotations.UI;\n        const { visualization, targetAnnotation, namespace, title } = analyzeViewAnnotation(\n            view?.[SchemaTag.annotationPath],\n            uiAnnotations,\n            generateParameters,\n            view[SchemaTag.key]\n        );\n        if (view['entitySet']) {\n            navPropName = entityType.navigationProperties.find((np) => {\n                return np.targetTypeName === namespace;\n            })?.name;\n        }\n        const viewKey = prepareRef(view[SchemaTag.key]);\n        const commonInputParameters: ViewsParameters = {\n            viewKey,\n            appSchema,\n            targetAnnotation,\n            navPropName,\n            targetEntityType,\n            title\n        };\n        addLRViewParts(\n            visualization,\n            viewsDefinition,\n            commonInputParameters,\n            generateParameters,\n            v4Page,\n            uiAnnotations,\n            view\n        );\n        addTagsToView(viewsDefinition, viewKey, namespace, view);\n    }\n}\n\n/**\n * Adapts the table definition in schema.\n * Evaluates the path depending on if defaultTemplateAnnotationPath or Selection-/PresentationVariant is present.\n * @param {SapUiAppPageV4} v4Page - the given page in manifest\n * @param {EntityType} entityType - the current entity type, as defined in AVT\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param appSchema - the app-specific JSON schema\n * @param alias - alias definition for the UI vocabulary\n */\nfunction adaptTableDefinition(\n    appSchema: Definition,\n    entityType: EntityType,\n    generateParameters: GenerateAppSchemaParameters,\n    templateAnnotation: string,\n    v4Page: v4.SapUiAppPageV4,\n    alias: string,\n    tableDefinitionName: DefinitionName.Table | DefinitionName.ALPTableView\n) {\n    //here: tableDefinitionName = DefinitionName.Table\n    const tableDefinition = appSchema.definitions[tableDefinitionName] as Definition;\n    const { visualization, targetAnnotation, namespace } = analyzeViewAnnotation(\n        templateAnnotation,\n        entityType.annotations.UI,\n        generateParameters,\n        undefined,\n        Visualization.LineItem\n    );\n    if (visualization) {\n        const annotationTerm = visualization.split('.')[1];\n        const annotationTermInSchema = `${DefinitionName.LineItems}OfSPV::${prepareRef(annotationTerm)}`;\n        const spvTable = (appSchema.definitions[`${tableDefinitionName}SPV`] = JSON.parse(\n            JSON.stringify(appSchema.definitions[tableDefinitionName])\n        ) as Definition);\n        delete spvTable[SchemaTag.isViewNode];\n        addDefinitionRef(spvTable.properties.toolBar as Definition, DefinitionName.ToolBar, annotationTermInSchema);\n        // Switch from generic column to specific definition\n        spvTable[SchemaTag.annotationPath] = targetAnnotation;\n        spvTable.properties.columns = {} as Definition;\n        addDefinitionRef(spvTable.properties.columns, annotationTermInSchema);\n\n        delete tableDefinition.properties;\n        addDefinitionRef(tableDefinition, `${tableDefinitionName}SPV`);\n        tableDefinition[SchemaTag.annotationPath] = `/${namespace}/@${templateAnnotation}`;\n        const lineItemAnnotation = entityType.annotations.UI[annotationTerm] as AnnotationTerm<LineItem>;\n        const dataForLineItem: LineItemDataForSchema = {\n            appSchema,\n            lineItemAnnotation,\n            entityType,\n            oDataServiceAVT: generateParameters.serviceAVT,\n            lineItemId: annotationTermInSchema\n        };\n        addLineItemsTypeToSchema(dataForLineItem);\n        const annotationTermQualifier = annotationTerm.split('#')?.[1];\n        const sectionIdInManifest = annotationTermQualifier\n            ? `@${UIAnnotationTerms.LineItem}#${annotationTermQualifier}`\n            : `@${UIAnnotationTerms.LineItem}`;\n        addCustomColumnDefinition(\n            appSchema,\n            v4Page,\n            generateParameters.logger,\n            undefined,\n            annotationTermInSchema,\n            sectionIdInManifest\n        );\n        addFragmentEnumForAnchor(appSchema, annotationTermInSchema, v4Page, undefined, sectionIdInManifest);\n        // Table toolbar actions with custom actions\n        const schemaIdForToolbarActions = `${DefinitionName.Actions}<${annotationTermInSchema}>`;\n        const customColumnDefinitionName = getCustomExtensionDefinitionName(\n            appSchema,\n            annotationTermInSchema,\n            DefinitionName.CustomAction\n        );\n        addCustomActionDefinition(\n            appSchema,\n            v4Page,\n            generateParameters.logger,\n            getDefinitionKey(customColumnDefinitionName),\n            schemaIdForToolbarActions,\n            sectionIdInManifest\n        );\n        addEnumForActionAnchor(appSchema, schemaIdForToolbarActions, DefinitionName.CustomActionPosition);\n    } else {\n        tableDefinition.properties.toolBar['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n        // Switch from generic column to specific definition\n        addDefinitionRef(tableDefinition.properties.columns as Definition, DefinitionName.LineItems);\n        const lineItemAnnotation = entityType?.annotations?.[alias]?.LineItem;\n        const dataForLineItem: LineItemDataForSchema = {\n            appSchema,\n            lineItemAnnotation,\n            entityType,\n            oDataServiceAVT: generateParameters.serviceAVT,\n            lineItemId: DefinitionName.LineItems\n        };\n        addLineItemsTypeToSchema(dataForLineItem);\n        addCustomColumnDefinition(appSchema, v4Page, generateParameters.logger);\n        addFragmentEnumForAnchor(appSchema, DefinitionName.LineItems, v4Page);\n        if (lineItemAnnotation) {\n            tableDefinition[SchemaTag.annotationPath] = createAnnotationPath(\n                entityType.fullyQualifiedName,\n                lineItemAnnotation.term,\n                lineItemAnnotation.qualifier\n            );\n        }\n        // Table toolbar actions with custom actions\n        const schemaIdForActions = `${DefinitionName.Actions}<${prepareRef(DefinitionName.LineItems)}>`;\n        addCustomActionDefinition(appSchema, v4Page, generateParameters.logger, undefined, schemaIdForActions);\n        addEnumForActionAnchor(appSchema, schemaIdForActions, DefinitionName.CustomActionPosition);\n    }\n}\n\n/**\n * Checks for the default annotation path to use for LR table\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n * @param {EntityType} entityType - actual entity type (AVT information)\n * @returns {string} annotation term\n */\nfunction getDefaultAnnotationPath(\n    v4Page: v4.SapUiAppPageV4,\n    entityType: EntityType,\n    templateType: TemplateType\n): string | undefined {\n    if (v4Page.options.settings?.views?.paths && templateType === TemplateType.ListReportObjectPageV4) {\n        return;\n    }\n    if (v4Page.options.settings?.defaultTemplateAnnotationPath) {\n        return v4Page.options.settings.defaultTemplateAnnotationPath;\n    }\n    if (templateType === TemplateType.ListReportObjectPageV4) {\n        return (\n            entityType.annotations.UI?.SelectionPresentationVariant?.term ||\n            entityType.annotations.UI?.PresentationVariant?.term\n        );\n    }\n}\n\n/**\n * Add views to schema (LR or ALP)\n * @param {Definition} appSchema - app-specific JSON schema\n * @param {SapUiAppPageV4} v4Page - actual page in the manifest\n * @param {EntityType} entityType - actual entity type (AVT information)\n * @param {EntitySet} entitySet - actual entity set (AVT information)\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n */\nfunction addTableAndViews(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    entityType: EntityType,\n    entitySet: EntitySet,\n    generateParameters: GenerateAppSchemaParameters,\n    alias: string\n): void {\n    const viewsPaths = v4Page.options?.settings?.views?.paths;\n    const defaultAnnotation = getDefaultAnnotationPath(v4Page, entityType, generateParameters.templateType);\n    const tableDefinitionName = alignSchemaWithTemplateType(appSchema, generateParameters);\n    if (generateParameters.templateType === TemplateType.ListReportObjectPageV4) {\n        if (viewsPaths) {\n            addLRViews(appSchema, viewsPaths, entityType, entitySet, generateParameters, v4Page, tableDefinitionName);\n        } else {\n            if (!v4Page.options?.settings?.views) {\n                (appSchema.definitions.MultiTableModeV4 as Definition).properties = {};\n            }\n            adaptTableDefinition(\n                appSchema,\n                entityType,\n                generateParameters,\n                defaultAnnotation,\n                v4Page,\n                alias,\n                tableDefinitionName\n            );\n        }\n        appSchema.properties[PropertyName.chart][SchemaTag.hidden] = true;\n    } else if (generateParameters.templateType === TemplateType.AnalyticalListPageV4) {\n        addALPViews(\n            appSchema,\n            viewsPaths,\n            entityType,\n            generateParameters,\n            defaultAnnotation,\n            v4Page,\n            tableDefinitionName\n        );\n        addFragmentEnumForAnchor(appSchema, DefinitionName.LineItems, v4Page);\n    }\n}\n\n/**\n * Generates an app specific schema for the FE V4 ListReport from the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema  - generic JSON schema of an object page\n * @param {EntitySet} entitySet - entity set (AVT object) that is relevant for the given page\n * @param {string} templateName - allows to distinguish list report from ALP\n *\n * @returns {object} application-specific schema of the list report\n */\nexport function generateListReportSchemaV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object,\n    entitySet: EntitySet,\n    templateName: string\n): object {\n    const appSchema: Definition = JSON.parse(JSON.stringify(genericSchema));\n    const entityType = entitySet?.entityType;\n    const alias = generateParameters.serviceAVT && findAlias(UIVOCABULARY, generateParameters.serviceAVT);\n    //Add selection fields\n    const selectionFieldAnnotation = alias && entityType?.annotations?.[alias]?.SelectionFields;\n    addSelectionFields(entityType, appSchema, selectionFieldAnnotation);\n\n    appSchema.properties[PropertyName.defaultTemplateAnnotationPath][SchemaTag.hidden] = true;\n\n    //enum for annotation path as part of QuickVariantSelection\n    addEnumForSingleTabVariant(entityType, appSchema, DefinitionName.AnnotationPathAsObject);\n\n    if (generateParameters.manifest) {\n        //Find page in targets\n        const pages = generateParameters.manifest[ManifestSection.ui5].routing\n            .targets as unknown as v4.SapUiAppPageV4[];\n        if (!pages) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOPAGES', { appId: generateParameters.manifest['sap.app']['id'] }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return appSchema;\n        }\n        const v4Page = findPageV4(pages, templateName, entitySet, generateParameters.logger);\n        if (!v4Page) {\n            return appSchema;\n        }\n        addTableAndViews(appSchema, v4Page, entityType, entitySet, generateParameters, alias);\n    }\n    delete appSchema.definitions.GenericColumns;\n    delete appSchema.definitions.Action;\n\n    return appSchema;\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { ExtensionLogger, GenerateAppSchemaParameters } from '../../..';\nimport type { PresentationVariantV4 } from '../types';\nimport type { AnnotationTerm, ConvertedMetadata, EntityType } from '@sap-ux/vocabularies-types';\nimport type {\n    Chart,\n    DataFieldAbstractTypes,\n    LineItem,\n    PresentationVariant\n} from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport i18next from 'i18next';\nimport { log } from '../../../extensionLogger';\nimport { UIAnnotationTerms, UIAnnotationTypes } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport {\n    v4,\n    FioriElementsVersion,\n    ManifestSection,\n    SectionType,\n    Visualization,\n    DefinitionName,\n    MANIFESTPATH,\n    METADATAPATH,\n    LogSeverity,\n    SchemaTag,\n    FacetBase,\n    UIVOCABULARYDOT\n} from '@sap/ux-specification-types';\nimport type { FacetConfig, FacetConfigs, FacetSection } from '@sap/ux-specification-types';\nimport {\n    DEFINITION_LINK_PREFIX,\n    addCommonHeaderSchema,\n    addDefinitionForRelatedFacetKeys,\n    addEnumForSingleTabVariant,\n    addFooterActions,\n    addHeaderActions,\n    addSectionTitleAndDescription,\n    addTargetTitleAndSectionDescription,\n    createDefaultSection,\n    determineDataType,\n    determineDataTypeOfTarget,\n    getActionNameAndId,\n    getDataFieldDescription,\n    getFacetAnnotationPath,\n    getFacetDefinitionLink,\n    getFacetKeyInSchema,\n    getObjectPageFacets,\n    getObjectPageHeaderFacets,\n    getObjectPageFacetSection,\n    handleAddressContact,\n    handleForm,\n    parseSchemaDefinition,\n    prepareRef,\n    replaceAlias\n} from '../../common';\nimport type { LineItemDataForSchema } from '../utils/utils';\nimport {\n    addCustomColumnDefinition,\n    addFragmentEnumForAnchor,\n    addLineItemsTypeToSchema,\n    findPageV4,\n    addCustomActionDefinition,\n    addEnumForActionAnchor\n} from '../utils/utils';\n\n/**\n * Callback for adding a single action to headerActions of V4\n * @param {EntityType} entityType - current entity type\n * @param {Definition} appSchema Schema of the app\n * @param actionAnnotation - annotation as present in AVT ConvertedMetadata\n * @param {Definition} headerActions - list of header actions, to be enhanced\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n */\nfunction addHeaderActionCallBackV4(\n    entityType,\n    appSchema: Definition,\n    actionAnnotation: any,\n    headerActions: {\n        type: string;\n        properties: {};\n        description: string;\n        additionalProperties: boolean;\n        isViewNode: boolean;\n    },\n    oDataServiceAVT: ConvertedMetadata\n): any {\n    return (item, index) => {\n        if (\n            (!item['Determining'] && item.$Type === UIAnnotationTypes.DataFieldForAction) ||\n            item.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n        ) {\n            const action = replaceAlias(item.Action, oDataServiceAVT);\n            const { actionName, actionId } = getActionNameAndId(action, entityType);\n            const convertedIdentification = actionAnnotation.fullyQualifiedName.replace(\n                `@${UIAnnotationTerms.Identification}`,\n                `/@${UIAnnotationTerms.Identification}`\n            );\n            const actionDefinitionKey = `HeaderAction<${prepareRef(actionId)}>`;\n            const headerAction = (appSchema.definitions[actionDefinitionKey] = {\n                type: 'object',\n                properties: {},\n                description: item.Label || actionName\n            });\n            headerAction[SchemaTag.isViewNode] = true;\n            headerAction[SchemaTag.key] = `Action: ${actionName}`;\n            headerAction[SchemaTag.annotationPath] = `/${convertedIdentification}/${index}`;\n            headerActions.properties[actionId] = {\n                $ref: `${DEFINITION_LINK_PREFIX}${actionDefinitionKey}`\n            };\n        }\n    };\n}\n\n/**\n * Object Page specific enhancements to addCustomColumnDefinition\n * @param {object} appSchema App schema in general\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {string} lineItemId - identifier of the current table in schema\n * @param {string} facetIdInManifest - identifier of the current object page section in manifest\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction addCustomColumnsOP(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    lineItemId: string,\n    facetIdInManifest: string,\n    logger: ExtensionLogger\n) {\n    // Create type specific copy of 'TableCustomColumnOP'\n    const useDefinitionAsKey =\n        lineItemId !== DefinitionName.LineItems &&\n        lineItemId !== 'LineItemsOfSPV::LineItem' &&\n        lineItemId !== '@com.sap.vocabularies.UI.v1.LineItem';\n    const customColumDefinitionKey = useDefinitionAsKey\n        ? `${DefinitionName.CustomColumnOP}<${lineItemId}>`\n        : DefinitionName.CustomColumnOP;\n    const customColumnDefinition = appSchema.definitions[customColumDefinitionKey] as Definition;\n    customColumnDefinition[SchemaTag.isViewNode] = true;\n    customColumnDefinition.description = 'Custom Column';\n\n    // Update definitions for type specific custom columns\n    const schemaId = `${DefinitionName.CustomColumnOP}<${lineItemId}>`;\n    addCustomColumnDefinition(appSchema, v4Page, logger, schemaId, lineItemId, facetIdInManifest);\n    const facetKey = useDefinitionAsKey ? lineItemId : DefinitionName.PositionOP;\n    parseSchemaDefinition(DefinitionName.PositionOP, facetKey, appSchema, useDefinitionAsKey);\n    const positionId = useDefinitionAsKey ? `${DefinitionName.PositionOP}<${lineItemId}>` : DefinitionName.PositionOP;\n    (customColumnDefinition.properties.position as Definition).$ref = `${DEFINITION_LINK_PREFIX}${positionId}`;\n    addFragmentEnumForAnchor(appSchema, lineItemId, v4Page, positionId, facetIdInManifest.replace(/::/g, '/'));\n}\n\n/**\n * Object Page specific enhancements to addCustomColumnDefinition\n * @param {object} appSchema App schema in general\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {string} lineItemId - identifier of the current table in schema\n * @param {string} facetIdInManifest - identifier of the current object page section in manifest\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction addCustomActionsOP(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    lineItemId: string,\n    facetIdInManifest: string,\n    logger: ExtensionLogger\n) {\n    // Create type specific copy of 'TableCustomActionOP'\n    const useDefinitionAsKey =\n        lineItemId !== DefinitionName.LineItems &&\n        lineItemId !== 'LineItemsOfSPV::LineItem' &&\n        lineItemId !== '@com.sap.vocabularies.UI.v1.LineItem';\n    const customActionDefinitionKey = useDefinitionAsKey\n        ? `${DefinitionName.CustomActionOP}<${lineItemId}>`\n        : DefinitionName.CustomActionOP;\n    const customActionDefinition = appSchema.definitions[customActionDefinitionKey] as Definition;\n    customActionDefinition[SchemaTag.isViewNode] = true;\n    customActionDefinition.description = 'Custom Action';\n    // Update definitions for type specific custom columns\n    const schemaId = `${DefinitionName.CustomActionOP}<${lineItemId}>`;\n    const schemaIdForActions = `${DefinitionName.Actions}<${prepareRef(lineItemId)}>`;\n    addCustomActionDefinition(appSchema, v4Page, logger, schemaId, schemaIdForActions, facetIdInManifest);\n    const facetKey = useDefinitionAsKey ? lineItemId : DefinitionName.CustomActionPositionOP;\n    parseSchemaDefinition(DefinitionName.CustomActionPositionOP, facetKey, appSchema, useDefinitionAsKey);\n    // Anchor selection\n    const positionId = useDefinitionAsKey\n        ? `${DefinitionName.CustomActionPositionOP}<${lineItemId}>`\n        : DefinitionName.CustomActionPositionOP;\n    (customActionDefinition.properties.position as Definition).$ref = `${DEFINITION_LINK_PREFIX}${positionId}`;\n    addEnumForActionAnchor(appSchema, schemaIdForActions, positionId);\n}\n\n/**\n * Object Page specific enhancements to handleFormIdentification\n * @param {object} appSchema App schema in general\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {string} formItemId - identifier of the current form in schema\n * @param {string} facetIdInManifest - identifier of the current object page section in manifest\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction addFormCustomActionsOP(\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4,\n    formItemId: string,\n    facetIdInManifest: string,\n    logger: ExtensionLogger\n) {\n    const useDefinitionAsKey = true;\n    const customActionDefinitionKey = useDefinitionAsKey\n        ? `${DefinitionName.FormCustomActionOP}<${formItemId}>`\n        : DefinitionName.FormCustomActionOP;\n    const customActionDefinition = appSchema.definitions[customActionDefinitionKey] as Definition;\n    customActionDefinition[SchemaTag.isViewNode] = true;\n    customActionDefinition.description = 'Custom Action';\n    const schemaId = `${DefinitionName.FormCustomActionOP}<${formItemId}>`;\n    const schemaIdForActions = `${DefinitionName.SectionActions}<${prepareRef(formItemId)}>`;\n    addCustomActionDefinition(appSchema, v4Page, logger, schemaId, schemaIdForActions, facetIdInManifest);\n    const facetKey = useDefinitionAsKey ? formItemId : DefinitionName.CustomActionPositionOP;\n    parseSchemaDefinition(DefinitionName.CustomActionPositionOP, facetKey, appSchema, useDefinitionAsKey);\n    // Anchor selection\n    const positionId = useDefinitionAsKey\n        ? `${DefinitionName.CustomActionPositionOP}<${formItemId}>`\n        : DefinitionName.CustomActionPositionOP;\n    (customActionDefinition.properties.position as Definition).$ref = `${DEFINITION_LINK_PREFIX}${positionId}`;\n    addEnumForActionAnchor(appSchema, schemaIdForActions, positionId);\n    if (appSchema.definitions[schemaIdForActions]) {\n        (appSchema.definitions[schemaIdForActions] as Definition).additionalProperties = {\n            $ref: `${DEFINITION_LINK_PREFIX}${customActionDefinitionKey}`\n        };\n    }\n}\n\n/**\n * Adds definitions for line items in object page sections to the app schema\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {string} facetKey - key of the facet, as used in annotation\n * @param {Definition} appSchema - app schema in general\n * @param {object} lineItemFacet - current lineItem facet\n * @param {ConvertedMetadata} oDataServiceAVT - complete service information, as returned by annotation vocabularies tool\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction handleLineItem(\n    facet: FacetConfig,\n    facetKey: string,\n    appSchema: Definition,\n    lineItemFacet: object,\n    oDataServiceAVT: ConvertedMetadata,\n    v4Page: v4.SapUiAppPageV4,\n    logger: ExtensionLogger\n): Definition {\n    const lineItemId = getFacetKeyInSchema(facetKey);\n    const index = facetKey.lastIndexOf('::');\n    const annotation = index > -1 ? facetKey.substring(index + 2) : facetKey;\n    const tableDefinition = parseSchemaDefinition(DefinitionName.ObjectPageTable, facetKey, appSchema);\n    if (facet.entityType && annotation) {\n        tableDefinition[SchemaTag.annotationPath] = `/${facet.entityType.fullyQualifiedName}/${annotation}`;\n    }\n    tableDefinition.properties.columns = {\n        $ref: `${DEFINITION_LINK_PREFIX}${lineItemId}`\n    };\n    (tableDefinition.properties.toolBar as Definition).$ref = getFacetDefinitionLink(\n        DefinitionName.ObjectPageToolBar,\n        facetKey\n    );\n    //adjust quickVariantSelection\n    (tableDefinition.properties.quickVariantSelection as Definition).$ref = getFacetDefinitionLink(\n        DefinitionName.QuickVariantSelectionV4OP,\n        facetKey\n    );\n    const tableQVS = parseSchemaDefinition(DefinitionName.QuickVariantSelectionV4OP, facetKey, appSchema);\n    tableQVS.properties.paths['items'].$ref = getFacetDefinitionLink(DefinitionName.AnnotationPathAsObject, facetKey);\n    parseSchemaDefinition(DefinitionName.AnnotationPathAsObject, facetKey, appSchema);\n\n    addEnumForSingleTabVariant(facet.entityType, appSchema, `${DefinitionName.AnnotationPathAsObject}<${lineItemId}>`);\n    const dataForLineItem: LineItemDataForSchema = {\n        appSchema,\n        lineItemAnnotation: lineItemFacet['target'] as AnnotationTerm<LineItem>,\n        entityType: lineItemFacet['entityType'],\n        oDataServiceAVT,\n        lineItemId\n    };\n    addLineItemsTypeToSchema(\n        dataForLineItem,\n        DefinitionName.ObjectPageTableColumn,\n        DefinitionName.CustomColumnOP,\n        DefinitionName.CustomActionOP\n    );\n    addCustomColumnsOP(appSchema, v4Page, lineItemId, facetKey, logger);\n    addCustomActionsOP(appSchema, v4Page, lineItemId, facetKey, logger);\n    return tableDefinition;\n}\n\n/**\n * Adds definitions for table section in object page sections to the app schema\n * @param {FacetConfig} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {Definition} appSchema - app specific schema that potentially gets enhanced.\n * @param {object} lineItemFacet - current lineItem facet\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n * @param {Definition} sections - schema of current sections definition.\n * @returns {object} sectionTable - section of app schema containing added table section\n */\nfunction handleSectionTable(\n    facet: FacetConfig,\n    facetKey: string,\n    appSchema: Definition,\n    lineItemFacet: FacetConfig,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page,\n    sections?: Definition\n): { sectionTable: Definition; table: Definition } {\n    if (sections) {\n        sections.properties[facetKey] = {\n            $ref: getFacetDefinitionLink(DefinitionName.ObjectPageSectionTableV4, facetKey)\n        };\n    }\n    const sectionTable = parseSchemaDefinition(DefinitionName.ObjectPageSectionTableV4, facetKey, appSchema);\n    addSectionTitleAndDescription(facet, sectionTable, getFacetKeyInSchema(facetKey));\n    sectionTable[SchemaTag.annotationPath] = facet.annotationPath;\n    sectionTable.properties.table['$ref'] = getFacetDefinitionLink(DefinitionName.ObjectPageTable, facetKey);\n    const table = handleLineItem(\n        facet,\n        facetKey,\n        appSchema,\n        lineItemFacet,\n        generateParameters.serviceAVT,\n        v4Page,\n        generateParameters.logger\n    );\n    return { sectionTable, table };\n}\n\n/**\n * Adds definitions for Identification and Form facet items in object page sections to the app schema\n * @param {FacetConfig} facet - current facet.\n * @param {v4.SapUiAppPageV4} v4Page Current page in manifest.\n * @param {string} facetKey - facet key.\n * @param {object} sections - schema of current sections definition.\n * @param {object} appSchema - app specific schema that potentially gets enhanced.\n * @param {SectionType} sectionPrefix - prefix to distinguish Section and HeaderSection\n * @param {ExtensionLogger} logger - logger for exceptions\n */\nfunction handleFormIdentification(\n    facet: FacetConfig,\n    v4Page: v4.SapUiAppPageV4,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    sectionPrefix: SectionType,\n    logger: ExtensionLogger\n) {\n    let definitionType: DefinitionName;\n    if (sectionPrefix === SectionType.Section) {\n        definitionType = DefinitionName.ObjectPageSectionForm;\n    } else if (sectionPrefix === SectionType.HeaderSection) {\n        definitionType = DefinitionName.ObjectPageHeaderSectionForm;\n    }\n    sections['properties'][facetKey] = {\n        $ref: getFacetDefinitionLink(definitionType, facetKey)\n    };\n    const formSection: Definition = parseSchemaDefinition(definitionType, facetKey, appSchema);\n    if (!facet.ID) {\n        formSection.properties = {};\n    }\n    addSectionTitleAndDescription(facet, formSection, facetKey);\n    formSection[SchemaTag.annotationPath] = facet.annotationPath;\n    formSection[SchemaTag.isViewNode] = true;\n    const withActions = facet.base === FacetBase.Identification && facetKey.indexOf('#') < 0 ? false : true;\n    const targetId = handleForm(sectionPrefix, facet, formSection, appSchema, FioriElementsVersion.v4, withActions);\n    if (facet.base === FacetBase.Form) {\n        const formItemId = getFacetKeyInSchema(facetKey);\n        parseSchemaDefinition(DefinitionName.FormCustomActionOP, targetId, appSchema);\n        addFormCustomActionsOP(appSchema, v4Page, targetId, formItemId, logger);\n    }\n}\n\n/**\n * Adds definitions for header sections (DataPoint, Chart) in object page sections to the app schema\n * @param {FacetConfig} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} sections - schema of current sections definition.\n * @param {object} appSchema - app specific schema that potentially gets enhanced.\n * @param {SectionType} facetDefinitionKey - key to identify new definition\n */\nfunction handleHeaderFacet(\n    facet: FacetConfig,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    facetDefinitionKey: string\n) {\n    sections['properties'][facetKey] = {\n        $ref: `${DEFINITION_LINK_PREFIX}${facetDefinitionKey}`\n    };\n    const sectionFacet = parseSchemaDefinition(\n        DefinitionName.CommonHeaderFacetSettings,\n        facetDefinitionKey,\n        appSchema,\n        false\n    );\n    addTargetTitleAndSectionDescription(facet, sectionFacet, facetKey);\n    sectionFacet[SchemaTag.annotationPath] = facet.annotationPath;\n    sectionFacet[SchemaTag.dataType] = determineDataTypeOfTarget(facet?.target);\n    sectionFacet[SchemaTag.isViewNode] = true;\n}\n\n/**\n * Adds definitions for Chart items in object page sections to the app schema\n * @param {FacetConfig | Chart | object} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} appSchema - app specific schema that potentially gets enhanced.\n * @param {EntityType} entityType - current entity type\n */\nfunction handleChartActions(\n    facet: FacetConfig | Chart | object,\n    facetKey: string,\n    appSchema: Definition,\n    entityType: EntityType\n): Definition {\n    const actions = parseSchemaDefinition(DefinitionName.ObjectPageToolBarActions, facetKey, appSchema);\n    actions.additionalProperties = false;\n    actions.properties = {};\n    if ((facet as Chart).Actions) {\n        let i = 0;\n        (facet as Chart).Actions.forEach((actionRecord) => {\n            const description = getDataFieldDescription(actionRecord as DataFieldAbstractTypes, entityType);\n            const prefix = actionRecord.$Type.split(UIVOCABULARYDOT)[1];\n            const actionId = (actionRecord.Action as string).replace('/', '??');\n            const toolBarActionsProperty = (actions.properties[`${prefix}::${actionRecord.Action}`] = {\n                $ref: getFacetDefinitionLink(DefinitionName.ObjectPageToolBarAction, actionId),\n                description\n            });\n            toolBarActionsProperty[SchemaTag.propertyIndex] = i;\n            toolBarActionsProperty[SchemaTag.annotationType] = actionRecord.$Type;\n            const toolBarAction = parseSchemaDefinition(\n                DefinitionName.ObjectPageToolBarAction,\n                prepareRef(actionId),\n                appSchema\n            );\n            toolBarAction[SchemaTag.annotationPath] = getFacetAnnotationPath(actionRecord);\n            toolBarAction[SchemaTag.dataType] = determineDataType(actionRecord);\n            toolBarAction.properties = {};\n            i++;\n        });\n    }\n    return actions;\n}\n\n/**\n * Adds definitions for Chart items in object page sections to the app schema\n * @param {FacetConfig | Chart | object} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} appSchema - app specific schema that potentially gets enhanced.\n * @param {EntityType} entityType - current entity type\n */\nfunction handleChart(\n    facet: FacetConfig | Chart | object,\n    facetKey: string,\n    appSchema: Definition,\n    entityType?: EntityType\n): { chart: Definition; chartActions: Definition } {\n    const chart = parseSchemaDefinition(DefinitionName.ObjectPageChart, facetKey, appSchema);\n    if (facet['Title']) {\n        chart.description = facet['Title'];\n    }\n    chart[SchemaTag.annotationPath] = getFacetAnnotationPath(facet as PresentationVariantV4);\n    chart[SchemaTag.dataType] = determineDataTypeOfTarget((facet as FacetConfig).target || facet);\n    chart[SchemaTag.isViewNode] = true;\n    chart.properties.toolBar['$ref'] = getFacetDefinitionLink(DefinitionName.ObjectPageToolBar, facetKey);\n    const chartToolBar = parseSchemaDefinition(DefinitionName.ObjectPageToolBar, facetKey, appSchema);\n\n    chartToolBar.properties.actions['$ref'] = getFacetDefinitionLink(DefinitionName.ObjectPageToolBarActions, facetKey);\n    const chartActions = handleChartActions(facet, facetKey, appSchema, entityType);\n    return { chart, chartActions };\n}\n\n/**\n * Adds definitions for Chart section in object page sections to the app schema\n * @param {FacetConfig} facet - current facet.\n * @param {string} facetKey - facet key.\n * @param {object} appSchema - app specific schema that potentially gets enhanced.\n * @param {object} sections - schema of current sections definition.\n * @param {EntityType} entityType - current entity type\n */\nfunction handleSectionChart(\n    facet: FacetConfig | Chart,\n    facetKey: string,\n    appSchema: Definition,\n    sections?: Definition,\n    entityType: EntityType = (facet as FacetConfig).entityType\n): { sectionChart: Definition; chart: Definition; chartActions?: Definition } {\n    if (sections) {\n        sections.properties[facetKey] = {\n            $ref: getFacetDefinitionLink(DefinitionName.ObjectPageSectionChart, facetKey)\n        };\n    }\n    const sectionChart = parseSchemaDefinition(DefinitionName.ObjectPageSectionChart, facetKey, appSchema);\n    addTargetTitleAndSectionDescription(facet as FacetConfig, sectionChart, facetKey);\n\n    sectionChart[SchemaTag.annotationPath] = getFacetAnnotationPath(facet);\n    sectionChart.properties.chart['$ref'] = getFacetDefinitionLink(DefinitionName.ObjectPageChart, facetKey);\n    const { chart, chartActions } = handleChart(\n        (facet as FacetConfig).target || facet,\n        facetKey,\n        appSchema,\n        entityType\n    );\n    return { sectionChart, chart, chartActions };\n}\n\n/**\n * Adds definitions for presentation variants in object page sections to the app schema\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {string} facetKey - key of the facet, as used in annotation\n * @param {Definition} appSchema - app schema in general\n * @param {object} sections - schema of current sections definition.\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n */\nfunction handleSectionPresentationVariant(\n    facet: FacetConfig,\n    facetKey: string,\n    appSchema: Definition,\n    sections: Definition,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4\n) {\n    let facetTarget, visualizationKey, target;\n    const visualizations = (facet.target as PresentationVariant).Visualizations;\n    const navPath = facetKey.lastIndexOf('::') > 0 ? facetKey.slice(0, facetKey.lastIndexOf('::')) : undefined;\n    if (visualizations?.[0]) {\n        if (visualizations[0].$target) {\n            facetTarget = visualizations[0].$target;\n            visualizationKey = `@${facetTarget.fullyQualifiedName.split('@')[1].split('/')[0]}`;\n            target = facetTarget;\n        } else {\n            facetTarget = visualizations[0];\n            visualizationKey =\n                '@' +\n                replaceAlias(`${facetTarget.targetString.split('@')[1].split('/')[0]}`, generateParameters.serviceAVT);\n            const navigationProp = generateParameters.entitySet.entityType.navigationProperties.find((prop) => {\n                return prop.name === navPath;\n            });\n            const targetType = navigationProp.targetType;\n            target = targetType.annotations.UI[visualizationKey.split(UIVOCABULARYDOT)[1]];\n        }\n    }\n    if (facetTarget) {\n        const visualizationType = visualizationKey.split(UIVOCABULARYDOT)[1];\n        const namespace = facet.target[SchemaTag.fullyQualifiedName].split('@')[0];\n        const fullVisualizationKey = navPath ? `${navPath}::${visualizationKey}` : visualizationKey;\n\n        if (visualizationType.startsWith(Visualization.Chart)) {\n            sections.properties[`${facetKey}<${visualizationKey}>`] = {\n                $ref: getFacetDefinitionLink(DefinitionName.ObjectPageSectionChart, fullVisualizationKey)\n            };\n            const { sectionChart, chart } = handleSectionChart(\n                facetTarget as Chart,\n                fullVisualizationKey,\n                appSchema,\n                undefined,\n                facet.entityType\n            );\n            sectionChart[SchemaTag.annotationPath] = facet.annotationPath;\n            addTargetTitleAndSectionDescription(facet, sectionChart, facetKey);\n            chart[SchemaTag.annotationPath] = `/${namespace}/${visualizationKey}`;\n        } else if (visualizationType.startsWith(Visualization.LineItem)) {\n            sections.properties[`${facetKey}<${visualizationKey}>`] = {\n                $ref: getFacetDefinitionLink(DefinitionName.ObjectPageSectionTableV4, fullVisualizationKey)\n            };\n            const { sectionTable, table } = handleSectionTable(\n                facet,\n                fullVisualizationKey,\n                appSchema,\n                { target, entityType: facet.entityType } as FacetConfig,\n                generateParameters,\n                v4Page\n            );\n            sectionTable[SchemaTag.annotationPath] = facet.annotationPath;\n            addTargetTitleAndSectionDescription(facet, sectionTable, facetKey);\n            delete sectionTable[SchemaTag.isViewNode];\n            table[SchemaTag.annotationPath] = `/${namespace}/${visualizationKey}`;\n        }\n    }\n}\n\n/**\n * Adds definitions for collections in object page sections to the app schema\n * @param {FacetConfig} facet - the given facet from the UI annotations\n * @param {string} facetKey - key of the facet, as used in annotation\n * @param {Definition} appSchema - app schema in general\n * @param {Definition} sections - schema of current sections definition.\n * @param {SectionType} sectionPrefix - prefix to distinguish Section and HeaderSection\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n */\nfunction handleCollection(\n    facet: FacetConfig,\n    facetKey: string,\n    appSchema: Definition,\n    sections: Definition,\n    sectionPrefix: SectionType,\n    generateParameters: GenerateAppSchemaParameters,\n    v4Page: v4.SapUiAppPageV4\n) {\n    const collectionFacet = (sections.properties[facetKey] = createDefaultSection(appSchema, facet, facetKey));\n    collectionFacet.properties = {\n        subsections: {\n            additionalProperties: false,\n            type: 'object',\n            properties: {},\n            description: 'Subsections'\n        }\n    };\n    const subSections = collectionFacet.properties.subsections;\n    subSections[SchemaTag.annotationPath] = facet.annotationPath;\n    subSections[SchemaTag.isViewNode] = true;\n    for (const key in facet.facets) {\n        addSection(generateParameters, facet.facets, key, subSections as Definition, appSchema, sectionPrefix, v4Page);\n    }\n}\n\n/**\n * Creates a section definition in app schema.\n * @param {GenerateSchemaParameters} generateParameters - list of API input parameters\n * @param {FacetConfigs} facets - list of all facets.\n * @param {string} facetKey - facet key.\n * @param {object} sections - schema of current sections definition.\n * @param {object} appSchema - app specific schema that potentially gets enhanced.\n * @param {SectionType} sectionPrefix - prefix to distinguish Section and HeaderSection\n * @param {SapUiAppPageV4} v4Page Current page in manifest\n */\nfunction addSection(\n    generateParameters: GenerateAppSchemaParameters,\n    facets: FacetConfigs,\n    facetKey: string,\n    sections: Definition,\n    appSchema: Definition,\n    sectionPrefix: SectionType,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    const facet: FacetConfig = facets[facetKey];\n    const facetDefinitionKey = `ObjectPage${sectionPrefix}${facet.base}<${getFacetKeyInSchema(facetKey)}>`;\n    switch (facet.base) {\n        case FacetBase.PresentationVariant: {\n            handleSectionPresentationVariant(facet, facetKey, appSchema, sections, generateParameters, v4Page);\n            break;\n        }\n        case FacetBase.CollectionFacet: {\n            handleCollection(facet, facetKey, appSchema, sections, sectionPrefix, generateParameters, v4Page);\n            break;\n        }\n        case FacetBase.LineItem: {\n            if (sectionPrefix === SectionType.Section) {\n                const lineItemFacet = facets[facetKey];\n                handleSectionTable(facet, facetKey, appSchema, lineItemFacet, generateParameters, v4Page, sections);\n            }\n            break;\n        }\n        case FacetBase.Form:\n        case FacetBase.Identification: {\n            handleFormIdentification(\n                facet,\n                v4Page,\n                facetKey,\n                sections,\n                appSchema,\n                sectionPrefix,\n                generateParameters.logger\n            );\n            break;\n        }\n        case FacetBase.DataPoint: {\n            handleHeaderFacet(facet, facetKey, sections, appSchema, facetDefinitionKey);\n            break;\n        }\n        case FacetBase.Chart: {\n            if (sectionPrefix === SectionType.HeaderSection) {\n                handleHeaderFacet(facet, facetKey, sections, appSchema, facetDefinitionKey);\n            } else if (sectionPrefix === SectionType.Section) {\n                handleSectionChart(facet, facetKey, appSchema, sections);\n            }\n            break;\n        }\n        case FacetBase.Address:\n        case FacetBase.Contact: {\n            handleAddressContact(facet, facetKey, sections, appSchema, sectionPrefix);\n            break;\n        }\n        default: {\n            sections['properties'][facetKey] = createDefaultSection(appSchema, facet, facetKey);\n        }\n    }\n}\n\n/**\n * Derives the sections from the UI.Facets annotation and adds them to the schema\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} appSchema - application specific JSON schema\n * @param {SapUiAppPageV4} v4Page - current page\n */\nfunction addSections(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    // Get facet annotations\n    const facets: FacetConfigs = getObjectPageFacets(\n        generateParameters.entitySet.entityType,\n        generateParameters.serviceAVT,\n        FioriElementsVersion.v4,\n        generateParameters.logger\n    );\n    if (!facets) {\n        delete appSchema.definitions[DefinitionName.ObjectPageSubSections];\n        return;\n    }\n\n    const sections = appSchema.definitions[DefinitionName.Sections] as Definition;\n\n    for (const facetKey in facets) {\n        addSection(generateParameters, facets, facetKey, sections, appSchema, SectionType.Section, v4Page);\n    }\n    // Custom sections as part of sections\n    if (appSchema.definitions[DefinitionName.CustomSections]) {\n        sections.properties = {\n            ...sections.properties,\n            ...(appSchema.definitions[DefinitionName.CustomSections] as Definition).properties\n        };\n    }\n}\n\n/**\n * Derives the header sections from the UI.HeaderFacets annotation and adds them to the schema\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} appSchema - application specific JSON schema\n * @param {EntityType} entityType - current entity type\n * @param {SapUiAppPageV4} v4Page - current page in manifest\n */\nfunction addHeaderSections(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    entityType: EntityType,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    // Get facet annotations\n    const facets: FacetConfigs = getObjectPageHeaderFacets(\n        entityType,\n        generateParameters.serviceAVT,\n        FioriElementsVersion.v4,\n        generateParameters.logger\n    );\n    const sections = appSchema.definitions[DefinitionName.HeaderSections] as Definition;\n    sections.properties = {};\n    sections.additionalProperties = false;\n\n    if (!facets) {\n        return;\n    }\n    for (const facetKey in facets) {\n        addSection(generateParameters, facets, facetKey, sections, appSchema, SectionType.HeaderSection, v4Page);\n    }\n    //delete generic definitions\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionForm];\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionChart];\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionDataPoint];\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionContact];\n    delete appSchema.definitions[DefinitionName.ObjectPageHeaderSectionAddress];\n}\n\n/**\n * Adds the related facets keys 'enum' to the app schema\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} schema - app specific schema that potentially gets enhanced\n * @param {string} entitySetName - entity set of the actual (object) page\n * @param {SapUiAppPageV4[]} pages - list of all pages\n */\nfunction addRelatedFacetKeysType(\n    generateParameters: GenerateAppSchemaParameters,\n    schema: object,\n    entitySetName: string,\n    pages: v4.SapUiAppPageV4[]\n): void {\n    Object.keys(pages).forEach((element) => {\n        if (\n            pages[element].options &&\n            pages[element].options.settings &&\n            pages[element].options.settings.entitySet === entitySetName &&\n            pages[element].name === v4.FE_TEMPLATE_V4_OBJECT_PAGE\n        ) {\n            // Find sections from annotation\n            const facetSections: FacetSection[] = getObjectPageFacetSection(\n                generateParameters.entitySet.entityType,\n                generateParameters.serviceAVT,\n                generateParameters.logger\n            );\n            // Find custom sections ids from manifest\n            const page: v4.SapUiAppPageV4 = pages[element];\n            if (\n                page.options &&\n                page.options.settings &&\n                page.options.settings.content &&\n                page.options.settings.content.body &&\n                page.options.settings.content.body.sections\n            ) {\n                Object.keys(page.options.settings.content.body.sections).forEach(function (key) {\n                    // Just in case - avoid duplications\n                    if (!facetSections.find((section: FacetSection) => section.key === key)) {\n                        facetSections.push({\n                            key,\n                            custom: true\n                        });\n                    }\n                });\n            }\n            // Update schema definition\n            addDefinitionForRelatedFacetKeys(schema, [DefinitionName.ObjectPageCustomSectionFragment], facetSections, [\n                'ID',\n                'label',\n                'key'\n            ]);\n        }\n    });\n}\n\n/**\n * Add Object Page Header to app-specific schema\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {Definition} appSchema Schema of the app\n * @param {SapUiAppPageV4} v4Page - current page in manifest\n */\nfunction addHeader(\n    generateParameters: GenerateAppSchemaParameters,\n    appSchema: Definition,\n    v4Page: v4.SapUiAppPageV4\n): void {\n    const entityType = generateParameters.entitySet.entityType;\n    addCommonHeaderSchema(appSchema, entityType);\n\n    // Add header actions\n    addHeaderActions(appSchema, entityType, generateParameters.serviceAVT, addHeaderActionCallBackV4);\n\n    // Add header sections\n    appSchema.definitions[DefinitionName.HeaderSections][\n        SchemaTag.annotationPath\n    ] = `/${entityType.fullyQualifiedName}/@${UIAnnotationTerms.HeaderFacets}`;\n    addHeaderSections(generateParameters, appSchema, entityType, v4Page);\n}\n\n/**\n * Generates an app specific schema out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema  - generic JSON schema of an object page\n * @param entityTypeName - the base entity type of the given page\n *\n * @returns the app specific JSON schema\n */\nexport function generateObjectPageSchemaV4(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object,\n    entityTypeName: string\n): object {\n    const appSchema: Definition = JSON.parse(JSON.stringify(genericSchema));\n\n    // Change reference to generated sections\n    appSchema.properties.sections = {\n        $ref: `${DEFINITION_LINK_PREFIX}${DefinitionName.Sections}`\n    };\n\n    const entitySet = generateParameters.serviceAVT?.entitySets?.find((es) => es.entityType.name === entityTypeName);\n    if (!entitySet) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYSET4NAME', { entityType: entityTypeName }),\n            location: {\n                path: METADATAPATH\n            }\n        });\n    }\n    generateParameters.entitySet = entitySet;\n\n    if (\n        !generateParameters.manifest[ManifestSection.ui5].routing ||\n        !generateParameters.manifest[ManifestSection.ui5].routing.targets\n    ) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTING'),\n            location: {\n                path: MANIFESTPATH\n            }\n        });\n        return appSchema;\n    }\n\n    //initialize sections\n    const sections = (appSchema.definitions[DefinitionName.Sections] = {\n        type: 'object',\n        properties: {},\n        additionalProperties: false,\n        description: DefinitionName.Sections\n    } as Definition);\n    sections[SchemaTag.isViewNode] = true;\n    if (entitySet) {\n        const pages = generateParameters.manifest[ManifestSection.ui5].routing\n            .targets as unknown as v4.SapUiAppPageV4[];\n        if (!pages) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOPAGES', { appId: generateParameters.manifest['sap.app']['id'] }),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return appSchema;\n        }\n        const v4Page = findPageV4(pages, v4.FE_TEMPLATE_V4_OBJECT_PAGE, entitySet, generateParameters.logger);\n        if (!v4Page) {\n            return appSchema;\n        }\n\n        // Add Header\n        addHeader(generateParameters, appSchema, v4Page);\n\n        // Add sections\n        sections[SchemaTag.isViewNode] = true;\n        sections[SchemaTag.annotationPath] = `/${entitySet.entityType.fullyQualifiedName}/@${UIAnnotationTerms.Facets}`;\n        addSections(generateParameters, appSchema, v4Page);\n\n        // Custom Section facets\n        addRelatedFacetKeysType(generateParameters, appSchema, entitySet.name, pages);\n\n        // Add Footer (actions only)\n        addFooterActions(appSchema, generateParameters);\n    }\n    // Delete generic definitions from schema\n    delete appSchema.definitions[DefinitionName.CommonHeaderFacetSettings];\n    delete appSchema.definitions[DefinitionName.GenericColumnsOP];\n    delete appSchema.definitions[DefinitionName.GenericSections];\n    delete appSchema.definitions[DefinitionName.ObjectPageChart];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionAddress];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionChart];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionContact];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionDataPoint];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionForm];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionTableV4];\n    delete appSchema.definitions[DefinitionName.ObjectPageSectionPresentationVariant];\n    delete appSchema.definitions[DefinitionName.ObjectPageSubSections];\n    delete appSchema.definitions[DefinitionName.ObjectPageTable];\n    delete appSchema.definitions[DefinitionName.ObjectPageToolBar];\n    delete appSchema.definitions[DefinitionName.ObjectPageToolBarAction];\n    delete appSchema.definitions[DefinitionName.ObjectPageToolBarActions];\n    delete appSchema.definitions[DefinitionName.QuickVariantSelectionV4OP];\n\n    return appSchema;\n}\n", "import type { GenerateAppSchemaParameters } from '@sap/ux-specification-types';\n\n/**\n * Generates an app specific schema for the FE V4 Freestyle page from the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema  - generic JSON schema of an object page\n *\n * @returns {object} application-specific schema of the freestyle page\n */\nexport function generateFreestyleSchemaV4(\n    _generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object\n): object {\n    return JSON.parse(JSON.stringify(genericSchema));\n}\n", "import { parseAndMergeAndConvert } from '../../common/utils';\nimport { generateFreestyleSchemaV4, generateListReportSchemaV4, generateObjectPageSchemaV4 } from '.';\nimport type { ExtensionLogger, GenerateAppSchemaParameters, FileData } from '@sap/ux-specification-types';\nimport { v4, FioriElementsVersion, TemplateType } from '@sap/ux-specification-types';\n\n/**\n * Generates the app specific schema of an object page out of the generic schema for the same page.\n * Generic types are replaced by information from the app specific annotations.\n *\n * @param genericSchema - generic JSON schema of a list report\n * @param entitySetName - the base entity set of the given page\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param manifest - manifest.json of the app\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param {FileData[]} fragments - list of fragment files and their content\n *\n * @returns the app specific JSON schema\n */\nexport function generateObjectPageInterfaceV4(\n    genericSchema: object,\n    entitySet: string,\n    annotations: FileData[],\n    manifest: object,\n    logger?: ExtensionLogger,\n    fragments?: FileData[]\n): object {\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType: TemplateType.ListReportObjectPageV4,\n        fioriElementsVersion: FioriElementsVersion.v4,\n        manifest,\n        fragments,\n        serviceAVT,\n        logger\n    };\n    return generateObjectPageSchemaV4(generateParameters, genericSchema, entitySet);\n}\n\n/**\n * Generates the app specific schema of a list report out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {TemplateType} templateType - the template type allows distinguishing LR and ALP\n * @param genericSchema - generic JSON schema of a list report\n * @param entitySetName - the base entity set of the given page\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param manifest - manifest.json of the app\n *\n * @returns the app specific JSON schema\n */\nexport function generateListReportInterfaceV4(\n    templateType: TemplateType,\n    genericSchema: object,\n    entitySetName: string,\n    annotations: FileData[],\n    logger?: ExtensionLogger,\n    manifest?: object\n): object {\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const entitySet = serviceAVT?.entitySets.find((es) => es.name === entitySetName);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        fioriElementsVersion: FioriElementsVersion.v4,\n        manifest,\n        serviceAVT,\n        logger\n    };\n\n    const templateName =\n        templateType === TemplateType.ListReportObjectPageV4 ? v4.FE_TEMPLATE_V4_LIST_REPORT : v4.FE_TEMPLATE_V4_ALP;\n    return generateListReportSchemaV4(generateParameters, genericSchema, entitySet, templateName);\n}\n\n/**\n * Generates the app specific schema of a freestyle page out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {TemplateType} templateType - the template type allows distinguishing LR and ALP\n * @param genericSchema - generic JSON schema of a list report\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param manifest - manifest.json of the app\n *\n * @returns the app specific JSON schema\n */\nexport function generateFreestyleInterfaceV4(\n    templateType: TemplateType,\n    genericSchema: object,\n    annotations: FileData[],\n    manifest?: object,\n    _entitySetName?: string,\n    logger?: ExtensionLogger\n): object {\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType,\n        fioriElementsVersion: FioriElementsVersion.v4,\n        manifest,\n        serviceAVT,\n        logger\n    };\n    return generateFreestyleSchemaV4(generateParameters, genericSchema);\n}\n", "import { syncRule, childId, validity } from '../common/decoration/decorators';\nimport type { v4, ViewTypes, Target, Manifest, Application } from '@sap/ux-specification-types';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { QUICKVARPATH } from '@sap/ux-specification-types';\nimport { controllerExtensions } from './sync-rules/controllerExtensions';\n\nexport const getSettingsPathForPage = (pageName: string[]): string => {\n    return `sap.ui5/routing/targets/${pageName[0]}/options/settings`;\n};\n\nexport const getSettingsPathForLRViewsPaths = (pageName: string[]): string => {\n    return getSettingsPathForPage(pageName) + `/views/paths`;\n};\n\nexport const getSettingsPathForHeaderOP = (pageName: string[]): string => {\n    return getSettingsPathForPage(pageName) + `/content/header`;\n};\n\nexport const getControlConfigurationPath = (pageName: string[]): string => {\n    return getSettingsPathForPage(pageName) + '/controlConfiguration';\n};\n\nexport const getHeaderFacetSettingPath = (pageName: string[], _manifest: Manifest, sectionId: string): string => {\n    return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.HeaderFacets}/facets/${sectionId}`;\n};\n\n/**\n * Common function that calculates the path in manifest for table settings of a list report or ALP table view\n * @param pageName - page name in manifest\n * @param manifest - manifest (not used)\n * @param targetAnnotationEncoded - encoded target annotation (not used)\n * @param viewKey - view key (not used)\n * @param targetAnnotation - target annotation, i.e. the line item (with or without qualifier)\n * @returns - path as string\n */\nexport const getTableSettingsPathForView = (\n    pageName: string[],\n    _manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    _viewKey: string,\n    targetAnnotation: string\n): string => {\n    const annotationEncoded = targetAnnotation?.replace(/\\//gi, '??');\n    return annotationEncoded\n        ? getControlConfigurationPath(pageName) + `/${annotationEncoded}/tableSettings`\n        : undefined;\n};\n\nexport const getTableSettingsPathForLR = (\n    pageName: string[],\n    manifest: Manifest,\n    targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    if (targetAnnotation) {\n        return getTableSettingsPathForView(pageName, manifest, targetAnnotationEncoded, columnKey, targetAnnotation);\n    } else {\n        return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.LineItem}/tableSettings`;\n    }\n};\n\nexport const getQuickVariantPath = (\n    pageName: string[],\n    manifest: Manifest,\n    targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    return (\n        getTableSettingsPathForLR(pageName, manifest, targetAnnotationEncoded, columnKey, targetAnnotation) +\n        QUICKVARPATH\n    );\n};\n\nexport const getColumnsPathForView = (\n    pageName: string[],\n    _manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    const annotationEncoded = targetAnnotation.replace(/\\//gi, '??');\n    return getControlConfigurationPath(pageName) + `/${annotationEncoded}/columns/${columnKey}`;\n};\n\nexport const getColumnsPathForLR = (\n    pageName: string[],\n    manifest: Manifest,\n    targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    if (targetAnnotation) {\n        return getColumnsPathForView(pageName, manifest, targetAnnotationEncoded, columnKey, targetAnnotation);\n    } else {\n        return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.LineItem}/columns/${columnKey}`;\n    }\n};\n\nexport const getActionsPathForView = (\n    pageName: string[],\n    _manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    const annotationEncoded = targetAnnotation.replace(/\\//gi, '??');\n    return getControlConfigurationPath(pageName) + `/${annotationEncoded}/actions/${columnKey}`;\n};\n\nexport const getActionsPathForLR = (\n    pageName: string[],\n    manifest: Manifest,\n    targetAnnotationEncoded: string,\n    columnKey: string,\n    targetAnnotation: string\n): string => {\n    if (targetAnnotation) {\n        return getActionsPathForView(pageName, manifest, targetAnnotationEncoded, columnKey, targetAnnotation);\n    } else {\n        return getControlConfigurationPath(pageName) + `/@${UIAnnotationTerms.LineItem}/actions/${columnKey}`;\n    }\n};\n\nexport const getColumnsPathForOP = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    columnKey: string\n): string => {\n    return getControlConfigurationPath(pageName) + `/${sectionId}/columns/${columnKey}`;\n};\n\nexport const getActionsPathForOP = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    columnKey: string\n): string => {\n    return getControlConfigurationPath(pageName) + `/${sectionId}/actions/${columnKey.replace('/', '??')}`;\n};\n\nexport const getTableSettingsPathForOP = (pageName: string[], _manifest: Manifest, sectionId: string): string => {\n    return getControlConfigurationPath(pageName) + `/${sectionId}/tableSettings`;\n};\n\nexport const getCustomSectionPath = (\n    pageName: string[],\n    _manifest: Manifest,\n    sectionId: string,\n    pathPart?: string\n): string => {\n    let path = getSettingsPathForPage(pageName) + `/content/body/sections/${sectionId}`;\n    if (pathPart) {\n        path += '/' + pathPart;\n    }\n    return path;\n};\n\nexport class ApplicationV4 implements Application {\n    $schema?: string;\n    id?: string;\n    pages?: v4.Pages;\n    home?: string;\n    target?: Target;\n    @childId('settings')\n    settings?: AppSettings;\n}\n\nexport class AppSettings implements v4.AppSettings {\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.app'\n        }\n    })\n    title?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.app'\n        }\n    })\n    description?: string;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5/routing/config'\n        }\n    })\n    @validity({\n        since: '1.78.0'\n    })\n    flexibleColumnLayout?: v4.FlexibleColumnLayoutV4;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5'\n        }\n    })\n    @validity({\n        since: '1.56.0'\n    })\n    flexEnabled?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5/routing/config'\n        }\n    })\n    viewType?: ViewTypes;\n\n    @syncRule({\n        manifest: {\n            path: (): string => 'sap.ui5/routing/config'\n        }\n    })\n    path?: string;\n\n    @syncRule(controllerExtensions)\n    controllerExtensions?: v4.ControllerExtensions;\n}\n", "import { PageType, v4 } from '@sap/ux-specification-types';\n\nconst PAGE_TYPE_TO_CONTROLLER_EXTENSION_MAP = new Map<PageType, string>([\n    [PageType.ListReport, v4.SAPUI5_VIEW_EXTENSION_LIST_REPORT],\n    [PageType.ObjectPage, v4.SAPUI5_VIEW_EXTENSION_OBJECT_PAGE]\n]);\n\n/**\n * Method transfers values of 'controllerNames' and 'controllerName' from source to target.\n * Method can be uses in both ways - import or export.\n * @param {SapUi5ControllerExtensionV4} source - source object\n * @param {SapUi5ControllerExtensionV4} target - target object\n */\nconst applyControllerNameProperties = (\n    source: v4.SapUi5ControllerExtensionV4,\n    target: v4.SapUi5ControllerExtensionV4\n) => {\n    const properties = ['controllerNames', 'controllerName'];\n    for (const property of properties) {\n        if (property in source) {\n            target[property] = source[property];\n        } else if (property in target) {\n            // Deletion of property happens\n            delete target[property];\n        }\n    }\n};\n\n/**\n * Method returns extension key for import(page.json).\n * @param {string} manifestKey - extension name in manifest.\n * @returns - extension key for import.\n */\nconst getExtensionKeyForImport = (manifestKey: string): string | undefined => {\n    for (const [pageType, key] of PAGE_TYPE_TO_CONTROLLER_EXTENSION_MAP) {\n        if (manifestKey.startsWith(key)) {\n            // Replace SAPUI5 specific key like 'sap.fe.templates.ObjectPage.ObjectPageController' with more readable PageType\n            let configKey: string = pageType;\n            if (manifestKey.includes('#')) {\n                // Append with page id\n                const id = manifestKey.split('#')[1]?.split('::')[1];\n                configKey += `#${id}`;\n            }\n            return configKey;\n        }\n    }\n    return undefined;\n};\n\n/**\n * Method returns extension key for export(manifest.json).\n * @param {string} configKey - extension name in config.\n * @param {string} appId - application id.\n * @returns - extension key for export.\n */\nconst getExtensionKeyForExport = (configKey: string, appId: string): string => {\n    let manifestKey = '';\n    for (const [pageType, key] of PAGE_TYPE_TO_CONTROLLER_EXTENSION_MAP) {\n        if (configKey.startsWith(pageType)) {\n            manifestKey = key;\n        }\n    }\n    const idParts = configKey.split('#');\n    if (idParts.length > 1) {\n        const pageId = idParts[1];\n        manifestKey = `${manifestKey}#${appId}::${pageId}`;\n    }\n    return manifestKey;\n};\n\nexport const controllerExtensions = {\n    manifest: {\n        path: (): string => `sap.ui5/extends/extensions/${v4.SAPUI5_CONTROLLER_EXTENSION}`,\n        import: (extensions: v4.SapUi5ControllerExtensionsV4): v4.ControllerExtensions | undefined => {\n            const result: v4.ControllerExtensions = {};\n            if (extensions && typeof extensions === 'object') {\n                for (const manifestKey in extensions) {\n                    const configKey = getExtensionKeyForImport(manifestKey);\n                    if (configKey) {\n                        result[configKey] = {};\n                        applyControllerNameProperties(extensions[manifestKey], result[configKey]);\n                    }\n                }\n            }\n            return Object.keys(result).length ? result : undefined;\n        },\n        export: (\n            manifestSection: v4.SapUi5ControllerExtensionsV4,\n            configObject: v4.ApplicationV4,\n            key: string\n        ): void => {\n            const appId = configObject?.id || '';\n            const configExtensions = configObject?.settings?.[key] || {};\n            // Go through all config extensions\n            for (const configKey in configExtensions) {\n                const manifestKey = getExtensionKeyForExport(configKey, appId);\n                if (!manifestSection[manifestKey]) {\n                    manifestSection[manifestKey] = {};\n                }\n                applyControllerNameProperties(configExtensions[configKey], manifestSection[manifestKey]);\n            }\n            // Handle removed extensions\n            for (const manifestKey in manifestSection) {\n                const configKey = getExtensionKeyForImport(manifestKey);\n                if (configKey && !configExtensions[configKey]) {\n                    delete manifestSection[manifestKey];\n                }\n            }\n        }\n    }\n};\n", "import {\n    PageTypeV4,\n    SchemaType,\n    ManifestSection,\n    MANIFESTPATH,\n    SchemaTag,\n    DefinitionName,\n    LogSeverity\n} from '@sap/ux-specification-types';\nimport type { v4, ImportListReportV4Parameters } from '@sap/ux-specification-types';\nimport { DEFINITION_LINK_PREFIX, getPageTypeV4, removeEmptyStructure, getDefinitionKey } from '../../../common';\nimport { transferSettingsOfObject } from '../utils';\nimport { initI18n } from '../../../../i18n/i18n';\nimport i18next from 'i18next';\nimport { log } from '../../../../extensionLogger';\nimport { MetadataInstanceFactoryV4 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\nimport type { Definition } from 'typescript-json-schema';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\n\n/**\n * Imports the content of annotation-based as well as custom columns\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - ID of the given page\n * @param {string} configId - config id\n * @param {string} viewId - view id in multi view mode\n */\nfunction transferColumns(\n    config: v4.Table | v4.LRTableView,\n    importParameters: ImportListReportV4Parameters,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string,\n    configId?: string,\n    viewId?: string\n) {\n    const schemaDefinitions = importParameters.jsonSchema.definitions;\n    const lineItemsId = configId && configId !== `@${UIAnnotationTerms.LineItem}` ? configId : DefinitionName.LineItems;\n    const lineItems = schemaDefinitions[lineItemsId] as Definition;\n    if (lineItems) {\n        config.columns = {};\n        for (const columnKey in lineItems.properties) {\n            const columnDefinition = (schemaDefinitions[lineItemsId] as Definition).properties[columnKey] as Definition;\n            const schemaPropertyName = columnDefinition.$ref.split(DEFINITION_LINK_PREFIX)[1].split('<')[0];\n            config.columns[columnKey] = factory.createInstance(pageType, schemaPropertyName);\n            const targetAnnotation = viewId || configId;\n            transferSettingsOfObject(\n                config.columns[columnKey],\n                importParameters.manifest,\n                schemaDefinitions[schemaPropertyName] as Definition,\n                routingId,\n                [columnKey, targetAnnotation],\n                targetAnnotation,\n                importParameters.logger\n            );\n            removeEmptyStructure(config.columns, columnKey);\n        }\n        removeEmptyStructure(config, 'columns');\n    } else {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOLINEITEMS')\n        });\n    }\n}\n\n/**\n * Import table toolbar actions of list report\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfigV4} config - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {SapUiAppPageV4} page - page in manifest\n * @param {PageTypeV4} pageType - page type\n */\nfunction importActions(\n    importParameters: ImportListReportV4Parameters,\n    tableConfig: v4.Table | v4.LRTableView | v4.ALPTableView,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string,\n    columnDefinitionName: string = DefinitionName.LineItems,\n    viewId?: string\n) {\n    const schemaDefinitions = importParameters.jsonSchema.definitions;\n    let targetAnnotation = viewId;\n    if (\n        !targetAnnotation &&\n        [DefinitionName.LineItems, `${DefinitionName.LineItems}OfSPV::LineItem`].indexOf(columnDefinitionName) === -1\n    ) {\n        targetAnnotation = `@${UIAnnotationTerms.LineItem}#${columnDefinitionName.split('::').pop()}`;\n    }\n    const actionsDefinition = schemaDefinitions[`${DefinitionName.Actions}<${columnDefinitionName}>`];\n    if (typeof actionsDefinition === 'object') {\n        for (const actionKey in actionsDefinition.properties) {\n            const actionDefinition = actionsDefinition.properties[actionKey];\n            if (typeof actionDefinition === 'object' && actionDefinition.$ref) {\n                const definitionKey = getDefinitionKey(actionDefinition.$ref);\n                const schemaPropertyName = definitionKey.split('<')[0];\n                tableConfig.toolBar.actions[actionKey] = factory.createInstance(pageType, schemaPropertyName);\n\n                transferSettingsOfObject(\n                    tableConfig.toolBar.actions[actionKey],\n                    importParameters.manifest,\n                    schemaDefinitions[definitionKey] as Definition,\n                    routingId,\n                    [actionKey, targetAnnotation]\n                );\n                removeEmptyStructure(tableConfig.toolBar.actions, actionKey);\n            }\n        }\n    }\n}\n\nfunction transferToolBar(\n    importParameters: ImportListReportV4Parameters,\n    config: v4.ListReportConfigV4 | v4.Table,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string,\n    columnDefinitionName: string = DefinitionName.LineItems,\n    viewId?: string\n) {\n    const toolbarInstance = factory.createInstance(pageType, DefinitionName.ToolBar, {\n        actions: {}\n    });\n    let table;\n    if (!viewId && config && 'table' in config) {\n        table = config.table;\n    } else {\n        table = config;\n    }\n    table.toolBar = toolbarInstance;\n\n    transferSettingsOfObject(\n        table.toolBar,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.ToolBarLR],\n        routingId,\n        []\n    );\n    importActions(importParameters, table, factory, pageType, routingId, columnDefinitionName, viewId);\n\n    removeEmptyStructure(table.toolBar, 'actions');\n    removeEmptyStructure(table, 'toolBar');\n}\n\n/**\n * Determines the target annotation of a list report view or defaultTemplateAnnotationPath\n * @param schemaDefinitions - app schema definitions\n * @param definitionName - current definition name\n * @returns the target annotation as string\n */\nfunction determineTargetAnnotationOfView(schemaDefinitions: Definition, definitionName: string): string {\n    const lineItemAnnotation = schemaDefinitions[definitionName]?.[SchemaTag.annotationPath];\n    const navigationProperty = schemaDefinitions[definitionName]?.navigationProperty;\n    let targetAnnotation = lineItemAnnotation?.substr(lineItemAnnotation.lastIndexOf('@'));\n    targetAnnotation = navigationProperty ? `${navigationProperty}/${targetAnnotation}` : targetAnnotation;\n    return targetAnnotation;\n}\n\n/**\n * Import chart & table view of ALP\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfigV4} config - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {SapUiAppPageV4} page - page in manifest\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - page key in manifest\n */\nfunction importALPViews(\n    importParameters: ImportListReportV4Parameters,\n    config: v4.ListReportConfigV4,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string\n): void {\n    const schemaDefinitions = importParameters.jsonSchema.definitions;\n    //chart view\n    config.chart = factory.createInstance(pageType, DefinitionName.ALPChart);\n    const chartDefinition = schemaDefinitions[DefinitionName.ALPChart] as Definition;\n    const chartAnnotationPath = chartDefinition[SchemaTag.annotationPath];\n    transferSettingsOfObject(config.chart, importParameters.manifest, chartDefinition, routingId, [\n        chartDefinition[SchemaTag.key],\n        chartAnnotationPath?.substr(chartAnnotationPath.lastIndexOf('@'))\n    ]);\n    config.chart.toolBar = factory.createInstance(pageType, DefinitionName.ToolBar, { actions: {} });\n    transferSettingsOfObject(\n        config.chart.toolBar,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.ViewChartToolBar] as Definition,\n        routingId,\n        []\n    );\n    //table view\n    const tableAnnotationPath = schemaDefinitions[DefinitionName.ALPTable][SchemaTag.annotationPath];\n    if (tableAnnotationPath) {\n        const tableDefinition = schemaDefinitions[DefinitionName.ALPTable];\n        const tableConfig = (config.table = factory.createInstance(\n            pageType,\n            DefinitionName.ALPTable\n        ) as v4.ALPTableView);\n        transferToolBar(importParameters, config, factory, pageType, routingId);\n        const configId = tableAnnotationPath.substr(tableAnnotationPath.lastIndexOf('@'));\n        transferSettingsOfObject(tableConfig, importParameters.manifest, tableDefinition, routingId, [\n            tableDefinition[SchemaTag.key],\n            configId\n        ]);\n        //transfer columns\n        transferColumns(tableConfig, importParameters, factory, pageType, routingId, undefined, configId);\n    }\n}\n\n/**\n * Method received view definition name and returns view type.\n * @param {string} definition  - definition name in schema.\n * @returns {DefinitionName | undefined} Resolved view type.\n */\nfunction getViewTypeByDefinition(definition: string): DefinitionName | undefined {\n    let viewType: DefinitionName;\n    if (definition.indexOf(DefinitionName.LRTableView) > -1) {\n        viewType = DefinitionName.LRTableView;\n    } else if (definition.indexOf(DefinitionName.LRChartView) > -1) {\n        viewType = DefinitionName.LRChartView;\n    } else if (definition === DefinitionName.TableViewExtension) {\n        viewType = DefinitionName.TableViewExtension;\n    }\n    return viewType;\n}\n\n/**\n * Import table views of list report\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfigV4} config - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - page key in manifest\n */\nfunction importLRViews(\n    importParameters: ImportListReportV4Parameters,\n    config: v4.ListReportConfigV4,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string\n): void {\n    const tableViewConfig: v4.MultiTableModeV4 = ((config.table as v4.Table).views = factory.createInstance(\n        pageType,\n        DefinitionName.MultiTableModeV4\n    ));\n    const schemaDefinitions = importParameters.jsonSchema.definitions as Definition;\n\n    //Transfer settings on overall views' level\n    transferSettingsOfObject(\n        tableViewConfig,\n        importParameters.manifest,\n        schemaDefinitions[DefinitionName.MultiTableModeV4],\n        routingId,\n        []\n    );\n    const properties = schemaDefinitions[DefinitionName.MultiTableModeV4].properties;\n    const sortedList = Object.entries(properties).sort(\n        (a, b) => a[1][SchemaTag.propertyIndex] - b[1][SchemaTag.propertyIndex]\n    );\n    for (const element of sortedList) {\n        //process single views\n        if (element[1]['$ref']) {\n            const nextDefinition = element[1]['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n            const viewType = getViewTypeByDefinition(nextDefinition);\n            const tableView = (tableViewConfig[element[0]] = factory.createInstance(pageType, viewType));\n            const targetAnnotation = determineTargetAnnotationOfView(schemaDefinitions, nextDefinition);\n            transferSettingsOfObject(\n                tableView,\n                importParameters.manifest,\n                schemaDefinitions[nextDefinition],\n                routingId,\n                [element[0], targetAnnotation]\n            );\n            if (viewType === DefinitionName.LRTableView) {\n                const definitionName = `${DefinitionName.LineItemsOfView}::${element[0]}`;\n                transferToolBar(\n                    importParameters,\n                    tableView,\n                    factory,\n                    pageType,\n                    routingId,\n                    definitionName,\n                    targetAnnotation\n                );\n                transferColumns(\n                    tableView,\n                    importParameters,\n                    factory,\n                    pageType,\n                    routingId,\n                    definitionName,\n                    targetAnnotation\n                );\n            }\n            if (Object.keys(tableView).length === 0) {\n                delete tableViewConfig[element[0]];\n            }\n        }\n    }\n    removeEmptyStructure(config.table, 'views');\n}\n\n/**\n * Adds manifest settings to the config.json of LR or ALP V4\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n * @param {ListReportConfig | AnalyticalListPageConfig} config - the configuration to be filled\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param {PageTypeV4} pageType - page type\n * @param {string} routingId - page key in manifest\n * @param {SchemaType} schemaType - allows distinction of LR and ALP scenario\n */\nexport function addSettings(\n    importParameters: ImportListReportV4Parameters,\n    config: v4.ListReportConfigV4,\n    factory: MetadataInstanceInterface,\n    pageType: PageTypeV4,\n    routingId: string,\n    schemaType: SchemaType\n): void {\n    // Transfer page level settings with sync rules\n    transferSettingsOfObject(config, importParameters.manifest, importParameters.jsonSchema, routingId, []);\n\n    //FilterBar:\n    config.filterBar = factory.createInstance(pageType, DefinitionName.FilterBar);\n\n    transferSettingsOfObject(\n        config.filterBar,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.FilterBar],\n        routingId,\n        []\n    );\n    //Distinguish ALP table from LR table\n    if (schemaType === SchemaType.ListReport) {\n        let definitionName = DefinitionName.Table;\n        let tableDefinition = importParameters.jsonSchema.definitions[definitionName] as Definition;\n        let columnDefinitionName;\n        if (tableDefinition.$ref) {\n            //(S)PV scenario ==> delegation, go to TableSPV\n            definitionName = tableDefinition.$ref.split(DEFINITION_LINK_PREFIX)[1] as DefinitionName;\n            tableDefinition = importParameters.jsonSchema.definitions[definitionName] as Definition;\n            columnDefinitionName = (tableDefinition.properties.columns as Definition).$ref.split(\n                DEFINITION_LINK_PREFIX\n            )[1];\n        }\n        config.table = factory.createInstance(pageType, DefinitionName.Table);\n        const targetAnnotation = determineTargetAnnotationOfView(\n            importParameters.jsonSchema.definitions,\n            definitionName\n        );\n        transferSettingsOfObject(config.table, importParameters.manifest, tableDefinition, routingId, [\n            definitionName,\n            targetAnnotation\n        ]);\n        //transfer toolbar\n        transferToolBar(importParameters, config, factory, pageType, routingId, columnDefinitionName);\n        //transfer columns\n        transferColumns(\n            config.table,\n            importParameters,\n            factory,\n            pageType,\n            routingId,\n            columnDefinitionName,\n            targetAnnotation\n        );\n        importLRViews(importParameters, config, factory, pageType, routingId);\n    } else if (schemaType === SchemaType.AnalyticalListPage) {\n        importALPViews(importParameters, config, factory, pageType, routingId);\n    }\n}\n\n/**\n * Creates the configuration file content for a list report V4\n * @param {ImportListReportV4Parameters} importParameters  - object comprising all input data\n *\n * @returns {ListReportConfig} - the configuration (JSON) for the list report\n */\nexport function createListReportConfig(\n    importParameters: ImportListReportV4Parameters,\n    schemaType: SchemaType\n): v4.ListReportConfigV4 | undefined {\n    // Initialize i18next\n    initI18n();\n    if (!importParameters.jsonSchema) {\n        return;\n    }\n    if (!importParameters.manifest[ManifestSection.ui5] || !importParameters.manifest[ManifestSection.ui5]['routing']) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTING'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5]\n            }\n        });\n        return;\n    }\n    const v4Pages = importParameters.manifest[ManifestSection.ui5]['routing']['targets'];\n    if (!v4Pages) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOTARGETS'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5]\n            }\n        });\n        return;\n    }\n    const factory = new Factory();\n    //Instantiate Page\n    const config = factory.createPageInstance(PageTypeV4.ListReport);\n\n    for (const key in v4Pages) {\n        const v4Page = v4Pages[key];\n        const pageType = getPageTypeV4(v4Page);\n        if ('name' in v4Page && (pageType === PageTypeV4.ListReport || pageType === PageTypeV4.AnalyticalListPage)) {\n            addSettings(importParameters, config, factory, PageTypeV4.ListReport, key, schemaType);\n            break;\n        }\n    }\n\n    return config;\n}\n", "import type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport { importProperty, checkDeprecatedProperties, getManifestSectionByPathV4 } from '../../common';\nimport { getReflectMetadata } from '../../common/decoration/decorators';\nimport type { ExtensionLogger } from '../../..';\nimport type { Manifest } from '@sap/ux-specification-types';\n\n/**\n * Transfers settings from manifest to object page config\n * @param configPart - part of the configuration to be filled\n * @param manifest - manifest.json of the app\n * @param appSchema - app specific schema\n * @param pageID - ID of the given object page\n * @param sectionId (optional) - ID of the given section (optional)\n * @param {ExtensionLogger} logger - Logger class for logging messages\n */\nexport function transferSettingsOfObject(\n    configPart: { [key: string]: any },\n    manifest: Manifest,\n    appSchema: Definition | DefinitionOrBoolean,\n    pageKey: string,\n    breadcrumbs: string[],\n    sectionId?: string,\n    logger?: ExtensionLogger\n): void {\n    if (!appSchema) {\n        return;\n    }\n    let manifestSection = {};\n    const deprecatedProperties = configPart?.getDeprecated;\n    const targetAnnotationEncoded = sectionId && sectionId.replace('/', '::');\n\n    for (const propertyKey in appSchema['properties']) {\n        const syncRule = getReflectMetadata(configPart, propertyKey);\n\n        if (syncRule?.manifest) {\n            const path = syncRule.manifest.path([pageKey], manifest, targetAnnotationEncoded, ...breadcrumbs);\n            manifestSection = getManifestSectionByPathV4(manifest, path, sectionId, targetAnnotationEncoded);\n            if (manifestSection && Object.keys(manifestSection).length > 0) {\n                importProperty(syncRule, manifestSection, propertyKey, configPart, sectionId, breadcrumbs);\n                checkDeprecatedProperties(deprecatedProperties, manifestSection, path, logger);\n            }\n        }\n    }\n}\n", "export * from './Table';\nexport * from './TableColumn';\nexport * from './ToolBar';\nexport * from './ToolBarAction';\nexport * from './ObjectPageToolBarAction';\nexport * from './ObjectPageForm';\nexport * from './ObjectPageFormAction';\nexport * from './FilterBar';\nexport * from './ObjectPageTableColumn';\nexport * from './ObjectPageHeader';\nexport * from './ObjectPageHeaderSection';\nexport * from './ObjectPageLayout';\nexport * from './ObjectPageTable';\nexport * from './ObjectPageCustomSection';\n", "import type { Manifest } from '@sap/ux-specification-types';\nimport { v4, SchemaTag } from '@sap/ux-specification-types';\nimport type { ToolBar } from './ToolBar';\nimport { addPatternForBindingChangeOfEnumLR } from '../../../common';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport {\n    getTableSettingsPathForLR,\n    getSettingsPathForPage,\n    getSettingsPathForLRViewsPaths,\n    getTableSettingsPathForView,\n    getQuickVariantPath\n} from '../../application';\n\n/**\n * Special edition of the global function getManifestSectionByPathV4 that initializes the views array if empty\n * @param manifest - manifest.json\n * @param path - path to the views array in manifest\n * @param key - key of the view\n * @returns the paths array of the views\n */\nconst getManifestSectionByPathV4 = (manifest: object, path: string): Array<object> => {\n    let manifestSection = manifest;\n    for (const element of path.split('/')) {\n        if (!manifestSection[element]) {\n            if (element === 'paths') {\n                manifestSection[element] = [];\n            } else {\n                manifestSection[element] = {};\n            }\n        }\n        manifestSection = manifestSection[element];\n    }\n    return manifestSection as Array<object>;\n};\n\n/**\n * Common function for determining the path in manifest of a list report view's path\n * @param pageName - page name in manifest\n * @param manifest - manifest.json\n * @param _targetAnnotationEncoded - target annotation (not used here)\n * @param viewKey - value of the key property of the view\n * @returns the path to the entry in manifest\n */\nfunction getSettingsPathForLRViewsPath(\n    pageName: string[],\n    manifest: Manifest,\n    _targetAnnotationEncoded: string,\n    viewKey: string,\n    _targetAnnotation: string,\n    configObject: object\n): string {\n    const viewsPath = getSettingsPathForLRViewsPaths(pageName);\n    const manifestSection = getManifestSectionByPathV4(JSON.parse(JSON.stringify(manifest)), viewsPath);\n    let path: string;\n    for (let index = 0; index < manifestSection.length; index++) {\n        const view = manifestSection[index];\n        if (view && (view[SchemaTag.key] === configObject?.['key'] || view[SchemaTag.key].indexOf(viewKey) > -1)) {\n            path = `${viewsPath}/${index}`;\n            break;\n        }\n    }\n    if (!path) {\n        path = `${viewsPath}/[]`;\n    }\n    return path;\n}\n\n/**\n * sync rule function for export of creationMode.name\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n * @param key - key or property in config.json\n * @param manifestKey - key or property in manifest\n */\nexport function exportCreationModeName(\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey: string\n): void {\n    if (typeof manifestSection['creationMode'] === 'string') {\n        manifestSection['creationMode'] = {};\n    }\n    manifestSection['creationMode'][manifestKey] = configObject[key];\n}\n\n/**\n * Subroutine of checkViewOrder, fills the new list of views for the manifest\n */\nfunction fillNewlyOrderedViews(\n    manifestSection: object,\n    keyInConfig: string,\n    newIndex: string,\n    minIndex: number,\n    maxIndex: number,\n    direction: number\n): Array<object> {\n    const newlyOrderedViews = JSON.parse(JSON.stringify(manifestSection));\n    const viewKeys = Object.keys(manifestSection);\n\n    for (const index of viewKeys) {\n        const indexInManifest = Number(index);\n        const view = manifestSection[index];\n        if (keyInConfig === view['key']) {\n            newlyOrderedViews[newIndex] = view;\n        } else {\n            if (indexInManifest >= minIndex && indexInManifest <= maxIndex) {\n                newlyOrderedViews[Math.max(0, indexInManifest + direction)] = view;\n            } else {\n                newlyOrderedViews[index] = view;\n            }\n        }\n    }\n    return newlyOrderedViews;\n}\n\n/**\n * If a view index was changed we need to adapt the order of views in manifest\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n */\nexport function checkViewOrder(manifestSection: unknown, configObject: unknown): void {\n    const keyInConfig = configObject['key'];\n    const oldIndex = (manifestSection as Array<object>).findIndex((view) => {\n        return view?.['key'] === keyInConfig;\n    });\n    const newIndex = configObject['index'];\n    if (oldIndex > -1 && oldIndex !== newIndex) {\n        const direction = newIndex > oldIndex ? -1 : 1;\n        const minIndex = Math.min(Number(oldIndex), newIndex);\n        const maxIndex = Math.max(Number(oldIndex), newIndex);\n        const newlyOrderedViews = fillNewlyOrderedViews(\n            manifestSection as object,\n            keyInConfig,\n            newIndex,\n            minIndex,\n            maxIndex,\n            direction\n        );\n        for (const index of Object.keys(newlyOrderedViews)) {\n            manifestSection[index] = newlyOrderedViews[index];\n        }\n    }\n}\n\n/**\n * common sync rule function for export of creation for personalization object\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n * @param key - key or property in config.json\n * @param manifestKey - key or property in manifest\n */\nexport function exportPersonalization(\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey?: string\n): void {\n    if (\n        !manifestSection[manifestKey] &&\n        typeof configObject[key] === 'object' &&\n        Object.keys(configObject[key]).length\n    ) {\n        // Create 'personalization' object only when config object is not empty\n        configObject[key] = {};\n    }\n}\n\n/**\n * common sync rule function for export of personalization properties\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n * @param key - key or property in config.json\n * @param manifestKey - key or property in manifest\n */\nexport function exportPersonalizationProperty(\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey: string\n): void {\n    if (typeof manifestSection['personalization'] === 'boolean' || !manifestSection['personalization']) {\n        manifestSection['personalization'] = {};\n    }\n    manifestSection['personalization'][manifestKey] = configObject[key];\n}\n\n/**\n * sync rule function for the deletion of creationMode.name\n * @param manifestSection - section in manifest comprising the table settings\n * @param manifestKey - key or property in manifest\n */\nexport function deleteCreationModeName(manifestSection: unknown, manifestKey: string): void {\n    if (\n        typeof manifestSection['creationMode'] === 'object' &&\n        manifestSection['creationMode'][manifestKey] !== undefined\n    ) {\n        delete manifestSection['creationMode'][manifestKey];\n    } else if (typeof manifestSection['creationMode'] === 'string' && manifestSection['creationMode'] !== undefined) {\n        delete manifestSection['creationMode'];\n    }\n}\n\n/**\n * common sync rule function for the deletion of any property of personalization\n * @param manifestSection - section in manifest comprising the table settings\n * @param _configObject - page config object\n * @param _key - key or property in page config object\n * @param manifestKey - key or property in manifest\n */\nexport function deletePersonalizationProperty(\n    manifestSection: unknown,\n    _configObject: object,\n    _key: string,\n    manifestKey: string\n): void {\n    if (\n        typeof manifestSection['personalization'] === 'object' &&\n        manifestSection['personalization'][manifestKey] !== undefined\n    ) {\n        delete manifestSection['personalization'][manifestKey];\n        if (Object.keys(manifestSection['personalization']).length === 0) {\n            delete manifestSection['personalization'];\n        }\n    } else if (\n        typeof manifestSection['personalization'] === 'string' &&\n        manifestSection['personalization'] !== undefined\n    ) {\n        delete manifestSection['personalization'];\n    }\n}\n\n/**\n * sync rule deleting a view if the index gets deleted\n * @param manifestSection - manifest section of the given view\n * @param configObject - section of the configration JSON\n * @param syncRuleKey - key of the view\n * @param config - the complete config JSON\n */\nfunction deleteView(\n    manifestSection: object,\n    configObject: object,\n    _configPropertyKey: string,\n    _manifestKey: string,\n    syncRuleKey: string,\n    config: object\n): void {\n    let deletedViewIndex;\n    if (!configObject || Object.keys(configObject).length === 0) {\n        const viewsInManifest = manifestSection as Array<object>;\n        Object.keys(viewsInManifest).forEach((index) => {\n            if (viewsInManifest[index] && viewsInManifest[index].key === syncRuleKey) {\n                manifestSection[Number(index)] = {};\n                deletedViewIndex = index;\n            }\n        });\n    }\n    if (deletedViewIndex) {\n        const viewsInConfig = config['table']['views'];\n        for (const key in viewsInConfig) {\n            if (viewsInConfig[key].index > deletedViewIndex) {\n                viewsInConfig[key].index--;\n            }\n        }\n    }\n}\n\n/**\n * sync rule for preventing the deletion of a property\n */\nfunction doNotDelete(): void {\n    return;\n}\n\n/**\n * sync rule function for export of creationMode.createAtEnd\n * @param manifestSection - section in manifest comprising the table settings\n * @param configObject - section in config.json describing the table settings\n * @param key - key or property in config.json\n * @param manifestKey - key or property in manifest\n */\nexport function exportCreationModeCreateAtEnd(\n    manifestSection: unknown,\n    configObject: unknown,\n    key: string,\n    manifestKey: string\n): void {\n    if (typeof manifestSection['creationMode'] === 'object') {\n        manifestSection['creationMode'][manifestKey] = configObject[key];\n    } else if (typeof manifestSection['creationMode'] === 'string') {\n        // If createAtEnd property is defined in config, then we have to convert manifest property creationMode to an object\n        manifestSection['creationMode'] = {\n            name: configObject['name'],\n            [manifestKey]: configObject[key]\n        };\n    }\n}\n\n/**\n * sync rule function for the deletion of creationMode.createAtEnd\n * @param manifestSection - section in manifest comprising the table settings\n * @param manifestKey - key or property in manifest\n */\nexport function deleteCreationModeCreateAtEnd(manifestSection: unknown, manifestKey: string): void {\n    if (\n        typeof manifestSection['creationMode'] === 'object' &&\n        manifestSection['creationMode'][manifestKey] !== undefined\n    ) {\n        delete manifestSection['creationMode'][manifestKey];\n    }\n}\n\n/**\n * sync rule for the import of personalization, does an implicit conversion of the former boolean value to the new object representation\n * @param tableSettings - table settings in manifest, to be analyzed\n * @returns - object representing the value(s) for the config file\n */\nfunction importPersonalization(tableSettings: object): object | undefined {\n    const value: any = tableSettings['personalization'];\n    if (typeof value === 'object') {\n        return value;\n    } else if (typeof value === 'boolean') {\n        return {\n            column: value,\n            sort: value,\n            filter: value\n        };\n    }\n}\n\n/**\n * sync rule for the import of creationMode, does an implicit conversion of the former string value to the new object representation\n * @param tableSettings - table settings in manifest, to be analyzed\n * @returns - object representing the value(s) for the config file\n */\nfunction importCreationMode(tableSettings: object): object | undefined {\n    const value: any = tableSettings['creationMode'];\n    if (typeof value === 'object') {\n        return value;\n    } else if (typeof value === 'string') {\n        return {\n            name: value\n        };\n    }\n}\n\n/**\n * sync rule for the import of the index of a table view\n * @param manifestSection - manifest section, as determined by synRule.path\n * @param _sectionId  - not used\n * @param _propertyKey - not used\n * @param breadcrumbs - list if breadcrumbs, includes the given view key\n * @returns index of the view in manifest, undefined if not found\n */\nfunction determineIndexOfView(\n    manifestSection: object[],\n    _sectionId: string,\n    _propertyKey: string,\n    breadcrumbs: string[]\n): number | undefined {\n    const viewIndex = manifestSection.findIndex((view) => view['key'] === breadcrumbs[0]);\n    return viewIndex === -1 ? undefined : viewIndex;\n}\n\n/**********************************\n * Sync class for TableCreationMode\n */\nexport class TableCreationMode implements v4.TableCreationMode {\n    //name\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR, // Here we are using path of parent to have correct value for manifestSection\n            export: (manifestSection, configObject, key, manifestKey): void => {\n                exportCreationModeName(manifestSection, configObject, key, manifestKey);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeName(manifestSection, manifestKey);\n            }\n        }\n    })\n    name?: v4.TableCreationModeType;\n\n    //createAtEnd\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR, // Here we are using path of parent to have correct value for manifestSection\n            export: (manifestSection, configObject, key, manifestKey): void => {\n                exportCreationModeCreateAtEnd(manifestSection, configObject, key, manifestKey);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeCreateAtEnd(manifestSection, manifestKey);\n            }\n        }\n    })\n    createAtEnd?: boolean;\n}\n\n/**********************************\n * Sync class for TableCreationMode\n */\nexport class ViewTableCreationMode implements v4.ViewTableCreationMode {\n    //name\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView, // Here we are using path of parent to have correct value for manifestSection\n            export: (manifestSection, configObject, key, manifestKey): void => {\n                exportCreationModeName(manifestSection, configObject, key, manifestKey);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeName(manifestSection, manifestKey);\n            }\n        }\n    })\n    name?: v4.TableCreationModeType;\n\n    //createAtEnd\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView, // Here we are using path of parent to have correct value for manifestSection\n            export: (manifestSection, configObject, key, manifestKey): void => {\n                exportCreationModeCreateAtEnd(manifestSection, configObject, key, manifestKey);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeCreateAtEnd(manifestSection, manifestKey);\n            }\n        }\n    })\n    createAtEnd?: boolean;\n}\n\n/************************************\n * Sync class for PersonalizationType\n */\nexport class PersonalizationType implements v4.PersonalizationType {\n    //column\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR, // Here we are using path of parent to have correct value for manifestSection\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    column?: boolean;\n\n    //sort\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    sort?: boolean;\n\n    //filter\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    filter?: boolean;\n}\n\nexport class ViewPersonalizationType implements v4.ViewPersonalizationType {\n    //column\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView, // Here we are using path of parent to have correct value for manifestSection\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    column?: boolean;\n\n    //sort\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView,\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    sort?: boolean;\n\n    //filter\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    filter?: boolean;\n}\n\n/****************************************\n * Sync class for QuickVariantSelectionV4\n */\nexport class QuickVariantSelectionV4 implements v4.QuickVariantSelectionV4 {\n    //paths\n    @syncRule({\n        manifest: {\n            path: getQuickVariantPath\n        }\n    })\n    paths: v4.AnnotationPathAsObject[];\n\n    //hideTableTitle\n    @syncRule({\n        manifest: {\n            path: getQuickVariantPath\n        }\n    })\n    hideTableTitle?: boolean;\n\n    //showCounts\n    @syncRule({\n        manifest: {\n            path: getQuickVariantPath\n        }\n    })\n    showCounts?: boolean;\n}\n\n/****************************************\n * Sync class for TableSettings\n */\nexport class TableSettings implements v4.TableSettings {\n    //type\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    type?: v4.TableTypeV4;\n\n    //creationMode\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            import: importCreationMode\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    creationMode?: TableCreationMode;\n\n    //personalization\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR,\n            import: importPersonalization,\n            export: exportPersonalization\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    personalization?: PersonalizationType;\n\n    //selectionMode\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionMode?: v4.SelectionMode;\n\n    //selectAll\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectAll?: boolean;\n\n    //selectionLimit\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionLimit?: number;\n\n    //enableExport\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enableExport?: boolean;\n\n    //quickVariantSelection\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    quickVariantSelection?: QuickVariantSelectionV4;\n\n    //condensedTableLayout\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    condensedTableLayout?: boolean;\n}\n\n/****************************************\n * Sync class for ALPChartView (renamed due to indirection in app schema)\n */\nexport class ALPChart implements v4.ALPChartView {\n    //annotationPath\n    @syncRule({\n        manifest: {\n            path: (entitySet): string => getSettingsPathForPage(entitySet) + '/views/paths/0/primary/0',\n            delete: deleteView\n        }\n    })\n    annotationPath: string;\n\n    //toolBar\n    toolBar?: v4.ViewChartToolBar;\n}\n\nexport class CommonViewSettings implements v4.CommonViewSettings {\n    //key\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath,\n            delete: doNotDelete\n        }\n    })\n    key: string;\n    //index\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPaths,\n            import: determineIndexOfView,\n            export: (manifestSection, configObject): void => {\n                checkViewOrder(manifestSection, configObject);\n            },\n            delete: deleteView\n        }\n    })\n    index: number;\n\n    //annotationPath\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath,\n            delete: doNotDelete\n        }\n    })\n    annotationPath: string;\n\n    //entitySet\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    entitySet?: string;\n}\n\n/****************************************\n * Sync class for view table settings\n */\nexport class TableViewSettings extends CommonViewSettings implements v4.TableSettings {\n    //type\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    type?: v4.TableTypeV4;\n\n    //creationMode\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView,\n            import: importCreationMode\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    creationMode?: TableCreationMode;\n\n    //personalization\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView,\n            import: importPersonalization\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    personalization?: ViewPersonalizationType;\n\n    //selectionMode\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionMode?: v4.SelectionMode;\n\n    //selectAll\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectAll?: boolean;\n\n    //selectionLimit\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionLimit?: number;\n\n    //enableExport\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enableExport?: boolean;\n\n    //quickVariantSelection\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    quickVariantSelection?: QuickVariantSelectionV4;\n\n    //condensedTableLayout\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    condensedTableLayout?: boolean;\n}\n\nfunction getTableViewSettings<T>(SuperClass: T) {\n    return TableViewSettings;\n}\n\n/****************************************\n * Sync class for ALPTableView (renamed due to indirection in app schema)\n */\nexport class ALPTable extends TableViewSettings implements v4.ALPTableView {\n    //annotationPath\n    @syncRule({\n        manifest: {\n            path: (entitySet): string => getSettingsPathForPage(entitySet) + '/views/paths/0/secondary/0',\n            delete: doNotDelete\n        }\n    })\n    annotationPath: string;\n\n    //initialLoad\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[]): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    initialLoad?: v4.InitialLoadType;\n\n    //toolBar\n    toolBar?: ToolBar;\n}\n\n/****************************************\n * Sync class for LRChartView\n */\nexport class LRChartView extends CommonViewSettings implements v4.LRChartView {\n    //toolBar\n    toolBar?: v4.ViewChartToolBar;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    visible?: boolean;\n}\n\n/****************************************\n * Sync class for LRTableView\n */\nexport class LRTableView extends getTableViewSettings(CommonViewSettings) {\n    //keepPreviousPersonalization\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    keepPreviousPersonalization?: boolean;\n\n    //entitySet\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    entitySet?: string;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    visible?: boolean;\n\n    //toolBar\n    toolBar?: ToolBar;\n}\n\nexport class TableViewExtension implements v4.TableViewExtension {\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    key: string;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPaths,\n            import: determineIndexOfView,\n            export: (manifestSection, configObject): void => {\n                checkViewOrder(manifestSection, configObject);\n            },\n            delete: deleteView\n        }\n    })\n    index: number;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    label?: string;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        }\n    })\n    template: string;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForLRViewsPath\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    visible?: boolean;\n}\n\n/**\n * LR multi-view: own class for properties on views' level\n */\nexport class MultiTableModeV4 implements v4.MultiTableModeV4 {\n    // List of annotation paths\n    [key: string]: v4.ViewTypeV4;\n\n    //showCounts\n    @syncRule({\n        manifest: {\n            path: (entitySet): string => getSettingsPathForPage(entitySet) + '/views'\n        }\n    })\n    showCounts?: boolean;\n}\n\n/****************************************\n * Sync class for Table\n */\nexport class Table extends TableSettings implements v4.Table {\n    //annotationPath\n    @syncRule({\n        manifest: {\n            path: (entitySet): string => getSettingsPathForPage(entitySet) + '/views/paths/0/secondary/0',\n            delete: doNotDelete\n        }\n    })\n    annotationPath?: string;\n\n    //views\n    views?: MultiTableModeV4;\n\n    //initialLoad\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[]): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    initialLoad?: v4.InitialLoadType;\n\n    //toolBar\n    toolBar?: ToolBar;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getColumnsPathForLR, getColumnsPathForView } from '../../application';\n\nexport class ActionAfterExecutionConfiguration implements v4.ActionAfterExecutionConfiguration {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string =>\n                getColumnsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/afterExecution'\n        }\n    })\n    navigateToInstance?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string =>\n                getColumnsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/afterExecution'\n        }\n    })\n    enableAutoScroll?: boolean;\n}\n\n/************************************\n * Sync class for TableColumn\n */\nexport class TableColumn implements v4.TableColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    availability?: v4.Availability;\n}\n\n/************************************\n * Sync class for ViewTableColumn\n */\nexport class ViewTableColumn implements v4.ViewTableColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    availability?: v4.Availability;\n}\n\nexport class TableColumnAction extends TableColumn implements v4.TableColumnAction {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\nexport class ViewTableColumnAction extends ViewTableColumn implements v4.ViewTableColumnAction {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    afterExecution?: ActionAfterExecutionConfiguration;\n}\n\n/**\n * Sync class for Position\n */\nexport class Position implements v4.Position {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getColumnsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getColumnsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.Placement;\n}\n\n/**\n * Sync class for ViewPosition\n */\nexport class ViewPosition implements v4.ViewPosition {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getColumnsPathForView(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getColumnsPathForView(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.Placement;\n}\n\n/**\n * Sync class for TableCustomColumn\n */\nexport class TableCustomColumn implements v4.TableCustomColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position?: Position;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    header: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    template: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    horizontalAlign?: v4.HorizontalAlign;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    availability?: v4.Availability;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForLR\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    properties?: v4.ColumnPropertiesType;\n}\n\n/**\n * Sync class for ViewTableCustomColumn\n */\nexport class ViewTableCustomColumn implements v4.ViewTableCustomColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position?: Position;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    header: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    template: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    horizontalAlign?: v4.HorizontalAlign;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    availability?: v4.Availability;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForView\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    properties?: v4.ColumnPropertiesType;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { ToolBarAction, CustomAction } from './ToolBarAction';\n\nexport class Actions implements v4.Actions {\n    [key: string]: ToolBarAction | CustomAction;\n}\n\nexport class ToolBar implements v4.ToolBar {\n    actions: Actions;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getActionsPathForLR, getActionsPathForView } from '../../application';\nimport { addPatternForBindingChangeOfEnumLR } from '../../../common/decoration/control';\n\nexport class ToolBarAction implements v4.ToolBarAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    enableOnSelect?: v4.SelectType;\n}\n\nexport class ViewToolBarAction implements v4.ViewToolBarAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    enableOnSelect?: v4.SelectType;\n}\n\n/**\n * Sync class for Position\n */\nexport class CustomActionPosition implements v4.CustomActionPosition {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getActionsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getActionsPathForLR(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.ActionPlacement;\n}\n\nexport class CustomAction implements v4.CustomAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomActionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    requiresSelection?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForLR\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n\n/**\n * Sync class for Position\n */\nexport class ViewCustomActionPosition implements v4.ViewCustomActionPosition {\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getActionsPathForView(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (\n                pageName: string[],\n                manifest: Manifest,\n                sectionId: string,\n                columnKey: string,\n                targetAnnotation: string\n            ): string => getActionsPathForView(pageName, manifest, sectionId, columnKey, targetAnnotation) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.ActionPlacement;\n}\n\nexport class ViewTableCustomAction implements v4.ViewTableCustomAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomActionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    requiresSelection?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForView\n        },\n        generate: addPatternForBindingChangeOfEnumLR\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getActionsPathForOP } from '../../application';\nimport { addPatternForBindingChangeOfEnumOP } from '../../../common/decoration/control';\n\nexport class ObjectPageToolBarAction implements v4.ObjectPageToolBarAction {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    enableOnSelect?: v4.SelectType;\n}\n\n/**\n * Sync class for Position\n */\nexport class CustomActionPositionOP implements v4.CustomActionPositionOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getActionsPathForOP(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey: string): string =>\n                getActionsPathForOP(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.ActionPlacement;\n}\n\nexport class CustomActionOP implements v4.CustomActionOP {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomActionPositionOP;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    requiresSelection?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { FormCustomActionOP } from './ObjectPageFormAction';\n\nexport class ObjectPageFormActions implements v4.FormCustomActionsOP {\n    [key: string]: FormCustomActionOP;\n}\n\nexport class ObjectPageForm implements v4.ObjectPageForm {\n    actions: ObjectPageFormActions;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getActionsPathForOP } from '../../application';\nimport { addPatternForBindingChangeOfEnumOP } from '../../../common/decoration/control';\nimport type { CustomActionPositionOP } from './ObjectPageToolBarAction';\n\nexport class FormCustomActionOP implements v4.FormCustomActionOP {\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    text: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position: CustomActionPositionOP;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    press: string;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getActionsPathForOP\n        },\n        generate: addPatternForBindingChangeOfEnumOP\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enabled?: boolean;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage } from '../../application';\n\nexport class FilterBar implements v4.FilterBar {\n    selectionFields?: v4.SelectionFields;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[]): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    @validity({\n        since: '1.99.0'\n    })\n    hideFilterBar?: boolean;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getColumnsPathForOP } from '../../application';\n\nexport class ActionAfterExecutionConfigurationOP implements v4.ActionAfterExecutionConfigurationOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getColumnsPathForOP(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    navigateToInstance?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getColumnsPathForOP(pageName, manifest, sectionId, columnKey) + '/afterExecution'\n        }\n    })\n    enableAutoScroll?: boolean;\n}\n\nexport class ObjectPageTableColumn implements v4.ObjectPageTableColumn {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    availability?: v4.Availability;\n}\n\nexport class ObjectPageTableColumnAction extends ObjectPageTableColumn implements v4.ObjectPageTableColumnAction {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    afterExecution?: ActionAfterExecutionConfigurationOP;\n}\nexport class PositionOP implements v4.PositionOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getColumnsPathForOP(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchor?: string;\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string, columnKey): string =>\n                getColumnsPathForOP(pageName, manifest, sectionId, columnKey) + '/position'\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    placement: v4.Placement;\n}\nexport class TableCustomColumnOP implements v4.TableCustomColumnOP {\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    position?: PositionOP;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    header: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    width?: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    template: string;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    horizontalAlign?: v4.HorizontalAlign;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    availability?: v4.Availability;\n    @syncRule({\n        manifest: {\n            path: getColumnsPathForOP\n        }\n    })\n    @validity({\n        since: '1.85.0'\n    })\n    properties?: v4.ColumnPropertiesType;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage, getSettingsPathForHeaderOP } from '../../application';\n\nexport class ObjectPageHeader implements v4.ObjectPageHeader {\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[]): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    editableHeaderContent?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[]): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    showRelatedApps?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForHeaderOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    visible?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getSettingsPathForHeaderOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    anchorBarVisible?: boolean;\n    sections?: v4.HeaderSections;\n}\n", "import type { v4, Manifest } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getHeaderFacetSettingPath } from '../../application';\n\nexport class FlexSettings implements v4.FlexSettings {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getHeaderFacetSettingPath(pageName, manifest, sectionId) + '/flexSettings'\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    designtime?: v4.DesigntimeValues;\n}\n\nexport class CommonHeaderFacetSettings implements v4.CommonHeaderFacetSettings {\n    @syncRule({\n        manifest: {\n            path: getHeaderFacetSettingPath\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    stashed?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getHeaderFacetSettingPath\n        }\n    })\n    @validity({\n        since: '1.81.0'\n    })\n    flexSettings?: FlexSettings;\n}\n\nexport class ObjectPageHeaderSectionForm extends CommonHeaderFacetSettings implements v4.ObjectPageHeaderSectionForm {}\n\nexport class ObjectPageHeaderSectionChart\n    extends CommonHeaderFacetSettings\n    implements v4.ObjectPageHeaderSectionChart {}\n\nexport class ObjectPageHeaderSectionDataPoint\n    extends CommonHeaderFacetSettings\n    implements v4.ObjectPageHeaderSectionDataPoint {}\n\nexport class ObjectPageHeaderSectionContact\n    extends CommonHeaderFacetSettings\n    implements v4.ObjectPageHeaderSectionContact {}\n\nexport class ObjectPageHeaderSectionAddress\n    extends CommonHeaderFacetSettings\n    implements v4.ObjectPageHeaderSectionAddress {}\n\nexport class HeaderSections implements v4.HeaderSections {\n    [key: string]:\n        | ObjectPageHeaderSectionForm\n        | ObjectPageHeaderSectionChart\n        | ObjectPageHeaderSectionDataPoint\n        | ObjectPageHeaderSectionContact\n        | ObjectPageHeaderSectionAddress;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage } from '../../application';\n\nexport class ObjectPageLayout implements v4.ObjectPageLayout {\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[]): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    sectionLayout?: v4.SectionLayoutType;\n}\n", "import type { Manifest, v4 } from '@sap/ux-specification-types';\nimport { QUICKVARPATH } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getTableSettingsPathForOP } from '../../application';\nimport {\n    exportCreationModeName,\n    deleteCreationModeName,\n    exportCreationModeCreateAtEnd,\n    deleteCreationModeCreateAtEnd,\n    exportPersonalizationProperty,\n    deletePersonalizationProperty,\n    exportPersonalization\n} from './Table';\n\nexport class TableCreationModeOP implements v4.TableCreationModeOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId),\n            export: (manifestSection, configObject, key, manifestKey): void => {\n                exportCreationModeName(manifestSection, configObject, key, manifestKey);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeName(manifestSection, manifestKey);\n            }\n        }\n    })\n    name?: v4.TableCreationModeType;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId),\n            export: (manifestSection, configObject, key, manifestKey): void => {\n                exportCreationModeCreateAtEnd(manifestSection, configObject, key, manifestKey);\n            },\n            delete: (manifestSection, _configObject, _key, manifestKey): void => {\n                deleteCreationModeCreateAtEnd(manifestSection, manifestKey);\n            }\n        }\n    })\n    createAtEnd?: boolean;\n}\n\nexport class PersonalizationTypeOP implements v4.PersonalizationTypeOP {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId), // Here we are using path of parent to have correct value for manifestSection\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    column?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId), // Here we are using path of parent to have correct value for manifestSection\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    sort?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId),\n            export: exportPersonalizationProperty,\n            delete: deletePersonalizationProperty\n        }\n    })\n    filter?: boolean;\n}\n\nexport class QuickVariantSelectionV4OP implements v4.QuickVariantSelectionV4 {\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    paths: v4.AnnotationPathAsObject[];\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    hideTableTitle?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: (pageName: string[], manifest: Manifest, sectionId: string): string =>\n                getTableSettingsPathForOP(pageName, manifest, sectionId) + QUICKVARPATH\n        }\n    })\n    showCounts?: boolean;\n}\n\nexport class ObjectPageTable implements v4.ObjectPageTable {\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    type?: v4.TableTypeV4;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP,\n            import: (tableSettings: object): object | undefined => {\n                const value: any = tableSettings['creationMode'];\n                if (typeof value === 'object') {\n                    return value;\n                } else if (typeof value === 'string') {\n                    return {\n                        name: value\n                    };\n                }\n            }\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    creationMode?: TableCreationModeOP;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP,\n            import: (tableSettings: object): object | undefined => {\n                const value: any = tableSettings['personalization'];\n                if (typeof value === 'object') {\n                    return value;\n                } else if (typeof value === 'boolean') {\n                    return {\n                        column: value,\n                        sort: value,\n                        filter: value\n                    };\n                }\n            },\n            export: exportPersonalization\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    personalization?: PersonalizationTypeOP;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionMode?: v4.SelectionMode;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectAll?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    selectionLimit?: number;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enableExport?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    quickVariantSelection?: QuickVariantSelectionV4OP;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    condensedTableLayout?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.86.0'\n    })\n    enableFullScreen?: boolean;\n\n    @syncRule({\n        manifest: {\n            path: getTableSettingsPathForOP\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    enablePaste?: boolean;\n}\n", "import type { Manifest } from '@sap/ux-specification-types';\nimport { SAPUI5_FRAGMENT_CLASS, v4 } from '@sap/ux-specification-types';\nimport { syncRule, validity } from '../../../common/decoration/decorators';\nimport { getCustomSectionPath } from '../../application';\n\nexport class ObjectPageCustomSectionFragment implements v4.ObjectPageCustomSectionFragment {\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[], manifest: Manifest, sectionId): string =>\n                getCustomSectionPath(entitySet, manifest, sectionId, 'position'),\n            key: 'anchor'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    relatedFacet: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: (_manifest: v4.SapUi5RoutingTargetContentSection, sectionId: string): string => {\n                // Id is read from path's section - it is object's key\n                return sectionId;\n            },\n            export: false\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    id: string;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[], manifest: Manifest, sectionId: string): string =>\n                getCustomSectionPath(entitySet, manifest, sectionId, 'position'),\n            key: 'placement'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    relativePosition: v4.SectionPosition;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    title: string;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: (manifest: v4.SapUi5RoutingTargetContentSection): v4.CustomSectionViewTypesV4 | string => {\n                // Currently only XML supported, but idea is that we need to check 'manifest.type' and allow other types - maybe JS, JSON, etc.\n                if (!manifest.type || manifest.type.startsWith(v4.CustomSectionViewTypesV4.XML)) {\n                    return v4.CustomSectionViewTypesV4.XML;\n                }\n                return '';\n            },\n            export: (manifest: v4.SapUi5RoutingTargetContentSection, object: ObjectPageCustomSectionFragment): void => {\n                // Currently only 'XMLFragment', but in future we can add logic here\n                let type = '' as typeof v4.SAPUI5_FRAGMENT_TYPE_V4;\n                if ('type' in object) {\n                    type += object.type;\n                }\n                if ('className' in object) {\n                    if (object.className === SAPUI5_FRAGMENT_CLASS) {\n                        type += 'Fragment';\n                    } else {\n                        type += object.className;\n                    }\n                }\n                manifest.type = type;\n            }\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    type: v4.CustomSectionViewTypesV4;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: (manifest: v4.SapUi5RoutingTargetContentSection): typeof SAPUI5_FRAGMENT_CLASS | string => {\n                // Currently only XML Fragment supported, but idea is that we need to check 'value.type'\n                // f.e. type === 'XMLFragment' ? 'sap.ui.core.Fragment' : ...\n                if (!manifest.type || manifest.type.startsWith(v4.CustomSectionViewTypesV4.XML)) {\n                    if (!manifest.type || manifest.type === 'XMLFragment') {\n                        return SAPUI5_FRAGMENT_CLASS;\n                    } else {\n                        return (manifest.type as string).slice(v4.CustomSectionViewTypesV4.XML.length);\n                    }\n                }\n                // Fallback - if there is unsupported value\n                return manifest.type;\n            },\n            export: false\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    className: typeof SAPUI5_FRAGMENT_CLASS;\n\n    @syncRule({\n        manifest: {\n            path: getCustomSectionPath,\n            import: (manifestSection: v4.SapUi5RoutingTargetContentSection): string => {\n                // During import, we need to consider both `name` and `template` to correctly fill our config and to be upgrade safe\n                return manifestSection.name || manifestSection.template;\n            },\n            key: 'template' // key: 'name' deprecated since '1.86'\n        }\n    })\n    @validity({\n        since: '1.77.0'\n    })\n    fragmentName: string;\n}\n", "export * from './ListReport';\nexport * from './ObjectPage';\nexport * from './FreestylePage';\n", "import type { v4 } from '@sap/ux-specification-types';\nimport type { Table, FilterBar } from '../controls';\nimport { pageLayoutInformation, childId, syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage } from '../../application';\n\n/**\n * sync rule deleting all views if the chart view gets deleted\n * @param manifestSection - manifest section of the given view\n */\nfunction deleteAllALPViews(manifestSection: object): void {\n    if (manifestSection['paths']?.[0]?.primary || manifestSection['paths']?.[0]?.secondary) {\n        Object.keys(manifestSection).forEach((key) => delete manifestSection[key]);\n    }\n}\n\n/**\n * sync rule for preventing the export of a property\n */\nfunction doNotExport(): void {\n    return;\n}\n\n/**\n * sync rule for preventing the import of a property\n */\nfunction doNotImport(): void {\n    return;\n}\n\n/**\n * Sync class for import and export of V4 list report\n */\n@pageLayoutInformation({\n    id: 'sap.suite.ui.generic.template.ListReport.view.ListReport',\n    pageId: 'sap.suite.ui.generic.template.ListReport'\n})\nexport class ListReport implements v4.ListReportConfigV4 {\n    @syncRule({\n        manifest: {\n            path: (entitySet): string => getSettingsPathForPage(entitySet) + '/views',\n            import: doNotImport,\n            export: doNotExport,\n            delete: deleteAllALPViews\n        }\n    })\n    chart?: v4.ALPChartView;\n\n    /* Table\n    Example Ids: EntitySet - Booking\n    s4v4lrop::BookingList--fe::table::Booking::LineItem-innerTable for sap.m.Table\n    s4v4lrop::BookingList--fe::table::Booking::LineItem for sap.ui.mdc.Table\n    */\n    table?: v4.ALPTableView | Table;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[]): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    variantManagement?: v4.VariantManagementTypeListReport;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet): string => getSettingsPathForPage(entitySet) + '/views/paths/[]/0'\n        }\n    })\n    defaultPath?: v4.DefaultPathType;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    defaultTemplateAnnotationPath?: string;\n\n    // Currently childIds are not used in case of OData V4 Example Id - \"fe::FilterBar::Booking\", where Booking is entitySet\n    @childId('fe::FilterBar')\n    filterBar?: FilterBar;\n}\n", "import type { ObjectPageHeader, ObjectPageLayout } from '../controls';\nimport { v4 } from '@sap/ux-specification-types';\nimport { pageLayoutInformation, childId, syncRule, validity } from '../../../common/decoration/decorators';\nimport { getSettingsPathForPage } from '../../application';\n\n@pageLayoutInformation({\n    id: `${v4.FE_TEMPLATE_V4_OBJECT_PAGE}.view.Details`,\n    pageId: v4.FE_TEMPLATE_V4_OBJECT_PAGE\n})\nexport class ObjectPage implements v4.ObjectPageConfigV4 {\n    @childId('header')\n    header?: ObjectPageHeader;\n\n    @childId('layout')\n    layout?: ObjectPageLayout;\n\n    @syncRule({\n        manifest: {\n            path: (entitySet: string[]): string => getSettingsPathForPage(entitySet)\n        }\n    })\n    @validity({\n        since: '1.84.0'\n    })\n    variantManagement?: v4.VariantManagementTypeObjectPage;\n\n    @childId('sections')\n    sections?: v4.GenericSections | v4.CustomSections;\n}\n", "/**\n * Sync class for import and export of V4 freestyle page\n */\nexport class FreestylePage {}\n", "import * as controls from './controls';\nimport * as pages from './pages';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport { MetadataFactory } from '../../common/decoration/factory';\nimport { PageType } from '@sap/ux-specification-types';\n\n/**\n * Note: If the key of the elements corresponds to the name of the definition in schema, you do not have to list it explicitly here.\n * The following tables only comprise entries for elements that do not follow the official pattern (yet)\n */\nconst ALPElements = {\n    //no deviations\n};\n\nconst LRElements = {\n    //no deviations\n};\n\nconst OPElements = {\n    Table: controls.ObjectPageTable,\n    TableColumn: controls.ObjectPageTableColumn,\n    ObjectPageCustomSectionView: controls.ObjectPageCustomSectionFragment,\n    ActionAfterExecutionConfiguration: controls.ActionAfterExecutionConfigurationOP\n};\n\nconst pageTypes = {\n    [PageType.AnalyticalListPage]: ALPElements,\n    [PageType.ListReport]: LRElements,\n    [PageType.ObjectPage]: OPElements\n};\n\n/**\n * V4 specific factory class for creating instances of (reflect) metadata classes\n */\nexport class MetadataInstanceFactoryV4 extends MetadataFactory implements MetadataInstanceInterface {\n    constructor() {\n        super(controls, pages, pageTypes);\n    }\n}\n", "import type { Definition } from 'typescript-json-schema';\nimport type { Manifest, v4, ImportObjectPageV4Parameters } from '@sap/ux-specification-types';\nimport {\n    MANIFESTPATH,\n    FacetTitlePrefix,\n    ManifestSection,\n    PageTypeV4,\n    DefinitionName,\n    LogSeverity\n} from '@sap/ux-specification-types';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { transferSettingsOfObject } from '../utils';\nimport { DEFINITION_LINK_PREFIX, getDefinitionKey } from '../../../common';\nimport i18next from 'i18next';\nimport { log } from '../../../../extensionLogger';\nimport { initI18n } from '../../../../i18n/i18n';\nimport { MetadataInstanceFactoryV4 as Factory } from '../../export/factory';\nimport type { MetadataInstanceInterface } from '../../../common/decoration/factory';\n\n/**\n * Converts section ID to manifest ID (replaces '::' with ['/', '#'])\n * @param sectionId - converted ID of the given object page section\n * @param splitOnLt - split ID and get only part in <...>\n * @returns manifest ID\n */\nexport function getManifestId(sectionId: string, splitOnLt = false) {\n    const tableId = splitOnLt ? sectionId.split('<')[1]?.slice(0, -1) : sectionId;\n    const pathParts = tableId.split(`@${UIAnnotationTerms.LineItem}`);\n    return `${pathParts[0]?.replace(/::/g, '/')}@${UIAnnotationTerms.LineItem}${pathParts[1]?.replace(/::/g, '#')}`;\n}\n\n/**\n * Converts manifest ID to definition ID (replaces ['#', '/'] with '::')\n * @param manifestId - ID of the given object page section in manifest\n * @returns definition ID\n */\nexport function getDefinitionId(manifestId: string) {\n    return manifestId.replace(/#/g, '::').replace(/\\//g, '::');\n}\n\n/**\n * Fills the section table columns in a V4 config\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param manifestSection - section of the manifest.json\n * @param configPart - the given part of the object page config\n * @param sectionId - converted ID of the given object page section\n * @param manifestSectionId - ID of the given object page section in manifest\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param v4Page - page definition in V4 format\n */\nfunction fillTableColumnsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSection: string | number | boolean | object,\n    configPart: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface,\n    manifestSectionId: string\n) {\n    if (manifestSection['columns']) {\n        configPart[sectionId].table.columns = {};\n        let tableDefinition: DefinitionName;\n        const lineItems = importParameters.jsonSchema.definitions[getDefinitionId(manifestSectionId)] as Definition;\n        if (lineItems) {\n            for (const columnKey in lineItems.properties) {\n                const columnInSchema = lineItems.properties[columnKey] as Definition;\n                if (columnInSchema.$ref.indexOf(DefinitionName.CustomColumnOP) > -1) {\n                    tableDefinition = DefinitionName.CustomColumnOP;\n                } else {\n                    tableDefinition = DefinitionName.ObjectPageTableColumn;\n                }\n                const columnInConfig = factory.createInstance(PageTypeV4.ObjectPage, tableDefinition);\n\n                transferSettingsOfObject(\n                    columnInConfig,\n                    importParameters.manifest,\n                    importParameters.jsonSchema.definitions[tableDefinition],\n                    importParameters.routingId,\n                    [columnKey],\n                    manifestSectionId\n                );\n                if (Object.keys(columnInConfig).length > 0) {\n                    configPart[sectionId].table.columns[columnKey] = columnInConfig;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Fills the table actions in config.json\n * @param {ImportObjectPageV4Parameters} importParameters - object comprising all input data\n * @param sectionId - ID of the current section\n * @param configPart - the given part of the object page config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param v4Page - current (object) page\n */\nfunction fillTableActionsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    sectionId: string,\n    configPart: object,\n    factory: MetadataInstanceInterface,\n    manifestSectionId: string = sectionId\n) {\n    const actionsDefinition =\n        importParameters.jsonSchema.definitions[`${DefinitionName.Actions}<${getDefinitionId(manifestSectionId)}>`];\n    if (typeof actionsDefinition === 'object') {\n        for (const actionKey in actionsDefinition['properties']) {\n            const actionDefinition = actionsDefinition.properties[actionKey];\n            if (typeof actionDefinition === 'object' && actionDefinition.$ref) {\n                const definitionKey = getDefinitionKey(actionDefinition.$ref);\n                const schemaPropertyName = definitionKey.split('<')[0];\n                configPart[sectionId].table.toolBar.actions[actionKey] = factory.createInstance(\n                    PageTypeV4.ObjectPage,\n                    schemaPropertyName\n                );\n                transferSettingsOfObject(\n                    configPart[sectionId].table.toolBar.actions[actionKey],\n                    importParameters.manifest,\n                    importParameters.jsonSchema.definitions[definitionKey],\n                    importParameters.routingId,\n                    [actionKey.replace('/', '??')],\n                    manifestSectionId\n                );\n                if (Object.keys(configPart[sectionId].table.toolBar.actions[actionKey]).length === 0) {\n                    delete configPart[sectionId].table.toolBar.actions[actionKey];\n                }\n            }\n        }\n    }\n}\n\n/**\n * Fills the table settings in config.json\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param manifestSettings - object page settings section of the manifest\n * @param configPart - the given part of the object page config\n * @param sectionId - ID of the current section\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param v4Page - current (object) page\n */\nfunction fillTableInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSettings: v4.SapUiPageSettingsV4,\n    configPart: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface,\n    tableId?: string\n) {\n    const manifestSectionId = tableId ? tableId : getManifestId(sectionId);\n    const manifestSection = manifestSettings.controlConfiguration[manifestSectionId];\n\n    if (manifestSection) {\n        // Data needs to be transferred\n        configPart[sectionId] = {};\n        configPart[sectionId].table = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageTable);\n\n        const sectionDefinition = `${DefinitionName.ObjectPageTable}<${\n            tableId ? getDefinitionId(tableId) : sectionId.replace('#', '::')\n        }>`;\n        transferSettingsOfObject(\n            configPart[sectionId].table,\n            importParameters.manifest,\n            importParameters.jsonSchema.definitions[sectionDefinition],\n            importParameters.routingId,\n            [],\n            manifestSectionId\n        );\n\n        configPart[sectionId].table.toolBar = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ToolBar, {\n            actions: {}\n        });\n        fillTableActionsInConfig(importParameters, sectionId, configPart, factory, manifestSectionId);\n        fillTableColumnsInConfig(importParameters, manifestSection, configPart, sectionId, factory, manifestSectionId);\n    }\n}\n\n/**\n * Fills the form actions in config.json\n * @param {ImportObjectPageV4Parameters} importParameters - object comprising all input data\n * @param sectionId - ID of the current section\n * @param configPart - the given part of the object page config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param manifestSectionId - ID of section in manifest.json\n */\nfunction fillFormActionsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    sectionId: string,\n    configPart: object,\n    factory: MetadataInstanceInterface,\n    manifestSectionId: string = sectionId\n) {\n    const actionsDefinition =\n        importParameters.jsonSchema.definitions[\n            `${DefinitionName.SectionActions}<${getDefinitionId(manifestSectionId)}>`\n        ];\n    if (typeof actionsDefinition === 'object') {\n        for (const actionKey in actionsDefinition['properties']) {\n            const actionDefinition = actionsDefinition.properties[actionKey];\n            if (typeof actionDefinition === 'object' && actionDefinition.$ref) {\n                const definitionKey = getDefinitionKey(actionDefinition.$ref);\n                const schemaPropertyName = definitionKey.split('<')[0];\n                configPart[sectionId].form.actions[actionKey] = factory.createInstance(\n                    PageTypeV4.ObjectPage,\n                    schemaPropertyName\n                );\n                transferSettingsOfObject(\n                    configPart[sectionId].form.actions[actionKey],\n                    importParameters.manifest,\n                    importParameters.jsonSchema.definitions[definitionKey],\n                    importParameters.routingId,\n                    [actionKey.replace('/', '??')],\n                    sectionId\n                );\n                if (\n                    configPart[sectionId].form.actions[actionKey] === undefined ||\n                    Object.keys(configPart[sectionId].form.actions[actionKey]).length === 0\n                ) {\n                    delete configPart[sectionId].form.actions[actionKey];\n                }\n            }\n        }\n    }\n}\n\n/**\n * Fills the form settings in config.json\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param manifestSettings - object page settings section of the manifest\n * @param configPart - the given part of the object page config\n * @param sectionId - ID of the current section\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param formId - from defitinion ID\n */\nfunction fillFormInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    manifestSettings: v4.SapUiPageSettingsV4,\n    configPart: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface,\n    formId?: string\n) {\n    const manifestSection = manifestSettings.controlConfiguration[sectionId];\n    if (manifestSection) {\n        configPart[sectionId] = {};\n        configPart[sectionId].form = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageForm, {\n            actions: {}\n        });\n        fillFormActionsInConfig(importParameters, sectionId, configPart, factory, formId);\n    }\n}\n\n/**\n * Fills the sections and subsections of the configuration (recursive function)\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param sectionProperties - current properties' list (of sections or subsections)\n * @param manifestSettings - object page settings section of the manifest\n * @param configPart - the given part of the object page config\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param v4Page - current (object) page\n */\nfunction fillSectionsInConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    sectionProperties: Definition,\n    manifestSettings: v4.SapUiPageSettingsV4,\n    configPart: Definition,\n    factory: MetadataInstanceInterface\n): void {\n    for (const sectionId in sectionProperties) {\n        const schemaSection: Definition = sectionProperties[sectionId];\n        let tableManifestId = sectionId;\n        if (\n            sectionId.includes('com.sap.vocabularies.UI.v1.PresentationVariant') &&\n            schemaSection.$ref?.startsWith(DEFINITION_LINK_PREFIX + DefinitionName.ObjectPageSectionTableV4)\n        ) {\n            const sectionIdRef = schemaSection['$ref'].split(DEFINITION_LINK_PREFIX)[1];\n            tableManifestId = sectionIdRef ? getManifestId(sectionIdRef, true) : sectionId;\n            fillTableInConfig(importParameters, manifestSettings, configPart, sectionId, factory, tableManifestId);\n        } else if (schemaSection.$ref?.startsWith(DEFINITION_LINK_PREFIX + DefinitionName.ObjectPageSectionTableV4)) {\n            // Section without subsections\n            fillTableInConfig(importParameters, manifestSettings, configPart, sectionId, factory);\n        } else if (schemaSection.properties && schemaSection.properties.subsections) {\n            configPart[sectionId] = {\n                subsections: {}\n            };\n            fillSectionsInConfig(\n                importParameters,\n                schemaSection.properties.subsections['properties'],\n                manifestSettings,\n                configPart[sectionId].subsections,\n                factory\n            );\n        } else if (\n            schemaSection.$ref?.startsWith(DEFINITION_LINK_PREFIX + DefinitionName.ObjectPageSectionForm) &&\n            schemaSection.$ref?.includes('@com.sap.vocabularies.UI.v1.FieldGroup::')\n        ) {\n            // map form definition from schema with form id from manifest\n            const definitionKey = schemaSection.$ref.split(DEFINITION_LINK_PREFIX)[1];\n            const definition = importParameters.jsonSchema.definitions[definitionKey] as Definition;\n            const formDefinition = definition.properties?.form as Definition;\n            const formDefinitionKey = formDefinition.$ref.split('SectionForm')[1];\n            // eslint-disable-next-line no-useless-escape\n            const formId = formDefinitionKey.match(/\\<([^()]+)\\>/)[1];\n            fillFormInConfig(importParameters, manifestSettings, configPart, sectionId, factory, formId);\n        }\n    }\n}\n\n/**\n * Fills the header facets in the config file of a V4 object page\n * @param appSchema - app specific schema\n * @param objectPageConfig - configuration, to be enhanced\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @param manifest - manifest.json of the app\n * @param v4Page - current (object) page\n */\nfunction fillHeaderFacets(\n    appSchema: Definition,\n    objectPageConfig: v4.ObjectPageConfigV4,\n    factory: MetadataInstanceInterface,\n    manifest: Manifest,\n    routingId: string\n): void {\n    const headerSections = appSchema.definitions[DefinitionName.HeaderSections] as Definition;\n    if (headerSections && headerSections.properties) {\n        objectPageConfig.header.sections = {};\n        for (const sectionId in headerSections.properties) {\n            const sectionDefinitionKey = headerSections.properties[sectionId]['$ref']?.split(DEFINITION_LINK_PREFIX)[1];\n            const sectionDefinition = sectionDefinitionKey\n                ? appSchema.definitions[sectionDefinitionKey]\n                : headerSections.properties[sectionId];\n            const factoryKey = sectionDefinitionKey ? sectionDefinitionKey.split('<')[0] : undefined;\n\n            objectPageConfig.header.sections[sectionId] = factoryKey\n                ? factory.createInstance(PageTypeV4.ObjectPage, factoryKey)\n                : {};\n\n            transferSettingsOfObject(\n                objectPageConfig.header.sections[sectionId],\n                manifest,\n                sectionDefinition,\n                routingId,\n                [],\n                (sectionDefinition as Definition)?.title?.split(FacetTitlePrefix)[1]\n            );\n        }\n    }\n}\n\n/**\n * Fills the object page configuration from the given manifest\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param v4Page - current (object) page\n * @param {MetadataInstanceInterface} factory - factory, for generating the access to reflect-metadata\n * @returns {ObjectPageConfig} the object page configuration\n */\nfunction fillObjectPageConfig(\n    importParameters: ImportObjectPageV4Parameters,\n    v4Page: v4.SapUiAppPageV4,\n    factory: MetadataInstanceInterface\n): v4.ObjectPageConfigV4 {\n    const objectPageConfig: v4.ObjectPageConfigV4 = factory.createPageInstance(PageTypeV4.ObjectPage);\n\n    const manifestSettings = v4Page.options && v4Page.options.settings;\n\n    // Transfer header information\n    objectPageConfig.header = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageHeader);\n    transferSettingsOfObject(\n        objectPageConfig.header,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.ObjectPageHeader],\n        importParameters.routingId,\n        []\n    );\n    // Transfer layout information\n    objectPageConfig.layout = factory.createInstance(PageTypeV4.ObjectPage, DefinitionName.ObjectPageLayout);\n    transferSettingsOfObject(\n        objectPageConfig.layout,\n        importParameters.manifest,\n        importParameters.jsonSchema.definitions[DefinitionName.ObjectPageLayout],\n        importParameters.routingId,\n        []\n    );\n\n    transferSettingsOfObject(\n        objectPageConfig,\n        importParameters.manifest,\n        importParameters.jsonSchema,\n        importParameters.routingId,\n        []\n    );\n    if (!objectPageConfig.sections) {\n        objectPageConfig.sections = {};\n    }\n    if (manifestSettings) {\n        if (manifestSettings.controlConfiguration && importParameters.jsonSchema.definitions[DefinitionName.Sections]) {\n            // Fill sections and subsections\n            objectPageConfig.sections = {};\n            fillSectionsInConfig(\n                importParameters,\n                importParameters.jsonSchema.definitions[DefinitionName.Sections]['properties'],\n                manifestSettings,\n                objectPageConfig.sections as Definition,\n                factory\n            );\n        }\n        // Fill Custom sections\n        const customSections = manifestSettings.content?.body?.sections;\n        if (customSections) {\n            objectPageConfig.sections.custom = [];\n            for (const sectionId in customSections) {\n                const section = factory.createInstance(\n                    PageTypeV4.ObjectPage,\n                    DefinitionName.ObjectPageCustomSectionFragment\n                );\n                transferSettingsOfObject(\n                    section,\n                    importParameters.manifest,\n                    importParameters.jsonSchema.definitions[DefinitionName.ObjectPageCustomSectionFragment],\n                    importParameters.routingId,\n                    [],\n                    sectionId\n                );\n                objectPageConfig.sections.custom.push(section);\n            }\n        }\n\n        // Fill header facets\n        fillHeaderFacets(\n            importParameters.jsonSchema,\n            objectPageConfig,\n            factory,\n            importParameters.manifest,\n            importParameters.routingId\n        );\n    }\n    return objectPageConfig;\n}\n\n/**\n * External API: Create configuration (file content) for a V4 object page\n * @param {ImportObjectPageV4Parameters} importParameters  - object comprising all input data\n * @param {ExtensionLogger} logger - Logger class for logging messages\n *\n * @returns {ObjectPageConfig} config - the object page configuration\n */\nexport function createObjectPageConfigV4(\n    importParameters: ImportObjectPageV4Parameters\n): v4.ObjectPageConfigV4 | undefined {\n    // Initialize i18next\n    initI18n();\n    if (!importParameters.manifest[ManifestSection.ui5] || !importParameters.manifest[ManifestSection.ui5]['routing']) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTING'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5]\n            }\n        });\n        return;\n    }\n    const v4Pages = importParameters.manifest[ManifestSection.ui5]['routing']['targets'] as v4.SapUiAppPageV4[];\n    if (!v4Pages) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOTARGETS'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing']\n            }\n        });\n        return;\n    }\n    const v4Page = v4Pages[importParameters.routingId];\n    if (!v4Page) {\n        log(importParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOROUTINGID', { routingId: importParameters.routingId }),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.ui5, 'routing']\n            }\n        });\n        return;\n    }\n    const factory = new Factory();\n\n    //Fill config.json\n    return fillObjectPageConfig(importParameters, v4Page, factory);\n}\n", "import { AppProvider } from '../../../common/appProvider';\nimport { AppSettings } from '../../application';\nimport { generatePageId, getSchemaFilePath } from '../../../common';\nimport { createListReportConfig } from '../pages/listReport';\nimport { createObjectPageConfigV4 } from '../pages/objectPage';\nimport type { Files, SapUi5RoutingRoute, SapUi5RoutingRouteTarget, v2, Manifest } from '@sap/ux-specification-types';\nimport {\n    v4,\n    MANIFESTPATH,\n    TemplateType,\n    PageTypeV4,\n    FioriElementsVersion,\n    SchemaType,\n    ManifestSection,\n    ViewTypes,\n    LogSeverity\n} from '@sap/ux-specification-types';\nimport { transferSettingsOfObject } from '../utils';\nimport type {\n    ExtensionLogger,\n    ImportObjectPageV4Parameters,\n    ImportListReportV4Parameters,\n    ImportAnalyticalListPageV4Parameters\n} from '../../../..';\nimport { log } from '../../../../extensionLogger';\nimport i18next from 'i18next';\nimport type { Definition } from 'typescript-json-schema';\n\nexport enum Constants {\n    OptionalQuery = ':?query:',\n    Component = 'sap/fe/AppComponent',\n    Namespace = 'sap.fe.templates'\n}\n\n// Store controller names which should be handled lately\nexport const unhandledControllers: Array<string> = [];\n// Store route associations\nlet associations: object = {};\n\n/**\n * Sort in following way\n * 1. string targets first\n * 2. Then sort targets as array by elements count - from lowest to highest(ASC)\n * @param {SapUi5RoutingRoute} route1 - First instance of router to compare.\n * @param {SapUi5RoutingRoute} route2 - Second instance of router to compare.\n * @return {number} Compare result.\n */\nfunction routesSorter(route1: SapUi5RoutingRoute, route2: SapUi5RoutingRoute): number {\n    const target1 = route1.target;\n    const target2 = route2.target;\n    const isT1Array = Array.isArray(target1);\n    const isT2Array = Array.isArray(target2);\n    if (isT1Array && isT2Array) {\n        return target1.length - target2.length;\n    }\n    if (!isT1Array && !isT2Array) {\n        return 0;\n    }\n    return !isT1Array ? -1 : 1;\n}\n\n/**\n * Method to resolve target and return target name as string.\n * Thing is that we can receive target as array of targets and we need detect which target is unique target in that array.\n * @param {SapUi5RoutingRouteTarget} target - Target to resolve.\n * @param {Array<string>} usedTargets - Array of resolved targets(which means that those targets are not unique anymore).\n * @return {string} Resolved unique target namet.\n */\nfunction resolveTarget(target: SapUi5RoutingRouteTarget, usedTargets: Array<string> = []): string {\n    if (!Array.isArray(target)) {\n        return target;\n    }\n    let targetParts: Array<string> = target;\n    for (const usedTarget of usedTargets) {\n        targetParts = targetParts.filter((targetPart) => !usedTarget.includes(targetPart));\n    }\n    return targetParts[0];\n}\n\n/**\n * Method which populates object with routings routes associations.\n * @param {SapUi5RoutingRoute} routes - Routing routes.\n * @return {object} Map object of association routes.\n */\nfunction populateAssociations(routes: SapUi5RoutingRoute[]): object {\n    const routesAssociations = {};\n    routes = routes.concat().sort(routesSorter);\n    const resolvedTargets = [];\n    for (const route of routes) {\n        const parts = route.pattern.split(':')[0].split('/');\n        let target;\n        if (Array.isArray(route.target)) {\n            target = resolveTarget(route.target, resolvedTargets);\n            resolvedTargets.push(route.target);\n        } else {\n            target = route.target;\n        }\n        for (const part of parts) {\n            const prop = part.split('(')[0];\n            routesAssociations[target] = routesAssociations[target] ? `${routesAssociations[target]}.${prop}` : prop;\n        }\n    }\n    return routesAssociations;\n}\n\n/**\n * Determines the page type of a routing target\n * @param target - routing target, as defined in manifest\n * @param logger - logger for error messages\n * @param routingTargetId - ID of the routing target\n * @returns the page type\n */\nfunction determinePageType(\n    target: v4.RoutingTargetOptions,\n    logger: ExtensionLogger,\n    routingTargetId: string\n): PageTypeV4 {\n    let pageType: PageTypeV4;\n    if (target['name']) {\n        if (target['name'] === v4.FE_TEMPLATE_V4_CUSTOM_PAGE) {\n            pageType = PageTypeV4.FPMCustomPage;\n        } else if (\n            target['name'].endsWith(PageTypeV4.ListReport) ||\n            target['name'].endsWith(PageTypeV4.AnalyticalListPage)\n        ) {\n            pageType = PageTypeV4.ListReport;\n        } else if (target['name'].endsWith(PageTypeV4.ObjectPage)) {\n            pageType = PageTypeV4.ObjectPage;\n        } else {\n            pageType = undefined;\n        }\n    } else if ('viewId' in target) {\n        pageType = PageTypeV4.CustomPage;\n    } else {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('INVALIDTARGETDEFINITION', { target: JSON.stringify(target) }),\n            location: {\n                path: MANIFESTPATH,\n                range: [`${ManifestSection.ui5}/routing/targets/${routingTargetId}`]\n            }\n        });\n        if (target['viewType'] in ViewTypes && 'viewName' in target) {\n            pageType = PageTypeV4.CustomPage;\n        }\n    }\n    return pageType;\n}\n\nexport type ConversionParameters = {\n    target: v4.RoutingTargetOptions;\n    pageType: PageTypeV4;\n    manifest: Manifest;\n    schemas: Files;\n    logger: ExtensionLogger;\n    page: v4.Page;\n    id: string;\n    templateType: TemplateType;\n};\n\nfunction convertSettingsToConfig(params: ConversionParameters) {\n    const schemaId = generatePageId(\n        params.page.pageType,\n        params.page.entitySet,\n        params.target['viewId'] || (params.pageType === PageTypeV4.CustomPage && params.target['id'])\n    );\n    if (!schemaId) {\n        return;\n    }\n    // Get the JSON schema for the page. If no page specific schema exists, fall back top the generic schema for the page type\n    const jsonSchema: string =\n        Object.keys(params.schemas).find((element) => element.includes(schemaId)) ||\n        Object.keys(params.schemas).find((element) => element.includes(schemaId.slice(0, -1))) ||\n        Object.keys(params.schemas).find((element) => element.includes(params.page.pageType));\n\n    if (jsonSchema) {\n        if (params.page.pageType === PageTypeV4.ObjectPage) {\n            const importParameters: ImportObjectPageV4Parameters = {\n                manifest: params.manifest,\n                jsonSchema: params.schemas[jsonSchema],\n                routingId: params.id,\n                logger: params.logger\n            };\n            params.page.config = createObjectPageConfigV4(importParameters);\n        } else if (params.templateType === TemplateType.ListReportObjectPageV4) {\n            const importParameters: ImportListReportV4Parameters = {\n                manifest: params.manifest,\n                jsonSchema: params.schemas[jsonSchema],\n                logger: params.logger\n            };\n            params.page.config = createListReportConfig(importParameters, SchemaType.ListReport);\n        } else if (params.templateType === TemplateType.AnalyticalListPageV4) {\n            const importParameters: ImportAnalyticalListPageV4Parameters = {\n                manifest: params.manifest,\n                jsonSchema: params.schemas[jsonSchema],\n                logger: params.logger\n            };\n            params.page.config = createListReportConfig(importParameters, SchemaType.AnalyticalListPage);\n        }\n    }\n}\n\n/**\n * Updates the class variable collecting the unhandled controllers\n * @param target - current routing target\n */\nfunction updateUnhandledControllers(target: v4.RoutingTargetOptions): void {\n    if (target.options) {\n        if ('viewName' in target.options.settings) {\n            const viewParts = target.options.settings.viewName.split('.');\n            unhandledControllers.push(viewParts[viewParts.length - 1]);\n        }\n    } else if ('viewId' in target) {\n        // There no 'options' for custom page target -\n        //    we need check target's controller source for navigation\n        const viewParts = target.viewName.split('.');\n        unhandledControllers.push(viewParts[viewParts.length - 1]);\n    }\n}\n\n/**\n * Evaluates the target options in manifest while setting up the page config.\n * Fills the page navigation object\n * @param {RoutingTargetOptions} target - target definition in manifest\n * @param {Page} page - page config, to be updated\n */\nfunction evaluateTargetOptions(target: v4.RoutingTargetOptions, page: v4.PageV4): void {\n    if (target.options) {\n        if (target.options.settings.variantManagement) {\n            page.variantManagement = target.options.settings.variantManagement;\n        }\n        page.navigation = {};\n        for (const name in target.options.settings.navigation) {\n            const navigationRoute = target.options.settings.navigation[name];\n            page.navigation[name] = navigationRoute.detail;\n        }\n    }\n}\n\n/**\n * Checks if the manifest's routing target represents a custom page definition\n * @param {RoutingTargetOptions} target - target definition in manifest\n * @param {Page} page - page config, to be updated\n * @param {PageTypeV4} pageType - page type\n */\nfunction evaluateCustomPageSettings(target: v4.RoutingTargetOptions, page: v4.Page, pageType: PageTypeV4): void {\n    if ('viewId' in target) {\n        // Populate view of custom page\n        page.view = {\n            id: target.viewId,\n            name: target.viewName,\n            ...(target.viewType && { viewType: target.viewType }),\n            ...(target.viewPath && { path: target.viewPath }),\n            ...(target.path && { path: target.path })\n        };\n    } else if ([PageTypeV4.CustomPage, PageTypeV4.FPMCustomPage].includes(pageType)) {\n        const customPageName =\n            (target as v4.SapUi5RoutingTargetCustomPageV4New).options?.settings?.viewName || target['viewName'];\n        page.view = {\n            ...(target.id && { id: target.id }),\n            ...(customPageName && { name: customPageName }),\n            ...(target.name && { template: target.name as any }),\n            ...(target['viewType'] && { viewType: target['viewType'] })\n        };\n    }\n}\n\n/**\n * Determines the Pages(app.json) using routing configuration from manifest and creates the configuration for each page\n * @param manifest - manifest.json of the app\n * @param schemas - list of JSON schemas of all pages\n */\nexport function getPagesAndConfigs(\n    manifest: Manifest,\n    schemas: Files,\n    templateType: TemplateType,\n    logger?: ExtensionLogger\n): v4.Pages {\n    const pages: v4.Pages = {};\n    const routing: v4.SapUi5RoutingV4 = manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4;\n    associations = populateAssociations(routing.routes || []);\n    for (const id in routing.targets) {\n        const target: v4.RoutingTargetOptions = routing.targets[id];\n        const pageType = determinePageType(target, logger, id);\n        const page: v4.Page = { pageType };\n        // Entity set\n        if (target.options) {\n            page.entitySet = target.options.settings.entitySet;\n        }\n        if (target.controlAggregation) {\n            page.controlAggregation = target.controlAggregation;\n        }\n        if (associations[id] && associations[id].indexOf('.') !== -1) {\n            const parts = associations[id].split('.');\n            page.navigationProperty = parts[parts.length - 1];\n        }\n        // Custom page's view object\n        evaluateCustomPageSettings(target, page, pageType);\n        evaluateTargetOptions(target, page);\n        updateUnhandledControllers(target);\n        // Get layout from route\n        const route = routing.routes.find((routingRoute) => routingRoute.name === 'BookingObjectPage');\n        if (route && 'layout' in route) {\n            page.defaultLayoutType = route.layout;\n        }\n        pages[id] = page;\n        // convert settings to config\n        const conversionParameters: ConversionParameters = {\n            target,\n            pageType,\n            manifest,\n            schemas,\n            logger,\n            page,\n            id,\n            templateType\n        };\n        convertSettingsToConfig(conversionParameters);\n    }\n\n    return pages;\n}\n\n/**\n * Get the id of the page that is to open when the application is started.\n * @param routing UI5 routing configuration\n */\nexport function getHome(routing: v4.SapUi5RoutingV4): string | undefined {\n    let routeHome;\n    if (routing && routing.routes && routing.routes.length > 0) {\n        for (const route of routing.routes) {\n            //find the home, i.e. route which starts with ':?query:' pattern for List Report,\n            //resp. doesn't contain '/' for Form Page\n            if (route.pattern.startsWith(':?query:')) {\n                routeHome = route;\n                break;\n            } else if (route.pattern.indexOf('/') === -1) {\n                routeHome = route;\n                continue;\n            }\n        }\n        if (routeHome) {\n            return resolveTarget(routeHome.target);\n        } else {\n            return resolveTarget(routing.routes[0].target);\n        }\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Method which detects app settings from manifest.\n * Currently only some settings are detected - Flexible Column Layout, viewPath, viewType, path\n * @param routing UI5 routing configuration.\n * @return {AppSettings} Application settings.\n */\nexport function getSettings(routing: v4.SapUi5RoutingV4): AppSettings {\n    const config = routing.config;\n    if (config) {\n        return {\n            ...(config.flexibleColumnLayout && { flexibleColumnLayout: config.flexibleColumnLayout }),\n            ...(config.viewType && { viewType: config.viewType }),\n            ...(config.viewPath && { path: config.viewPath }),\n            ...(config.path && { path: config.path })\n        };\n    }\n    return undefined;\n}\n\nexport function getPages(manifest: Manifest, targetName: string): v4.SapUiAppPagesV4 {\n    const routing = manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4;\n    const pages: v4.SapUiAppPagesV4 = {};\n    if (routing) {\n        for (const id in routing.targets) {\n            const v4Page = routing.targets[id];\n            if (v4Page['name'] === targetName) {\n                pages[id] = v4Page as v4.SapUiAppPageV4;\n            }\n        }\n    }\n    return pages;\n}\n\nexport abstract class BaseAppProvider extends AppProvider {\n    public constructor(\n        manifest: Manifest,\n        schemas: Files,\n        templateType: TemplateType,\n        _settings?: v2.AppSettings | v4.AppSettings,\n        logger?: ExtensionLogger\n    ) {\n        // Import settings\n        const appSettings = new AppSettings();\n        const schemaFile = getSchemaFilePath(SchemaType.Application);\n        const appSchema = schemas[schemaFile.filename] as Definition;\n        transferSettingsOfObject(appSettings, manifest, appSchema.definitions.AppSettings, '', []);\n        super(\n            manifest,\n            schemas,\n            getHome(manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4),\n            getPagesAndConfigs(manifest, schemas, templateType, logger),\n            FioriElementsVersion.v4,\n            { ...getSettings(manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4), ...appSettings },\n            logger\n        );\n        this.unhandledControllers = unhandledControllers;\n    }\n}\n", "import type { ExtensionLogger } from '../../../..';\nimport type { v4, Manifest, Files, TemplateType } from '@sap/ux-specification-types';\nimport { BaseAppProvider } from './baseAppProvider';\n\nexport class V4AppProvider extends BaseAppProvider {\n    public constructor(\n        manifest: Manifest,\n        schemas: Files,\n        templateType: TemplateType,\n        settings?: v4.AppSettings,\n        logger?: ExtensionLogger\n    ) {\n        super(manifest, schemas, templateType, settings, logger);\n    }\n}\n", "import type { ExtensionLogger } from '../../../..';\nimport type { v4, Manifest, Files, TemplateType } from '@sap/ux-specification-types';\nimport { BaseAppProvider } from './baseAppProvider';\n\nexport class V4FreestyleAppProvider extends BaseAppProvider {\n    public constructor(\n        manifest: Manifest,\n        schemas: Files,\n        templateType: TemplateType,\n        settings?: v4.AppSettings,\n        logger?: ExtensionLogger\n    ) {\n        // Import settings\n        super(manifest, schemas, templateType, settings, logger);\n    }\n}\n", "import { readFile } from 'fs';\nimport { join } from 'path';\nimport type { FioriElementsVersion } from '@sap/ux-specification-types';\nimport { SchemaType } from '@sap/ux-specification-types';\n\n/**\n * Return the path to the generic JSON schema\n * @param version - Fiori elements version\n * @param schemaType - Type of the schema, e.g Application, ListReport, ObjectPage, ...\n */\nexport const getPathToGenericSchema = (\n    version: FioriElementsVersion,\n    schemaType: SchemaType,\n    directory: string = __dirname\n): string | undefined => {\n    const fileName =\n        schemaType === SchemaType.Application\n            ? `${SchemaType.Application}${version.toUpperCase()}.json`\n            : `${schemaType}Config.json`;\n    if (directory.endsWith('dist')) {\n        return join(directory, 'schemas', version, fileName);\n    } else if (directory.endsWith(join('specification', 'packages', 'specification'))) {\n        return join(directory, 'dist', 'schemas', version, fileName);\n    } else if (directory.endsWith(join('src', 'specification'))) {\n        return join(directory, '..', '..', 'dist', 'schemas', version, fileName);\n    } else if (directory.indexOf('node_modules') > -1) {\n        const moduleRoot = directory.substring(0, directory.indexOf('node_modules') + 12);\n        return join(moduleRoot, '@sap', 'ux-specification', 'dist', 'schemas', version, fileName);\n    }\n    return undefined;\n};\n\n/**\n * Read JSON schema from given path\n * @param path - path to schema file\n */\nconst readJsonSchema = async (path: string): Promise<JSON> => {\n    return new Promise((resolve, reject): void => {\n        readFile(path, { encoding: 'utf8' }, (err, data): void => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(JSON.parse(data));\n            }\n        });\n    });\n};\n\n/**\n * Return the generic schema for a given version and type\n * @param version - Fiori elements version, e.g. v2 or v4\n * @param schemaType - Type of the schema, e.g Application, ListReport, ObjectPage, ...\n */\nexport const getGenericSchema = async (version: FioriElementsVersion, schemaType: SchemaType): Promise<JSON> => {\n    try {\n        const path = getPathToGenericSchema(version, schemaType, __dirname);\n        return await readJsonSchema(path);\n    } catch (error) {\n        throw new Error(`No schema available for type: ${schemaType}, version: ${version}. Error was ${error.message}`);\n    }\n};\n", "import type { Definition } from 'typescript-json-schema';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport type { v2, PageType, PageTypeV4, FileData, SyncRule } from '@sap/ux-specification-types';\nimport { ArtifactType, DefinitionName, SchemaTag } from '@sap/ux-specification-types';\nimport type { AnnotationTerm, EntityType } from '@sap-ux/vocabularies-types';\nimport type { DataFieldAbstractTypes, LineItem, SelectionFields } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport {\n    addKeyToDefinition,\n    getActionKey,\n    DEFINITION_LINK_PREFIX,\n    addDataTypeToDefinition,\n    addCommonLineItemDefinitions,\n    createAnnotationPath,\n    determineDataType,\n    getDataFieldDescription,\n    getLabelForPropertyPath,\n    getNextTargetDefinition,\n    getSchemaKeyOfLineItemRecord,\n    prepareRef\n} from '../../common';\nimport { getReflectMetadata } from '../../common/decoration/decorators';\nimport { UIAnnotationTypes, UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport { sep } from 'path';\nimport { xml2json } from 'xml-js';\nimport { ActionTypeV2 } from '../types';\n\n/**\n * Common function for enhancing the LineItems definiton of app schema by custom columns\n * @param appSchema - app-specific JSON schema\n * @param customColumnsDefinitionName - custom column definition name (plural)\n * @param customColumnDefinitionName - custom column definition name (singular)\n */\nfunction addCustomColumnDefinition(\n    appSchema: Definition,\n    customColumnsDefinitionName: string,\n    customColumnDefinitionName: string\n): void {\n    if (appSchema.definitions[DefinitionName.LineItems]) {\n        (appSchema.definitions[DefinitionName.LineItems] as Definition).properties['custom'] = {\n            $ref: `${DEFINITION_LINK_PREFIX}${customColumnsDefinitionName}`\n        };\n    }\n    appSchema.definitions[customColumnsDefinitionName] = {\n        type: 'array',\n        items: {\n            $ref: `${DEFINITION_LINK_PREFIX}${customColumnDefinitionName}`\n        },\n        description: 'Custom Columns'\n    };\n    appSchema.definitions[customColumnsDefinitionName][SchemaTag.isViewNode] = true;\n    const extensionType = (appSchema.definitions[customColumnDefinitionName] as Definition).properties['extensionType'];\n    if (extensionType) {\n        extensionType[SchemaTag.artifactType] = ArtifactType.Manifest;\n    }\n}\n\n/**\n * Prepares and returns id of action for further use and reference\n * @param actionType - type of action\n * @param lineItemProperties - properties of the line item collection: lineItemPath, lineItemRecord, lineItemId\n * @returns {string} actionId\n */\nfunction getActionId(\n    actionType: ActionTypeV2,\n    lineItemProperties: { lineItemPath: any; lineItemRecord: any; lineItemId: any; entityType: EntityType }\n): string {\n    let actionId: string;\n    if (actionType === ActionTypeV2.ColumnIntentBased) {\n        actionId = getSchemaKeyOfLineItemRecord(lineItemProperties.lineItemRecord);\n    } else if (actionType === ActionTypeV2.ToolBarIntentBased || actionType === ActionTypeV2.FooterIntentBased) {\n        actionId = prepareRef(\n            `${lineItemProperties.lineItemRecord.SemanticObject}::${lineItemProperties.lineItemRecord.Action}`\n        );\n    } else if (\n        actionType === ActionTypeV2.Column &&\n        lineItemProperties.lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction\n    ) {\n        actionId = prepareRef(`DataFieldForAction:::sAction::${lineItemProperties.lineItemRecord.Action}`);\n    } else {\n        actionId = prepareRef(lineItemProperties.lineItemRecord.Action);\n    }\n    if (lineItemProperties.lineItemId && lineItemProperties.lineItemId !== 'LineItems') {\n        return `${lineItemProperties.lineItemId}??${actionId}`;\n    } else {\n        return actionId;\n    }\n}\n\n/**\n * Processes a LineItem record of type DataFieldForAction and DataFieldForIntentBasedNavigation during app schema generation\n * @param appSchema - the app specific schema that shall get enhanced\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param actions - actions definition in schema, parent object\n * @param lineItemProperties - properties of the line item collection: lineItemPath, lineItemRecord, lineItemId\n * @param actionType - type of action\n * @param recordIndex - record index in the collection\n */\nexport function handleActionRecord(\n    appSchema: Definition,\n    actions: Definition,\n    lineItemProps: { lineItemPath; lineItemRecord; lineItemId; entityType: EntityType },\n    actionType: ActionTypeV2,\n    recordIndex: number\n): void {\n    let actionReferenceType;\n    const actionTemplate = lineItemProps.lineItemId === DefinitionName.LineItems ? '' : 'ObjectPage';\n    const actionId = getActionId(actionType, lineItemProps);\n\n    if (actionType === ActionTypeV2.Footer || actionType === ActionTypeV2.FooterIntentBased) {\n        actionReferenceType = `Action`;\n        actionType = ActionTypeV2.Footer;\n    } else if (actionType === ActionTypeV2.Column || actionType === ActionTypeV2.ColumnIntentBased) {\n        actionReferenceType = `TableColumnAction`;\n    } else {\n        actionReferenceType = actionTemplate !== '' ? `${actionTemplate}${actionType}` : `Action`;\n        actionType = ActionTypeV2.ToolBar;\n    }\n    const actionDefinition = `${actionTemplate}${actionType}<${actionId}>`;\n    const description = getDataFieldDescription(\n        lineItemProps.lineItemRecord as DataFieldAbstractTypes,\n        lineItemProps.entityType\n    );\n    actions.properties[actionId] = {\n        $ref: DEFINITION_LINK_PREFIX + actionDefinition\n    };\n    actions.properties[actionId][SchemaTag.propertyIndex] = recordIndex;\n    const { key, ns } = getActionKey(lineItemProps.lineItemRecord.Action, true);\n    if (appSchema.definitions[actionReferenceType]) {\n        appSchema.definitions[actionDefinition] = {\n            ...JSON.parse(JSON.stringify(appSchema.definitions[actionReferenceType])),\n            description,\n            key,\n            annotationPath: `${lineItemProps.lineItemPath}/${recordIndex}`\n        };\n        if (ns) {\n            appSchema.definitions[actionDefinition][SchemaTag.target] = ns;\n        }\n    } else {\n        appSchema.definitions[actionDefinition] = {\n            type: 'object',\n            properties: {},\n            description,\n            additionalProperties: false\n        };\n        appSchema.definitions[actionDefinition][SchemaTag.isViewNode] = true;\n        appSchema.definitions[actionDefinition][SchemaTag.key] = `Action: ${key}`;\n        if (ns) {\n            appSchema.definitions[actionDefinition][SchemaTag.target] = ns;\n        }\n        appSchema.definitions[actionDefinition][\n            SchemaTag.annotationPath\n        ] = `${lineItemProps.lineItemPath}/${recordIndex}`;\n    }\n}\n\n/**\n * Returns the type of a column lineItem action\n * @param lineItemId - optional: in case of OP the parameter must be passed to distinguish the OP tables;\n * @param {object} lineItemRecord - actual record of the line item collection\n * @param actionTypes - array of action types to be filled\n */\nfunction getColumnActionType(lineItemId: string, lineItemRecord, actionTypes: ActionTypeV2[]) {\n    if (\n        lineItemId !== DefinitionName.LineItems &&\n        lineItemRecord.Inline === true &&\n        (lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction ||\n            lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation)\n    ) {\n        actionTypes.push(ActionTypeV2.OPColumn);\n    } else if (lineItemRecord.Inline === true && lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction) {\n        actionTypes.push(ActionTypeV2.Column);\n    } else if (\n        lineItemRecord.Inline === true &&\n        lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        actionTypes.push(ActionTypeV2.ColumnIntentBased);\n    }\n}\n\n/**\n * Returns the type of a lineItem action\n * @param {object} lineItemRecord - actual record of the line item collection\n * @returns {string[] | undefined } ActionTypeV2[] - action type(s) of the lineItem\n */\nfunction getActionType(lineItemRecord: DataFieldAbstractTypes, lineItemId: string): ActionTypeV2[] | undefined {\n    const actionTypes: ActionTypeV2[] = [];\n    if (\n        lineItemRecord.$Type !== UIAnnotationTypes.DataFieldForAction &&\n        lineItemRecord.$Type !== UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        return undefined;\n    }\n    if (\n        lineItemRecord.Inline !== true &&\n        lineItemRecord.Determining !== true &&\n        lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction\n    ) {\n        actionTypes.push(ActionTypeV2.ToolBar);\n    } else if (\n        lineItemRecord.Inline !== true &&\n        lineItemRecord.Determining !== true &&\n        lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        actionTypes.push(ActionTypeV2.ToolBarIntentBased);\n    } else if (lineItemRecord.Determining === true && lineItemRecord.$Type === UIAnnotationTypes.DataFieldForAction) {\n        actionTypes.push(ActionTypeV2.Footer);\n    } else if (\n        lineItemRecord.Determining === true &&\n        lineItemRecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation\n    ) {\n        actionTypes.push(ActionTypeV2.FooterIntentBased);\n    }\n    getColumnActionType(lineItemId, lineItemRecord, actionTypes);\n    return actionTypes;\n}\n\ntype LineItemProperties = {\n    lineItemPath: string;\n    lineItemRecord: DataFieldAbstractTypes;\n    lineItemId: string;\n    entityType: EntityType;\n};\n\nfunction generateGenericColumn(lineItemProperties: LineItemProperties, appSchema: Definition, recordIndex: number) {\n    const schemaKey = getSchemaKeyOfLineItemRecord(lineItemProperties.lineItemRecord);\n    if (schemaKey) {\n        const lineItemDefinition = appSchema.definitions[lineItemProperties.lineItemId] as Definition;\n        lineItemDefinition.properties[schemaKey] = {\n            $ref: DEFINITION_LINK_PREFIX + DefinitionName.TableColumn,\n            description: getDataFieldDescription(lineItemProperties.lineItemRecord, lineItemProperties.entityType)\n            // Custom property in schema - for object properties ordering purpose\n        };\n        lineItemDefinition.properties[schemaKey][SchemaTag.propertyIndex] = recordIndex;\n        lineItemDefinition.properties[schemaKey][\n            SchemaTag.annotationPath\n        ] = `${lineItemProperties.lineItemPath}/${recordIndex}`;\n        addDataTypeToDefinition(\n            lineItemDefinition.properties[schemaKey] as Definition,\n            lineItemProperties.lineItemRecord\n        );\n        addKeyToDefinition(lineItemProperties.lineItemRecord, lineItemDefinition.properties, schemaKey);\n    }\n}\n\nfunction handleAnyAction(\n    actionType: ActionTypeV2,\n    appSchema: Definition,\n    actions: object,\n    lineItemProperties: LineItemProperties,\n    recordIndex: number,\n    footerActions: object,\n    lineItemId: string\n) {\n    switch (actionType) {\n        case ActionTypeV2.ToolBar:\n        case ActionTypeV2.ToolBarIntentBased: {\n            handleActionRecord(appSchema, actions, lineItemProperties, actionType, recordIndex);\n            break;\n        }\n        case ActionTypeV2.Footer:\n        case ActionTypeV2.FooterIntentBased: {\n            if (footerActions) {\n                handleActionRecord(appSchema, footerActions, lineItemProperties, actionType, recordIndex);\n            }\n            break;\n        }\n        case ActionTypeV2.Column:\n        case ActionTypeV2.ColumnIntentBased: {\n            handleActionRecord(\n                appSchema,\n                appSchema.definitions[lineItemId] as Definition,\n                lineItemProperties,\n                actionType,\n                recordIndex\n            );\n            break;\n        }\n        case ActionTypeV2.OPColumn: {\n            generateGenericColumn(lineItemProperties, appSchema, recordIndex);\n        }\n    }\n}\n\n/**\n * Adds the line item records to the app schema (for the list report or an object page section comprising a table)\n * @param appSchema - the app specific schema that shall get enhanced\n * @param lineItemAnnotation - the UI.LineItem annotation, comprising all records\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param lineItemId - optional: in case of OP the parameter must be passed to distinguish the OP tables;\n *                      in case of LR or ALP no ID is passed, 'LineItems' is taken then.\n * @param customColumnRef - schema reference to custom column definition.\n */\nexport function addLineItemsType(\n    appSchema: Definition,\n    lineItemAnnotation: AnnotationTerm<LineItem>,\n    entityType: EntityType,\n    lineItemId?: string,\n    customColumnRef?: string\n): void {\n    // Add the correct lineItem definition\n    lineItemId = lineItemId || DefinitionName.LineItems;\n\n    const { actions, footerActions, lineItemPath } = addCommonLineItemDefinitions(\n        appSchema,\n        lineItemAnnotation,\n        entityType,\n        lineItemId\n    );\n\n    if (lineItemAnnotation) {\n        let recordIndex = 0;\n        lineItemAnnotation.forEach((lineItemRecord) => {\n            const lineItemProperties: LineItemProperties = { lineItemPath, lineItemRecord, lineItemId, entityType };\n            const actionTypes = getActionType(lineItemRecord, lineItemId);\n            if (actionTypes) {\n                actionTypes.forEach((actionType) => {\n                    handleAnyAction(\n                        actionType,\n                        appSchema,\n                        actions,\n                        lineItemProperties,\n                        recordIndex,\n                        footerActions,\n                        lineItemId\n                    );\n                });\n            } else {\n                generateGenericColumn(lineItemProperties, appSchema, recordIndex);\n            }\n            recordIndex++;\n        });\n    }\n    if (customColumnRef) {\n        (appSchema.definitions[lineItemId] as Definition).properties['custom'] = {\n            $ref: `${DEFINITION_LINK_PREFIX}${customColumnRef}`\n        };\n    }\n}\n\n/**\n * Adds enum entries of possible leading properties for 'leadingProperty' property in TableCustomColumn properties.\n * @param appSchema - the app specific schema that shall get enhanced\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param definitionName - definition name of CustomColumn definition\n */\nexport function addListReportLeadingProperties(\n    appSchema: object,\n    entityType: EntityType,\n    definitionName: string\n): void {\n    // Leading Property\n    const leadingPropertySchema =\n        appSchema['definitions'][definitionName] &&\n        appSchema['definitions'][definitionName]['properties'] &&\n        appSchema['definitions'][definitionName]['properties']['leadingProperty'];\n    if (leadingPropertySchema) {\n        const properties = [\n            //  Entity properties\n            ...(entityType?.entityProperties || []),\n            // Navigation Properties\n            ...(entityType?.navigationProperties || [])\n        ];\n        leadingPropertySchema['enum'] = properties?.reduce((result: string[], property) => {\n            if (!result.includes(property.name)) {\n                result.push(property.name);\n            }\n            return result;\n        }, []);\n    }\n}\n\n/**\n * Adds enum entries of posible tabKey properties for 'leadingProperty' property in TableCustomColumn properties.\n * @param appSchema - the app specific schema that shall get enhanced\n * @param definitionName - definition name of CustomColumn definition\n * @param page - sapui5 page object\n */\nexport function addTabkeyEnum(appSchema: object, definitionName: string, page?: v2.SapUiAppPageV2): void {\n    const tabkeyPropertySchema =\n        appSchema['definitions'][definitionName] &&\n        appSchema['definitions'][definitionName]['properties'] &&\n        appSchema['definitions'][definitionName]['properties']['tabKey'];\n    if (page) {\n        const quickVariantsX =\n            page.component &&\n            page.component.settings &&\n            page.component.settings.quickVariantSelectionX &&\n            page.component.settings.quickVariantSelectionX['variants'];\n        if (quickVariantsX) {\n            const enumEntries = [];\n            Object.keys(quickVariantsX).reduce((result: string[], variant) => {\n                const key =\n                    quickVariantsX[variant] && quickVariantsX[variant]['key'] !== undefined\n                        ? quickVariantsX[variant]['key']\n                        : undefined;\n                // Avoid duplicates\n                if (key !== undefined && !result.includes(key)) {\n                    result.push(key);\n                }\n                return result;\n            }, enumEntries);\n            tabkeyPropertySchema['enum'] = enumEntries;\n        }\n    }\n}\n\n/**\n * Adds enum entries of posible fragment entries.\n * @param {object} appSchema The app specific schema that shall get enhanced.\n * @param {FileData[]} fragments Array of fragments.\n * @param {string[]} appId Application id.\n * @param {string} property Property name.\n * @param {string} definitionName Definition name of CustomColumn definition.\n */\nexport function addFragmentEnum(\n    appSchema: Definition,\n    fragments: FileData[],\n    appId: string,\n    property: string,\n    definitionName: string\n): void {\n    if (!fragments || !appId || appId.startsWith('${')) {\n        return;\n    }\n    const enumEntries = [];\n    fragments.forEach((fragment) => {\n        let relPath = fragment.dataSourceUri.split('webapp')[1];\n        if (relPath && relPath.indexOf('.fragment.xml') > 0) {\n            const fragmentJson = JSON.parse(xml2json(fragment.fileContent, { compact: true }))[\n                'core:FragmentDefinition'\n            ];\n            if (\n                (property === 'fragmentName' &&\n                    (!fragmentJson || fragmentJson.Column || fragmentJson['table:Column'])) ||\n                (property === 'cellsFragmentName' &&\n                    (!fragmentJson ||\n                        (!fragmentJson.Column &&\n                            !fragmentJson['table:Column'] &&\n                            !fragmentJson['smartfilterbar:ControlConfiguration'])))\n            ) {\n                relPath = relPath.replace(new RegExp('\\\\' + sep, 'g'), '/');\n                const fragmentName = appId + relPath.split('.fragment.xml')[0].replace(/\\//g, '.');\n                enumEntries.push(fragmentName);\n            }\n        }\n    });\n    if (enumEntries.length > 0) {\n        const fragmentPropertySchema = appSchema.definitions[definitionName]?.['properties']?.[property];\n        fragmentPropertySchema['enum'] = enumEntries;\n    }\n}\n\n/**\n * Adds the custom columns to the line item records of the app schema (for the list report comprising a table).\n * @param {object} appSchema The app specific schema that shall get enhanced.\n * @param {EntityType} entityType The entity type as part of the AVT ConvertedMetadata.\n * @param {SapUiAppPageV2} page Sapui5 page object.\n * @param {object} manifest Application manifest.\n * @param {FileData[]} [fragments] Array of fragments.\n * @param {string} [customColumnsDefinitionName=DefinitionName.CustomColumns] Definition name of Custom Columns definition.\n * @param {string} [customColumnDefinitionName=DefinitionName.CustomColumn] Definition name of Custom Column definition.\n */\nexport function addTableColumnExtensions(\n    appSchema: object,\n    entityType: EntityType,\n    page: v2.SapUiAppPageV2,\n    manifest: object,\n    fragments?: FileData[],\n    customColumnsDefinitionName: string = DefinitionName.CustomColumns,\n    customColumnDefinitionName: string = DefinitionName.CustomColumn\n): void {\n    addCustomColumnDefinition(appSchema, customColumnsDefinitionName, customColumnDefinitionName);\n\n    // Leading Property\n    addListReportLeadingProperties(appSchema, entityType, customColumnDefinitionName);\n    // Tab key property\n    addTabkeyEnum(appSchema, customColumnDefinitionName, page);\n    // Fragment property\n    const appId = manifest && manifest['sap.app'] && manifest['sap.app']['id'];\n    addFragmentEnum(appSchema, fragments, appId, 'fragmentName', customColumnDefinitionName);\n    addFragmentEnum(appSchema, fragments, appId, 'cellsFragmentName', customColumnDefinitionName);\n}\n\n/**\n * Processes an anyOf definition of the generic schema\n * @param propertyDefinition - current definition in the generic schema\n * @param schema - the app-specific schema\n * @param propertyKey - key of the single property\n * @param factory - factory for creating metadata instances\n * @param pageType - page type\n */\nfunction processAnyOf(\n    propertyDefinition: any,\n    schema: object,\n    propertyKey: string,\n    factory: MetadataInstanceInterface,\n    pageType: PageType | PageTypeV4\n) {\n    propertyDefinition['anyOf'].forEach((element) => {\n        const nextDefinition = getNextTargetDefinition(schema, '', {}, element, propertyKey, factory, pageType);\n        if (nextDefinition) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            processMetadata(schema, nextDefinition.targetDefinition, nextDefinition.configObject, pageType, factory);\n        }\n    });\n}\n\n/**\n * Processes an object reference of the generic schema\n * @param schema\n * @param propertyDefinition - current definition in the generic schema\n * @param propertyKey - key of the single property\n * @param factory - factory for creating metadata instances\n * @param pageType - page type\n */\nfunction processObject(\n    schema: object,\n    propertyDefinition: any,\n    propertyKey: string,\n    factory: MetadataInstanceInterface,\n    pageType: PageType | PageTypeV4\n) {\n    const nextDefinition = getNextTargetDefinition(schema, '', {}, propertyDefinition, propertyKey, factory, pageType);\n    if (nextDefinition) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        processMetadata(schema, nextDefinition.targetDefinition, nextDefinition.configObject, pageType, factory);\n    }\n}\n\n/**\n * Determines the artifact type of a property and adds it to the property definition in schema\n * @param syncRule - sync rule of the current property\n * @param propertyDefinition - current definition in the generic schema\n */\nfunction addArtifactType(syncRule: SyncRule, propertyDefinition: any) {\n    if (syncRule.manifest !== undefined) {\n        propertyDefinition.artifactType = ArtifactType.Manifest;\n    } else if (syncRule.flex !== undefined) {\n        propertyDefinition.artifactType = ArtifactType.FlexChange;\n        //Add control type\n        if (syncRule.flex.controlType) {\n            propertyDefinition.controlType = syncRule.flex.controlType();\n        }\n    } else {\n        propertyDefinition.artifactType = ArtifactType.Annotation;\n    }\n}\n\n/**\n * After the generation of a generic schema, apply post-generation rule to a single property\n * @param metaDataDefinition\n * @param schema - given app schema, to be adapted\n * @param pageType - page type\n * @param factory - factory for creating metadata instances\n * @param propertyDefinition - definition of the single property\n * @param propertyKey - key of the single property\n * @param schemaDefinition - the current entry point or definition in the app schema\n */\nfunction processSingleProperty(\n    metaDataDefinition: { [key: string]: any },\n    schema: object,\n    pageType: PageType | PageTypeV4,\n    factory: MetadataInstanceInterface,\n    propertyDefinition: any,\n    propertyKey: string,\n    schemaDefinition: object\n): void {\n    if (metaDataDefinition) {\n        const syncRule = getReflectMetadata(metaDataDefinition, propertyKey);\n        if (syncRule) {\n            if (typeof syncRule.generate === 'function') {\n                syncRule.generate(schema, schemaDefinition, propertyKey);\n                propertyDefinition = schemaDefinition['properties'][propertyKey];\n            }\n            //Add artifact type\n            addArtifactType(syncRule, propertyDefinition);\n        }\n        if (propertyDefinition.type === 'object' || propertyDefinition.$ref) {\n            processObject(schema, propertyDefinition, propertyKey, factory, pageType);\n        } else if (propertyDefinition['anyOf']) {\n            processAnyOf(propertyDefinition, schema, propertyKey, factory, pageType);\n        }\n    }\n}\n\n/**\n * After the generation of a generic schema, apply rules to a list of properties of the given schema section\n * @param schema - given app schema, to be adapted\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param pageType - page type\n * @param factory - factory for creating metadata instances\n */\nfunction processProperties(\n    schema: object,\n    schemaDefinition: object,\n    metaDataDefinition: { [key: string]: any },\n    propertiesSection: string,\n    pageType: PageType | PageTypeV4,\n    factory: MetadataInstanceInterface\n) {\n    if (schemaDefinition[propertiesSection]) {\n        for (const propertyKey in schemaDefinition[propertiesSection]) {\n            if (propertyKey === 'anyOf') {\n                processAnyOf(schemaDefinition[propertiesSection], schema, propertyKey, factory, pageType);\n            } else {\n                const propertyDefinition = schemaDefinition[propertiesSection][propertyKey];\n                if (propertyDefinition['anyOf']) {\n                    processAnyOf(propertyDefinition, schema, propertyKey, factory, pageType);\n                } else if (propertyKey === '$ref') {\n                    processObject(schema, schemaDefinition[propertiesSection], propertyKey, factory, pageType);\n                } else {\n                    processSingleProperty(\n                        metaDataDefinition,\n                        schema,\n                        pageType,\n                        factory,\n                        propertyDefinition,\n                        propertyKey,\n                        schemaDefinition\n                    );\n                }\n            }\n        }\n    }\n}\n\n/**\n * Apply post-processing rules as specified in form of \"generate\" at the syncRule\n * @param schema - given app schema, to be adapted\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param pageType - page type\n * @param factory - factory for creating metadata instances\n */\nexport function processMetadata(\n    schema: object,\n    schemaDefinition: object,\n    metaDataDefinition: { [key: string]: any },\n    pageType: PageType | PageTypeV4,\n    factory: MetadataInstanceInterface\n): void {\n    processProperties(schema, schemaDefinition, metaDataDefinition, 'properties', pageType, factory);\n    processProperties(schema, schemaDefinition, metaDataDefinition, 'additionalProperties', pageType, factory);\n    processProperties(schema, schemaDefinition, metaDataDefinition, 'patternProperties', pageType, factory);\n}\n\n/**\n * Method updates passed 'enum' array by removing passed matching entries.\n * @param {Array<unknown>} values Array of values.\n * @param {Array<unknown>} valuesToRemove Array of values to remove.\n */\nexport function removeElementsFromEnum(values: Array<unknown>, valuesToRemove: Array<unknown>): void {\n    for (const value of valuesToRemove) {\n        const index = values.indexOf(value);\n        if (index !== -1) {\n            // Value exists - remove it\n            values.splice(index, 1);\n        }\n    }\n}\n\n/**\n * Adds the selection fields to the app schema, as properties of the Filterbar\n * @param entityType - the entity type as part of the AVT ConvertedMetadata\n * @param appSchema - the app specific schema that shall get enhanced\n * @param selectionFieldsAnnotation - the UI.SelectionField annotation\n */\nexport function addSelectionFields(\n    appSchema: object,\n    selectionFieldsAnnotation: AnnotationTerm<SelectionFields>,\n    entityType: EntityType\n): void {\n    const selectionFieldsDefinition = (appSchema['definitions'].SelectionFields = {\n        ...appSchema['definitions'].SelectionFields,\n        properties: {},\n        additionalProperties: false,\n        annotationPath: createAnnotationPath(entityType.fullyQualifiedName, UIAnnotationTerms.SelectionFields)\n    });\n    if (!selectionFieldsAnnotation) {\n        return;\n    }\n    let i = 0;\n    selectionFieldsAnnotation.forEach((selectionField) => {\n        let description = selectionField.value;\n        const fieldDefinition = `SelectionField<${prepareRef(selectionField.value)}>`;\n        const dataType = determineDataType(selectionField);\n        if (selectionField.type === 'PropertyPath') {\n            description = getLabelForPropertyPath(selectionField, entityType);\n        }\n        selectionFieldsDefinition['properties'][selectionField.value] = {\n            $ref: DEFINITION_LINK_PREFIX + fieldDefinition,\n            propertyIndex: i\n        };\n        appSchema['definitions'][fieldDefinition] = {\n            type: 'object',\n            description,\n            key: `Value: ${selectionField.value}`,\n            annotationPath: `${selectionFieldsDefinition.annotationPath}/${i}`,\n            isViewNode: true,\n            additionalProperties: false,\n            annotationType: selectionField?.type,\n            dataType\n        };\n        if (['Date', 'DateTime', 'DateTimeOffset'].includes(dataType)) {\n            appSchema['definitions'][fieldDefinition]['$ref'] = `${DEFINITION_LINK_PREFIX}SelectionFieldDateSettings`;\n        } else {\n            appSchema['definitions'][fieldDefinition].properties = {};\n        }\n        i++;\n    });\n}\n\n/**\n * Add entityProperties to passed a passed enum entry\n * @param {string[]} appSchemaEnum - Enum to be enhanced\n * @param {EntityType} entityType - Given entity type for which entries shall get generated\n */\nexport function addEntityPropertiesToEnum(appSchemaEnum: string[], entityType: EntityType): void {\n    for (const key of entityType.entityProperties) {\n        appSchemaEnum.push(key.name);\n    }\n}\n", "import { addLineItemsType, addSelectionFields, addTableColumnExtensions, addEntityPropertiesToEnum } from './utils';\nimport { findListReportPageV2 } from '../import';\nimport {\n    DEFINITION_LINK_PREFIX,\n    addFieldsType,\n    addEnumForSingleTabVariant,\n    addEnumForMultiTabVariant,\n    addEnumForVariantEntitySet,\n    addEnumForFilterBarAnnotationPath,\n    addEnumFieldGroupAnnotationPath\n} from '../../common';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../i18n/i18n';\nimport { ManifestSection, METADATAPATH, DefinitionName, LogSeverity, MANIFESTPATH } from '@sap/ux-specification-types';\nimport { log } from '../../../extensionLogger';\nimport { ANALYTICALTABLE, GRIDTABLE, INLINEDELETETABLE, MULTISELECTTABLE, TREETABLE } from '../types';\nimport type { ConvertedMetadata, EntitySet, EntityType } from '@sap-ux/vocabularies-types';\nimport type { Definition } from 'typescript-json-schema';\nimport type { GenerateAppSchemaParameters } from '@sap/ux-specification-types';\n\n/**\n * Adds the enum types for QuickVariant and QuickVariantX, based on the entity type annotations\n * @param {EntityType} entityType\n * @param {EntitySet} entitySet - current entity set of the page or view\n * @param {Definition} appSchema - app specific JSON schema\n * @param {ConvertedMetadata} oDataServiceAVT - combined service metadata, as returned by annotation vocabularies tools\n */\nexport function addEnumForVariantPaths(\n    entityType: EntityType,\n    entitySet: EntitySet,\n    appSchema: Definition,\n    oDataServiceAVT: ConvertedMetadata\n): void {\n    addEnumForSingleTabVariant(entityType, appSchema, 'QuickVariant');\n    addEnumForMultiTabVariant(appSchema, 'QuickVariantX', entitySet);\n    addEnumForVariantEntitySet(oDataServiceAVT, appSchema, 'QuickVariantX');\n}\n\n/**\n * Generates an app specific schema for the FE V2 Listreport from the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param {object} genericSchema - generic JSON schema of a list report\n * @param {string} entityTypeName - the base entity type of the given page\n * @param {EntityType[]} entityTypes - list of all entity types\n * @returns appSchema - the application specific JSON schema\n */\nexport function generateListReportSchemaV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: Definition,\n    entityTypeName: string\n): object {\n    // Initialize i18next\n    initI18n();\n\n    const appSchema = JSON.parse(JSON.stringify(genericSchema)) as Definition;\n\n    appSchema.properties.table['anyOf']['0']['$ref'] = DEFINITION_LINK_PREFIX + MULTISELECTTABLE;\n    appSchema.properties.table['anyOf']['1']['$ref'] = DEFINITION_LINK_PREFIX + INLINEDELETETABLE;\n    appSchema.properties.table['anyOf']['2']['$ref'] = DEFINITION_LINK_PREFIX + TREETABLE;\n    appSchema.properties.table['anyOf']['3']['$ref'] = DEFINITION_LINK_PREFIX + ANALYTICALTABLE;\n    appSchema.properties.table['anyOf']['4']['$ref'] = DEFINITION_LINK_PREFIX + GRIDTABLE;\n\n    const responsiveTableMultiSelect = JSON.parse(\n        JSON.stringify(genericSchema.definitions.ResponsiveTableWithMultiSelect)\n    ) as Definition;\n    const responsiveTableInlineDelete = JSON.parse(\n        JSON.stringify(genericSchema.definitions.ResponsiveTableWithInlineDelete)\n    );\n    const treeTableDefinition = JSON.parse(JSON.stringify(genericSchema.definitions.TreeTable));\n    const analyticalTableDefinition = JSON.parse(JSON.stringify(genericSchema.definitions.AnalyticalTable));\n    const gridTableDefinition = JSON.parse(JSON.stringify(genericSchema.definitions.GridTable));\n\n    const lrLineItems = {\n        $ref: DEFINITION_LINK_PREFIX + DefinitionName.LineItems\n    };\n    responsiveTableMultiSelect.properties.columns = lrLineItems;\n    responsiveTableInlineDelete.properties.columns = lrLineItems;\n    treeTableDefinition.properties.columns = lrLineItems;\n    analyticalTableDefinition.properties.columns = lrLineItems;\n    gridTableDefinition.properties.columns = lrLineItems;\n\n    const lrToolBar = DEFINITION_LINK_PREFIX + DefinitionName.ToolBarLR;\n    appSchema.definitions[MULTISELECTTABLE] = responsiveTableMultiSelect;\n    (appSchema.definitions[MULTISELECTTABLE] as Definition).properties.toolBar['$ref'] = lrToolBar;\n    appSchema.definitions[INLINEDELETETABLE] = responsiveTableInlineDelete;\n    (appSchema.definitions[INLINEDELETETABLE] as Definition).properties.toolBar['$ref'] = lrToolBar;\n    appSchema.definitions[TREETABLE] = treeTableDefinition;\n    (appSchema.definitions[TREETABLE] as Definition).properties.toolBar['$ref'] = lrToolBar;\n    appSchema.definitions[ANALYTICALTABLE] = analyticalTableDefinition;\n    (appSchema.definitions[ANALYTICALTABLE] as Definition).properties.toolBar['$ref'] = lrToolBar;\n    appSchema.definitions[GRIDTABLE] = gridTableDefinition;\n    (appSchema.definitions[GRIDTABLE] as Definition).properties.toolBar['$ref'] = lrToolBar;\n\n    const entityType = generateParameters.serviceAVT?.entityTypes.find((et) => et.name === entityTypeName);\n    if (!entityType) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYTYPE', { entityType: entityTypeName }),\n            location: {\n                path: METADATAPATH\n            }\n        });\n    } else {\n        //handle line items\n        const lineItemAnnotation =\n            entityType.annotations && entityType.annotations.UI && entityType.annotations.UI.LineItem;\n        addLineItemsType(appSchema, lineItemAnnotation, entityType);\n        //handle filter fields\n        const selectionFieldAnnotation = entityType?.annotations?.UI?.SelectionFields;\n        addSelectionFields(appSchema, selectionFieldAnnotation, entityType);\n\n        //add fields for createWithParameterDialog\n        addFieldsType(appSchema, entityType);\n\n        // add entityProperties to a enum, in this case MultiEdit -> ignoredFields\n        appSchema.definitions.MultiEdit['properties']['ignoredFields']['items']['enum'] = [];\n        addEntityPropertiesToEnum(\n            appSchema.definitions.MultiEdit['properties']['ignoredFields']['items']['enum'],\n            entityType\n        );\n\n        const pageKeys = [];\n        const v2Page = findListReportPageV2(generateParameters.manifest[ManifestSection.generic].pages, pageKeys);\n        if (!v2Page) {\n            log(generateParameters.logger, {\n                severity: LogSeverity.Error,\n                message: i18next.t('NOALP'),\n                location: {\n                    path: MANIFESTPATH,\n                    range: [ManifestSection.generic]\n                }\n            });\n            return appSchema;\n        }\n        addTableColumnExtensions(\n            appSchema,\n            entityType,\n            v2Page,\n            generateParameters.manifest,\n            generateParameters.fragments\n        );\n\n        const entitySet = generateParameters.serviceAVT?.entitySets?.find((es) => es.name === v2Page.entitySet);\n        addEnumForVariantPaths(entityType, entitySet, appSchema, generateParameters.serviceAVT);\n        addEnumForFilterBarAnnotationPath(entityType, appSchema, DefinitionName.ListReportFilterBar);\n        addEnumFieldGroupAnnotationPath(entityType, appSchema, DefinitionName.MultiEditV2);\n\n        //Delete generic definitions\n        delete appSchema.definitions.ResponsiveTableWithMultiSelect;\n        delete appSchema.definitions.ResponsiveTableWithInlineDelete;\n        delete appSchema.definitions.TreeTable;\n        delete appSchema.definitions.AnalyticalTable;\n        delete appSchema.definitions.GridTable;\n        delete appSchema.definitions.GenericColumns;\n        delete appSchema.definitions.TableColumnAction;\n        delete appSchema.definitions.ToolBar;\n        delete appSchema.definitions.Actions;\n        delete appSchema.definitions.GenericFooter;\n    }\n    return appSchema;\n}\n", "import { addLineItemsType, addSelectionFields, addTableColumnExtensions, removeElementsFromEnum } from './utils';\nimport { findAnalyticalListPage } from '../import';\nimport { addFieldsType, DEFINITION_LINK_PREFIX } from '../../common';\nimport i18next from 'i18next';\nimport { initI18n } from '../../../i18n/i18n';\nimport { log } from '../../../extensionLogger';\nimport {\n    v2,\n    ManifestSection,\n    LogSeverity,\n    METADATAPATH,\n    DefinitionName,\n    PropertyName\n} from '@sap/ux-specification-types';\nimport { addEnumForVariantPaths } from './listReport';\nimport type { Definition } from 'typescript-json-schema';\nimport type { GenerateAppSchemaParameters } from '@sap/ux-specification-types';\n\n/**\n * Generates an app specific schema out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n * @param {GenerateAppSchemaParameters} generateParameters - list of API input parameters\n * @param genericSchema - generic JSON schema of a list report\n * @param entityTypeName - the base entity type of the given page\n */\nexport function generateAnalyticalListReportSchemaV2(\n    generateParameters: GenerateAppSchemaParameters,\n    genericSchema: object,\n    entityTypeName: string\n): object {\n    // Initialize i18next\n    initI18n();\n\n    const appSchema = JSON.parse(JSON.stringify(genericSchema)) as Definition;\n\n    (appSchema.properties[PropertyName.table] as Definition).anyOf[0]['$ref'] =\n        DEFINITION_LINK_PREFIX + 'ALPResponsiveTable<LineItems>';\n    const tableDefinitionResponsive = JSON.parse(\n        JSON.stringify(appSchema.definitions['ALPResponsiveTable'])\n    ) as Definition;\n    tableDefinitionResponsive.properties['columns']['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.LineItems}`;\n    tableDefinitionResponsive.properties['toolBar']['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n    appSchema.definitions['ALPResponsiveTable<LineItems>'] = tableDefinitionResponsive;\n\n    appSchema.properties[PropertyName.table]['anyOf'][1]['$ref'] = `${DEFINITION_LINK_PREFIX}ALPGridTable<LineItems>`;\n    const tableDefinitionGrid = JSON.parse(JSON.stringify(appSchema['definitions']['ALPGridTable'])) as Definition;\n    tableDefinitionGrid.properties['columns']['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.LineItems}`;\n    tableDefinitionGrid.properties['toolBar']['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n    appSchema.definitions['ALPGridTable<LineItems>'] = tableDefinitionGrid;\n\n    appSchema.properties[PropertyName.table]['anyOf'][2][\n        '$ref'\n    ] = `${DEFINITION_LINK_PREFIX}ALPAnalyticalTable<LineItems>`;\n    const tableDefinitionAnalytical = JSON.parse(\n        JSON.stringify(appSchema.definitions['ALPAnalyticalTable'])\n    ) as Definition;\n    tableDefinitionAnalytical.properties['columns']['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.LineItems}`;\n    tableDefinitionAnalytical.properties['toolBar']['$ref'] = `${DEFINITION_LINK_PREFIX}${DefinitionName.ToolBarLR}`;\n    appSchema.definitions['ALPAnalyticalTable<LineItems>'] = tableDefinitionAnalytical;\n\n    // Remove Custom Column non existing extensions - TreeTableColumnsExtension does not exist in ALP\n    removeElementsFromEnum(appSchema['definitions']['TableColumnExtensionTypeV2']['enum'], [\n        v2.TableColumnExtensionTypeV2.TreeTableColumnsExtension\n    ]);\n\n    const entityType = generateParameters.serviceAVT?.entityTypes?.find((et) => et.name === entityTypeName);\n    if (!entityType) {\n        log(generateParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOENTITYTYPE', { entityType: entityTypeName }),\n            location: {\n                path: METADATAPATH\n            }\n        });\n    } else {\n        //handle line items\n        const lineItemAnnotation = entityType?.annotations?.UI?.LineItem;\n        addLineItemsType(appSchema, lineItemAnnotation, entityType);\n        //handle filter fields\n        const selectionFieldAnnotation = entityType?.annotations?.UI?.SelectionFields;\n        addSelectionFields(appSchema, selectionFieldAnnotation, entityType);\n\n        //add fields for createWithParameterDialog\n        addFieldsType(appSchema, entityType);\n\n        const pageKeys = [];\n        const v2Page = findAnalyticalListPage(\n            generateParameters.manifest[ManifestSection.generic].pages,\n            pageKeys,\n            generateParameters.logger\n        );\n        if (!v2Page) {\n            return appSchema;\n        }\n        addTableColumnExtensions(\n            appSchema,\n            entityType,\n            v2Page,\n            generateParameters.manifest,\n            generateParameters.fragments\n        );\n        const entitySet = generateParameters.serviceAVT?.entitySets?.find((es) => es.name === v2Page.entitySet);\n        addEnumForVariantPaths(entityType, entitySet, appSchema, generateParameters.serviceAVT);\n\n        // Delete generic definitions that have been replaced\n        delete appSchema.definitions['ALPGridTable'];\n        delete appSchema.definitions['ALPResponsiveTable'];\n        delete appSchema.definitions['ALPAnalyticalTable'];\n        delete appSchema.definitions['GenericColumns'];\n        delete appSchema.definitions['TableColumnAction'];\n        delete appSchema.definitions['ToolBar'];\n        delete appSchema.definitions['GenericFooter'];\n        delete appSchema.definitions['Actions'];\n    }\n\n    return appSchema;\n}\n", "import type { Manifest, SapUi5OdataModel } from '@sap/ux-specification-types';\nimport { DEFINITION_LINK_PREFIX } from '../../common';\n\n/**\n * Method returns array of card definition names.\n * @param genericSchema - Generic schema of Overview Page.\n *\n * @returns Array of definition names\n */\nexport function getCardDefinitionNames(genericSchema: object): Array<string> {\n    // Apply enum to all card properties\n    const properties = genericSchema['properties'];\n    const cardProperties =\n        (properties['cards'] &&\n            properties['cards']['additionalProperties'] &&\n            properties['cards']['additionalProperties']['anyOf']) ||\n        [];\n    return cardProperties.map((cardProperty: object) => {\n        // Resolve ref\n        const refParts = cardProperty['$ref'].split('/');\n        return refParts[refParts.length - 1];\n    });\n}\n\n/**\n * Defines and adds enum entries for 'model' property of Cards.\n * @param appSchema - the app specific schema that shall get enhanced\n * @param manifest - manifest.json of the app\n */\nexport function addModelsEnum(appSchema: object, manifest: Manifest): void {\n    const dataSources = (manifest && manifest['sap.app'] && manifest['sap.app'].dataSources) || {};\n    const serviceKeys = Object.keys(dataSources);\n    const models = (manifest && manifest['sap.ui5'] && manifest['sap.ui5'].models) || {};\n    let enumValues = [];\n    enumValues = enumValues.concat(\n        Object.keys(models).filter((model) => serviceKeys.includes((models[model] as SapUi5OdataModel).dataSource))\n    );\n\n    // Define enum\n    const definition = appSchema['definitions'];\n    definition['CardModel'] = {\n        enum: enumValues,\n        type: 'string'\n    };\n    // Apply enum to all card properties\n    const cards = getCardDefinitionNames(appSchema);\n    for (const card of cards) {\n        const property = definition[card]['properties']['model'];\n        delete property.type;\n        property['$ref'] = DEFINITION_LINK_PREFIX + 'CardModel';\n    }\n}\n\n/**\n * Generates an app specific schema out of the generic schema.\n * Generic types are replaced by information from the app manifest.\n *\n * @param genericSchema - generic JSON schema of an object page\n * @param manifest - manifest.json of the app\n *\n * @returns the app specific JSON schema\n */\nexport function generateOverviewPageSchemaV2(genericSchema: object, manifest: Manifest): object {\n    const appSchema = JSON.parse(JSON.stringify(genericSchema));\n    // schema validation for card name\n    appSchema['properties']['cards']['propertyNames'] = {\n        pattern: '^[a-zA-Z0-9_\\\\.\\\\-]+$'\n    };\n    // Enhance 'model' property with enum entries\n    addModelsEnum(appSchema, manifest);\n    return appSchema;\n}\n", "import { parseAndMergeAndConvert } from '../../common/utils';\nimport { generateObjectPageSchemaV2 } from './objectPage';\nimport { generateListReportSchemaV2 } from './listReport';\nimport { generateAnalyticalListReportSchemaV2 } from './analyticalListReport';\nimport { generateOverviewPageSchemaV2 } from './overviewPage';\nimport type { ExtensionLogger, GenerateAppSchemaParameters, FileData } from '@sap/ux-specification-types';\nimport { FioriElementsVersion, TemplateType } from '@sap/ux-specification-types';\n\n/**\n * Generates an app specific schema out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n *\n * @param {object} genericSchema - generic JSON schema of an object page\n * @param {string} entitySet - the base entity type of the given page\n * @param {FileData[]} annotations - list of all annotation files (file content plus URI as identifier)\n * @param {object} manifest - manifest.json of the app\n * @param {FileData[]} [fragments] - Array with XML fragments.\n * @param {ExtensionLogger} logger - Logger class for logging messages\n *\n * @returns the app specific JSON schema\n */\nexport function generateObjectPageInterfaceV2(\n    genericSchema: object,\n    entitySet: string,\n    annotations: FileData[],\n    manifest: object,\n    fragments?: FileData[],\n    logger?: ExtensionLogger\n): object {\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType: TemplateType.ListReportObjectPageV2,\n        fioriElementsVersion: FioriElementsVersion.v2,\n        manifest,\n        fragments,\n        serviceAVT,\n        logger\n    };\n    return generateObjectPageSchemaV2(generateParameters, genericSchema, entitySet);\n}\n\n/**\n * Generates the app specific schema of a list report out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n *\n * @param genericSchema - generic JSON schema of a list report\n * @param entityType - the base entity type of the given page\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param manifest - manifest.json of the app\n * @param {FileData[]} fragments - list of fragment files and their content\n * @param {ExtensionLogger} logger - Logger class for logging messages\n *\n * @returns the app specific JSON schema\n */\nexport function generateListReportInterfaceV2(\n    genericSchema: object,\n    entityType: string,\n    annotations: FileData[],\n    manifest: object,\n    fragments?: FileData[],\n    logger?: ExtensionLogger\n): object {\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType: TemplateType.ListReportObjectPageV2,\n        fioriElementsVersion: FioriElementsVersion.v2,\n        manifest,\n        fragments,\n        serviceAVT,\n        logger\n    };\n    return generateListReportSchemaV2(generateParameters, genericSchema, entityType);\n}\n\n/**\n * Generates the app specific schema of an overview page\n * @param genericSchema - file content of the generic schema\n * @param manifest - manifest.json of the app\n *\n * @returns the generic schema, as equivalent to the app schema\n */\nexport function generateOVPInterfaceV2(genericSchema: object, manifest: object): object {\n    return generateOverviewPageSchemaV2(genericSchema, manifest);\n}\n\n/**\n * Generates the app specific schema of an analytical list page out of the generic schema.\n * Generic types are replaced by information from the app specific annotations.\n *\n * @param genericSchema - generic JSON schema of a list report\n * @param entityType - the base entity type of the given page\n * @param annotations - list of all annotation files (file content plus URI as identifier)\n * @param manifest - manifest.json of the app\n * @param {FileData[]} fragments - list of fragment files and their content\n * @param {ExtensionLogger} logger - Logger class for logging messages\n * @param {string} appId - application ID\n *\n * @returns the app specific JSON schema\n */\nexport function generateAnalyticalListPageInterfaceV2(\n    genericSchema: object,\n    entityType: string,\n    annotations: FileData[],\n    manifest: object,\n    fragments?: FileData[],\n    logger?: ExtensionLogger\n): object {\n    const serviceAVT = parseAndMergeAndConvert(annotations, logger);\n    const generateParameters: GenerateAppSchemaParameters = {\n        templateType: TemplateType.AnalyticalListPageV2,\n        fioriElementsVersion: FioriElementsVersion.v2,\n        manifest,\n        fragments,\n        serviceAVT,\n        logger\n    };\n    return generateAnalyticalListReportSchemaV2(generateParameters, genericSchema, entityType);\n}\n", "import i18next from 'i18next';\nimport _unset from 'lodash.unset';\nimport Ajv from 'ajv';\nimport type {\n    UI5Version,\n    ExportParametersV2,\n    ExportAnalyticalListPageV2Parameters,\n    ExportListReportV2Parameters,\n    ExportObjectPageV2Parameters,\n    ExportOverviewPageV2Parameters\n} from '../../..';\nimport type { ExportResults, FileData, FioriElementsVersion } from '@sap/ux-specification-types';\nimport {\n    v2,\n    PageType,\n    SchemaType,\n    SAPUI5_FRAGMENT_CLASS,\n    MANIFESTPATH,\n    ManifestSection,\n    LogSeverity\n} from '@sap/ux-specification-types';\nimport type { ObjectPage } from './pages';\nimport { getPageLayoutInformation, getReflectMetadata } from '../../common';\nimport { ApplicationV2, AppSettings } from '../application';\nimport { ensureManifestSectionByPathV2, transformPageToNewManifestV2 } from './manifest';\nimport { findListReportPageV2, findAnalyticalListPage, findObjectPageV2 } from '../import';\nimport { MetadataInstanceFactoryV2 as Factory } from './factory';\nimport { transferManifestEntriesAndFlexChange, transferManifestEntriesOVP } from './export';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport type { TransferParameterTypeV2 } from '../types';\nimport { log } from '../../../extensionLogger';\n\n/**\n * Returns a fresh export results object with default values\n */\nconst getDefaultExportResult = (fragmentFiles?: FileData[]): ExportResults => ({\n    flexChanges: [],\n    manifest: {\n        [ManifestSection.generic]: { pages: {} }\n    },\n    fragments: fragmentFiles ? fragmentFiles : []\n});\n\n/**\n * Instantiates the export classes for a single object page section\n * @param currentSection - Export class as an object, to be updated\n * @param sectionId - Current section ID\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n */\nfunction getClassesForSingleSection(\n    currentSection: object,\n    sectionId: string,\n    factory: MetadataInstanceInterface\n): void {\n    if (currentSection && sectionId === 'custom') {\n        // Custom sections\n        for (const index in currentSection) {\n            if (currentSection[index].className === SAPUI5_FRAGMENT_CLASS) {\n                currentSection[index] = factory.createInstance(\n                    PageType.ObjectPage,\n                    'ObjectPageCustomSectionFragment',\n                    currentSection[index]\n                );\n            } else {\n                currentSection[index] = factory.createInstance(\n                    PageType.ObjectPage,\n                    'ObjectPageCustomSectionView',\n                    currentSection[index]\n                );\n            }\n        }\n    }\n}\n\n/**\n * Recursive sub-function for handling subsections\n * @param currentSection - Object page section in config\n */\nfunction getSubsectionClasses(currentSection: object, factory: MetadataInstanceInterface): void {\n    if (currentSection?.['subsections']) {\n        let subSection: object;\n\n        for (const subSectionId in currentSection['subsections']) {\n            subSection = currentSection['subsections'][subSectionId];\n            getClassesForSingleSection(subSection, subSectionId, factory);\n            getSubsectionClasses(subSection, factory);\n        }\n    }\n}\n\n/**\n * Instantiates the export classes for the object page section\n * @param objectPageConfig - the given object page configuration\n * @param objectPage - the overall object page export class where the sections shall be included\n * @param {MetadataInstanceInterface} factory - factory for creating metadata instances\n */\nfunction getExportClassesForSections(\n    objectPageConfig: v2.ObjectPageConfigV2,\n    objectPage: ObjectPage,\n    factory: MetadataInstanceInterface\n): void {\n    // Main function\n    let section: object;\n\n    for (const sectionId in objectPageConfig.sections) {\n        section = objectPage.sections[sectionId];\n        getClassesForSingleSection(section, sectionId, factory);\n        getSubsectionClasses(section, factory);\n    }\n}\n\n/**\n * Run through the given ListReport config and return respective manifest entry and flex changes\n * @param {ExportListReportV2Parameters} exportParameters - all API parameters needed for the export\n * @param ui5Version - SAP UI5 version\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nfunction exportListReportPage(exportParameters: ExportListReportV2Parameters, ui5Version: UI5Version): ExportResults {\n    const listReportConfig = exportParameters.page.config as v2.ListReportConfigV2;\n    const entitySet = exportParameters.page.entitySet;\n    const exportResults: ExportResults = getDefaultExportResult(exportParameters.fragments);\n    const factory = new Factory();\n    const listReport = factory.createPageInstance(PageType.ListReport, listReportConfig);\n    const pageLayoutInformation = getPageLayoutInformation(listReport);\n    const baseId = `${exportParameters.appId}::${pageLayoutInformation.id}::${entitySet}--`;\n    const pageKeys: string[] = [];\n    const v2Page = findListReportPageV2(exportParameters.manifest[ManifestSection.generic].pages, pageKeys);\n    if (!v2Page) {\n        log(exportParameters.logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOLR'),\n            location: {\n                path: MANIFESTPATH,\n                range: [ManifestSection.generic]\n            }\n        });\n        return;\n    }\n    if (!v2Page.component.settings) {\n        v2Page.component.settings = {};\n    }\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n\n    if (listReportConfig && Object.keys(listReportConfig).length !== 0) {\n        const transferParameters: TransferParameterTypeV2 = {\n            v2Page,\n            exportResults,\n            appId: exportParameters.appId,\n            baseId,\n            appSchema: exportParameters.jsonSchema,\n            ui5Version,\n            factory,\n            pageKeys,\n            pageType: PageType.ListReport,\n            logger: exportParameters.logger\n        };\n\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            listReport,\n            [],\n            [],\n            exportParameters.jsonSchema //starting point for target definition\n        );\n    }\n\n    return exportResults;\n}\n\n/**\n * Run through the given AnalyticalListPage config and return respective manifest entry and flex changes\n * @param {ExportAnalyticalListPageV2Parameters} exportParameters - all API parameters needed for the export\n * @param ui5Version - SAP UI5 version\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nfunction exportAnalyticalListPage(\n    exportParameters: ExportAnalyticalListPageV2Parameters,\n    ui5Version: UI5Version\n): ExportResults {\n    const analyticalListPageConfig = exportParameters.page.config;\n    const entitySet = exportParameters.page.entitySet;\n    const exportResults: ExportResults = getDefaultExportResult(exportParameters.fragments);\n    exportResults.flexChanges = [];\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n    const factory = new Factory();\n    //Instantiate Page\n    const analyticalListPage = factory.createPageInstance(PageType.AnalyticalListPage, analyticalListPageConfig);\n\n    //Instantiate base ID\n    const pageLayoutInformation = getPageLayoutInformation(analyticalListPage);\n    const baseId = `${exportParameters.appId}::${pageLayoutInformation.id}::${entitySet}--`;\n    const pageKeys: string[] = [];\n\n    const v2Page = findAnalyticalListPage(\n        exportParameters.manifest[ManifestSection.generic].pages,\n        pageKeys,\n        exportParameters.logger\n    );\n    if (!v2Page) {\n        return;\n    }\n    if (!v2Page.component.settings) {\n        v2Page.component.settings = {};\n    }\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n\n    if (analyticalListPageConfig && Object.keys(analyticalListPageConfig).length !== 0) {\n        const transferParameters: TransferParameterTypeV2 = {\n            v2Page,\n            exportResults,\n            appId: exportParameters.appId,\n            baseId,\n            appSchema: exportParameters.jsonSchema,\n            ui5Version,\n            factory,\n            pageKeys,\n            pageType: PageType.AnalyticalListPage,\n            logger: exportParameters.logger\n        };\n\n        transferManifestEntriesAndFlexChange(\n            transferParameters,\n            analyticalListPage,\n            [],\n            [],\n            exportParameters.jsonSchema //starting point for target definition\n        );\n    }\n\n    return exportResults;\n}\n\n/**\n * Run through the given ObjectPage config and return respective manifest entry and flex changes\n * @param {ExportObjectPageV2Parameters} exportParameters - all API parameters needed for the export\n * @param ui5Version - SAP UI5 version\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nfunction exportObjectPage(exportParameters: ExportObjectPageV2Parameters, ui5Version: UI5Version): ExportResults {\n    const objectPageConfig = exportParameters.page.config as v2.ObjectPageConfigV2;\n    const entitySet = exportParameters.page.entitySet;\n    const exportResults: ExportResults = getDefaultExportResult(exportParameters.fragments);\n    const factory = new Factory();\n    const objectPage = factory.createPageInstance(PageType.ObjectPage, objectPageConfig);\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n    if (objectPageConfig) {\n        const pageLayoutInformation = getPageLayoutInformation(objectPage);\n        const baseId = `${exportParameters.appId}::${pageLayoutInformation.id}::${entitySet}--`;\n\n        const pageKeys: string[] = [];\n        const v2Page: v2.SapUiAppPageV2 = findObjectPageV2(\n            exportParameters.manifest[ManifestSection.generic].pages,\n            entitySet,\n            pageKeys\n        );\n        if (!v2Page) {\n            return exportResults;\n        }\n        if (objectPageConfig.sections) {\n            getExportClassesForSections(objectPageConfig, objectPage, factory);\n        }\n        if (Object.keys(objectPageConfig).length !== 0) {\n            const transferParameters: TransferParameterTypeV2 = {\n                v2Page,\n                exportResults,\n                appId: exportParameters.appId,\n                baseId,\n                appSchema: exportParameters.jsonSchema,\n                ui5Version,\n                factory,\n                pageKeys,\n                pageType: PageType.ObjectPage,\n                logger: exportParameters.logger\n            };\n\n            transferManifestEntriesAndFlexChange(\n                transferParameters,\n                objectPage,\n                [],\n                [],\n                exportParameters.jsonSchema //starting point for target definition\n            );\n        }\n    }\n    return exportResults;\n}\n/**\n * Run through the given ObjectPage config and return respective manifest entry and flex changes\n * @param {ExportOverviewPageV2Parameters} exportParameters - all API parameters needed for the export\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nconst exportOverviewPage = (exportParameters: ExportOverviewPageV2Parameters): ExportResults => {\n    const exportResults: ExportResults = getDefaultExportResult();\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n    const factory = new Factory();\n    const overviewPage = factory.createPageInstance(PageType.OverviewPage, exportParameters.page.config);\n\n    const ajv = new Ajv({ allErrors: true });\n    const validate = ajv.compile(exportParameters.jsonSchema);\n\n    if (!validate(overviewPage)) {\n        for (const err of validate.errors) {\n            const additionalProperty = err.params['additionalProperty'];\n            if (\n                err.keyword === 'additionalProperties' &&\n                !Object.values(v2.CardSettingsType).includes(err.params['additionalProperty']) &&\n                additionalProperty !== 'settings'\n            ) {\n                _unset(overviewPage, `${err.dataPath.slice(1)}.${additionalProperty}`);\n            }\n        }\n    }\n    if (exportParameters.page.config && Object.keys(exportParameters.page.config).length !== 0) {\n        transferManifestEntriesOVP(\n            overviewPage,\n            exportResults,\n            exportParameters.jsonSchema,\n            exportParameters.jsonSchema,\n            factory,\n            []\n        );\n    }\n\n    return exportResults;\n};\n\n/**\n * Exports a Fiori Element V2 application.\n * It converts the entries of the input application (config file) to corresponding manifest settings and flex changes\n * @param application - content of the config file of an application\n * @param manifest - app descriptor (manifest.json)\n * @param jsonSchema - application specific schema\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nconst exportApplicationV2 = (application: ApplicationV2, manifest: object, jsonSchema: object): ExportResults => {\n    const exportResults: ExportResults = getDefaultExportResult();\n    exportResults.manifest = JSON.parse(JSON.stringify(manifest));\n\n    //transfer application settings\n    const applicationV2 = Object.assign(new ApplicationV2(), application);\n    applicationV2.settings = Object.assign(new AppSettings(), application['settings']);\n    for (const key in jsonSchema['definitions']['AppSettings']['properties']) {\n        const syncRule = getReflectMetadata(applicationV2.settings, key);\n        if (syncRule && syncRule.manifest) {\n            const path = syncRule.manifest.path();\n            const manifestSection = ensureManifestSectionByPathV2(exportResults.manifest, path);\n            if (application['settings'] && application['settings'][key] !== undefined) {\n                manifestSection[key] = application['settings'][key];\n            } else {\n                delete manifestSection[key];\n            }\n        }\n    }\n    // transfer pages and routings\n    const manifestPages = exportResults.manifest[ManifestSection.generic]?.pages;\n    if (manifestPages && application['pages']) {\n        transformPageToNewManifestV2(application.home, application['pages'], Object.values(manifestPages)[0] as object);\n    }\n    return exportResults;\n};\n\n/**\n * Exports a Fiori Element V2 page.\n * It converts the entries of the input page (config file) to corresponding manifest settings and flex changes\n * @param exportParametersV2 - list of parameters for the export; the list varies for the different scgema types\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nexport function exportPageV2(\n    exportParametersV2: ExportParametersV2[FioriElementsVersion.v2],\n    ui5Version: UI5Version\n): ExportResults | undefined {\n    if (exportParametersV2[SchemaType.ListReport]) {\n        return exportListReportPage(exportParametersV2[SchemaType.ListReport], ui5Version);\n    } else if (exportParametersV2[SchemaType.ObjectPage]) {\n        return exportObjectPage(exportParametersV2[SchemaType.ObjectPage], ui5Version);\n    } else if (exportParametersV2[SchemaType.OverviewPage]) {\n        return exportOverviewPage(exportParametersV2[SchemaType.OverviewPage]);\n    } else if (exportParametersV2[SchemaType.Application]) {\n        const { application, manifest, jsonSchema } = exportParametersV2[SchemaType.Application];\n        return exportApplicationV2(application, manifest, jsonSchema);\n    } else if (exportParametersV2[SchemaType.AnalyticalListPage]) {\n        return exportAnalyticalListPage(exportParametersV2[SchemaType.AnalyticalListPage], ui5Version);\n    }\n}\n", "import type { TransferParameterTypeV4 } from './types';\nimport { generateCustomExtension } from '../../../api';\nimport type { GenerateCustomExtensionParams, ExtensionLogger } from '@sap/ux-specification-types';\nimport { CustomExtensionType, PropertyName, LogSeverity } from '@sap/ux-specification-types';\nimport type * as fpmWriter from '@sap-ux/fe-fpm-writer';\nimport { UIAnnotationTerms } from '@sap-ux/vocabularies-types/vocabularies/UI';\nimport i18next from 'i18next';\nimport { log } from '../../../extensionLogger';\nimport { extractLastIdPart } from './utils';\n\n/**\n * Function creates a new custom column with aid of the FPM writer\n * @param propertyDefinition - Definition of the given property in JSON schema\n * @param breadcrumbs - array of sequence of properties that we are currently processing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in the configuration\n * @returns {boolean} - true if a new column was created\n */\nexport function createNewCustomColumn(\n    propertyKey: string,\n    transferParameters: TransferParameterTypeV4,\n    configObject: { [key: string]: any },\n    logger: ExtensionLogger,\n    breadcrumbs: string[]\n): boolean {\n    if (!configObject) {\n        return false;\n    }\n    if (!transferParameters.appRootPath) {\n        log(logger, {\n            severity: LogSeverity.Error,\n            message: i18next.t('NOBASEPATH', { appId: transferParameters.appId })\n        });\n        return false;\n    }\n    if (configObject.template && configObject.template.indexOf(propertyKey) === -1) {\n        //Existing fragment which does not fit to FPM writer syntax\n        return false;\n    }\n    const sectionsIndex = breadcrumbs.lastIndexOf(PropertyName.sections);\n    const sectionId = sectionsIndex > -1 ? extractLastIdPart(breadcrumbs[sectionsIndex + 1]) : undefined;\n    const entityInManifest = sectionId ? sectionId.replace(/::/g, '/') : `@${UIAnnotationTerms.LineItem}`;\n    const handler = configObject.eventHandler === true ? true : undefined;\n\n    const data: fpmWriter.CustomTableColumn = {\n        target: transferParameters.pageNameArray[0],\n        targetEntity: entityInManifest,\n        position: configObject.position,\n        name: propertyKey,\n        ...(configObject.header && { header: configObject.header }),\n        ...(configObject.width && { width: configObject.width }),\n        ...(configObject.availability && { availability: configObject.availability }),\n        ...(handler && { eventHandler: handler })\n    };\n    const columnApiParams: GenerateCustomExtensionParams = {\n        customExtension: CustomExtensionType.CustomColumn,\n        basePath: transferParameters.appRootPath,\n        data\n    };\n    generateCustomExtension(columnApiParams);\n    return true;\n}\n", "import type { v4 } from '@sap/ux-specification-types';\n\n/**\n * Method updates passed dependency lib in passed manifest.\n * @param {SapUi5V4} manifest - Manifest \"sap.ui5\" object.\n * @param {string} name - Library name to check.\n * @param {boolean} [add=true] - Add or remove library.\n */\nexport function updateDependencyLib(manifest: v4.SapUi5V4, name: string, add = true): void {\n    if (add) {\n        if (!manifest.dependencies) {\n            manifest.dependencies = {};\n        }\n        if (!manifest.dependencies.libs) {\n            manifest.dependencies.libs = {};\n        }\n        if (manifest.dependencies.libs[name] === undefined) {\n            manifest.dependencies.libs[name] = {};\n        }\n    } else if (manifest.dependencies && manifest.dependencies.libs && manifest.dependencies.libs[name] !== undefined) {\n        delete manifest.dependencies.libs[name];\n    }\n}\n\n/**\n * Looks for <...> pattern in the input string; if found, extracts this last part of the string\n * @param longId - schema ID in its long format\n * @returns the converted ID\n */\nexport function extractLastIdPart(longId: string): string {\n    let lastIdPart = longId;\n    if (longId.indexOf('<') > -1) {\n        lastIdPart = longId.substring(longId.indexOf('<') + 1, longId.length - 1);\n        const navPart = longId.substring(0, longId.lastIndexOf('::')).replace(/::/g, '/');\n        if (navPart) {\n            lastIdPart = `${navPart}/${lastIdPart}`;\n        }\n    }\n    return lastIdPart;\n}\n", "import type { SapUi5RoutingRoute, SapUi5RoutingTarget, SapUi5RoutingTargetSettings } from '@sap/ux-specification-types';\nimport { v4, ManifestSection, PageTypeV4 } from '@sap/ux-specification-types';\n\nexport enum Constants {\n    OptionalQuery = ':?query:',\n    Component = 'sap/fe/AppComponent',\n    Namespace = 'sap.fe.templates'\n}\n\n/**\n * Transform Pages(from app.json) to UI5 routing configuration(manifest.json)\n * @param routing UI5 routing configuration\n */\nconst createRoute = (pattern: string, name: string, target: string): SapUi5RoutingRoute => {\n    return {\n        pattern,\n        name,\n        target\n    };\n};\n\n/**\n * Method returns SapUi5RoutingTargetBase.options object.\n * @param {string} [entitySet] - Entity set.\n * @param {string} [variantManagement] - Variant management string.\n * @return {{settings: SapUi5RoutingTargetSettings}} Returns object for SapUi5RoutingTargetBase.options.\n */\nconst createTargetOption = (\n    entitySet?: string,\n    variantManagement?: string\n): {\n    settings: SapUi5RoutingTargetSettings;\n} => {\n    return {\n        settings: {\n            ...(entitySet && { entitySet }),\n            ...(variantManagement && { variantManagement }),\n            navigation: {}\n        }\n    };\n};\n\nfunction initializeRouting(manifestRouting: v4.SapUi5RoutingV4): v4.SapUi5RoutingV4 {\n    let routing: v4.SapUi5RoutingV4 = manifestRouting;\n    if (!routing) {\n        routing = {\n            routes: [],\n            targets: {}\n        };\n    } else {\n        if (!routing.routes) {\n            routing.routes = [];\n        }\n        if (!routing.targets) {\n            routing.targets = {};\n        }\n    }\n    return routing;\n}\n\nfunction setTargetOptions(target: v4.RoutingTargetOptions, keyInManifest: string, navigationEntry: object) {\n    if (!target.options.settings.navigation) {\n        target.options.settings.navigation = {};\n    }\n    target.options.settings.navigation[keyInManifest] = {\n        detail: navigationEntry\n    };\n}\n\n/**\n * Calculates the query pattern for new target entries of the manifest\n * @param parts - array of strings, each entry represents one navigation\n * @param pages - list of all pages\n * @returns the query pattern for the new target\n */\nfunction calculateQueryPattern(parts: string[], pages: v4.Pages): string {\n    let pattern = '';\n    parts.forEach((part, index) => {\n        const targetPage = pages[part];\n        let key = '';\n        if (targetPage?.pageType !== PageTypeV4.ListReport) {\n            // Keys should be like - 'key', 'key2', 'key3'\n            key = `({key${index ? index + 1 : ''}})`;\n        }\n        const partToInsert = targetPage?.entitySet ? targetPage.entitySet : part;\n        pattern += `${pattern ? '/' : ''}${partToInsert}${key}`;\n    });\n    return `${pattern}${Constants.OptionalQuery}`;\n}\n\n/**\n * Recursive function to determine all parts to combine the query pattern, by traversing the routing navigation links\n * @param parts - list of query parts, to be enhanced per call\n * @param navKey - the key of the given routing navigation entry\n * @param pages - list of all pages\n * @param pageId - key of the current page\n */\nfunction getAllNavigationParts(parts: string[], navKey: string, pages: v4.Pages, pageId: string): void {\n    parts.push(navKey);\n    let referringPage;\n    for (const key in pages) {\n        if (typeof pages[key].navigation === 'object') {\n            const pageKey = Object.keys(pages[key].navigation).find(\n                (index) => pages[key].navigation[index]['route'] === pageId\n            );\n            if (pageKey) {\n                navKey = pageKey;\n                referringPage = pages[key];\n            }\n        }\n        if (referringPage) {\n            getAllNavigationParts(parts, navKey, pages, key);\n            break;\n        }\n    }\n}\n\n/**\n * Updates the route navigation entries of a page\n * @param page - the current page\n * @param pages - all pages in manifest\n * @param target - the given routing target\n * @param routing - the current routing\n * @param pageId - key of the page in manifest\n */\nfunction handlePageNavigation(\n    page: v4.PageV4,\n    pages: v4.Pages,\n    target: v4.RoutingTargetOptions,\n    routing: v4.SapUi5RoutingV4,\n    pageId: string\n) {\n    if (page.navigation) {\n        for (const keyInManifest in page.navigation) {\n            const navigationEntry = page.navigation[keyInManifest];\n            setTargetOptions(target, keyInManifest, navigationEntry as object);\n            if (navigationEntry?.['route']) {\n                if (!routing.routes.some((routingRoute) => routingRoute.name === navigationEntry['route'])) {\n                    const parts: string[] = [];\n                    getAllNavigationParts(parts, keyInManifest, pages, pageId);\n                    const partsInRightOrder = [...parts].reverse();\n                    const pattern = calculateQueryPattern(partsInRightOrder, pages);\n                    // Make sure there no route duplication\n                    routing.routes.push(createRoute(pattern, navigationEntry['route'], navigationEntry['route']));\n                }\n            }\n        }\n    }\n}\n\nfunction removeDeletedPages(routing: v4.SapUi5RoutingV4, pages: v4.Pages) {\n    for (const id in routing.targets) {\n        if (!pages || !pages[id]) {\n            // Remove target\n            delete routing.targets[id];\n            // Remove routes\n            const index = routing.routes.findIndex((route) => route.name === id);\n            if (index !== -1) {\n                routing.routes.splice(index, 1);\n            }\n        }\n    }\n}\n\nfunction transferEntitySet(page: v4.Page, target: v4.RoutingTargetOptions) {\n    if (page.entitySet) {\n        if (!target.options) {\n            target.options = createTargetOption(page.entitySet, page.variantManagement);\n        }\n        target.options.settings.entitySet = page.entitySet;\n    } else {\n        delete target.options?.settings?.entitySet;\n    }\n}\n\n/**\n * Method detects removed custom sections and deletes removed custom sections from manifest.\n * @param page current page\n * @param target routing target to be filled\n */\nfunction deleteRemovedCustomSections(page: v4.Page, target: v4.RoutingTargetOptions): void {\n    // Delete removed custom sections\n    const manifestSections = target?.options?.settings?.content?.body?.sections;\n    if (page.pageType === PageTypeV4.ObjectPage && manifestSections && typeof manifestSections === 'object') {\n        const objectPage = page.config as v4.ObjectPageConfigV4;\n        const customSections = Array.isArray(objectPage?.sections?.custom) ? objectPage.sections.custom : [];\n        const latestIds = customSections.map((section: v4.ObjectPageCustomSectionFragment) => section.id);\n        const existingIds = Object.keys(manifestSections);\n        for (const id of existingIds) {\n            if (!latestIds.includes(id)) {\n                // Delete removed custom section\n                delete manifestSections[id];\n            }\n        }\n    }\n}\n\nfunction updateRoute(routing: v4.SapUi5RoutingV4, id: string, page: v4.Page) {\n    const route = routing.routes.find((routingRoute) => routingRoute.name === id);\n    if (route) {\n        if (page.defaultLayoutType) {\n            route.layout = page.defaultLayoutType;\n        } else {\n            delete route.layout;\n        }\n    }\n}\n\n/**\n * Fills target with page information\n * @param page current page\n * @param target routing target to be filled\n * @param id page id\n * @param pages all pages of app.json\n * @returns filled target\n */\nfunction fillTarget(\n    page: v4.Page,\n    target: v4.RoutingTargetOptions,\n    id: string,\n    pages: v4.Pages\n): v4.RoutingTargetOptions {\n    if (page.pageType && ![PageTypeV4.CustomPage, PageTypeV4.FPMCustomPage].includes(page.pageType)) {\n        target = {\n            ...target,\n            ...({\n                type: 'Component',\n                id: target?.['id'] || id,\n                name: `${Constants.Namespace}.${pages[id].pageType}`\n            } as SapUi5RoutingTarget)\n        };\n    } else if (\n        page.view &&\n        !!target &&\n        ((target as v4.SapUi5RoutingTargetCustomPageV4).viewName ||\n            (target as v4.SapUi5RoutingTargetCustomPageV4).viewId)\n    ) {\n        // Existing old syntax for Custom Page\n        target = {\n            ...target,\n            ...({\n                viewId: page.view.id,\n                viewName: page.view.name,\n                path: page.view.path,\n                viewType: page.view.viewType\n            } as v4.SapUi5RoutingTargetCustomPageV4)\n        };\n    } else if (page.view) {\n        target = {\n            ...target,\n            ...({\n                type: 'Component',\n                id: page.view.id,\n                name: `${v4.FE_TEMPLATE_V4_CUSTOM_PAGE}`,\n                viewType: page.view.viewType,\n                options: {\n                    settings: {\n                        viewName: page.view.name\n                    }\n                }\n            } as v4.SapUi5RoutingTargetCustomPageV4New)\n        };\n    }\n    return target;\n}\n\n/**\n * Transform Pages(from app.json) to UI5 routing configuration (manifest.json)\n * @param routing UI5 routing configuration\n */\nexport function transformRoutingV4(homePage: string, pages: v4.Pages, manifest: object): v4.SapUi5RoutingV4 {\n    const routing = initializeRouting(manifest[ManifestSection.ui5].routing as v4.SapUi5RoutingV4);\n\n    // add default route\n    if (homePage && !routing.routes.some((route) => route.name === homePage)) {\n        // Make sure there no route duplication\n        routing.routes.push(createRoute(Constants.OptionalQuery, homePage, homePage));\n    }\n    for (const id in pages) {\n        let target: v4.RoutingTargetOptions;\n        const page = pages[id];\n        if (routing.targets[id]) {\n            target = routing.targets[id];\n        }\n        target = fillTarget(page, target, id, pages);\n        transferEntitySet(page, target);\n        deleteRemovedCustomSections(page, target);\n        if (target && !page.controlAggregation) {\n            delete target.contextPattern;\n            delete target.controlAggregation;\n        }\n        if (target?.options?.settings?.navigation) {\n            // We handle page 'navigation' from scratch - clear 'navigation' before handling\n            target.options.settings.navigation = {};\n        }\n        // Handle page 'navigation'\n        handlePageNavigation(page, pages, target, routing, id);\n        // Update associated route with layout information\n        updateRoute(routing, id, page);\n\n        routing.targets[id] = target;\n    }\n    // Remove deleted pages\n    removeDeletedPages(routing, pages);\n    return routing;\n}\n", "import type { SapUi5RootView } from '@sap/ux-specification-types';\nimport {\n    v4,\n    FIORI_FCL_ROOT_ID,\n    FIORI_FCL_ROOT_VIEW_NAME,\n    ViewTypes,\n    FlexibleColumnLayoutAggregations\n} from '@sap/ux-specification-types';\nimport type { ApplicationV4 } from '../application';\nimport { Constants as V4Constants } from './manifest';\nimport { updateDependencyLib } from './utils';\n\n// Aggregations mapping for target levels\n// 0 - BeginColumnPages, 1 - MidColumnPages, 2 - EndColumnPages\nconst fclAggregations = [\n    FlexibleColumnLayoutAggregations.BeginColumnPages,\n    FlexibleColumnLayoutAggregations.MidColumnPages,\n    FlexibleColumnLayoutAggregations.EndColumnPages\n];\n\n/**\n * Recursive method which updates manifest routing to enable FCL support.\n * Method contains some parts like setting 'ThreeColumnsEndExpanded' to 2st->3rd page navigation - it was requested for demo purposes.\n * @param {SapUi5} manifestUI5 - SAPUI5 manifest data.\n * @param {Application} app - Project application.\n * @param {string} pageName - Page name which should be used to apply FCL.\n * @param {Array<string>} targetPages - Current array of target pages to join in.\n * For example to display two column FCL we have - ['1stLevelPage', '2ndLevelPage']\n * @param {number} level - Current navigation level.\n */\nconst applyFCLRouting = (\n    manifestUI5: v4.SapUi5V4,\n    app: ApplicationV4,\n    pageName: string,\n    targetPages: Array<string> = [],\n    level = 0\n): void => {\n    const routeOfPage = manifestUI5.routing.routes.find((route) => {\n        return route.name === pageName;\n    });\n    if (!routeOfPage) {\n        return;\n    }\n    // Update route\n    if (typeof routeOfPage.target === 'string') {\n        // 1-3 level navigation is placed like [`1st Page`, `2nd Page`, `3rd Page`]\n        // 4+ level navigation is placed as fullscreen - [`4th+n Page`]\n        routeOfPage.target = level <= 2 ? [...targetPages, routeOfPage.target] : [routeOfPage.target];\n    }\n    // Update target\n    const target = manifestUI5.routing.targets[pageName];\n    const page = app.pages?.[pageName];\n    if (!page) {\n        return;\n    }\n    if ('controlAggregation' in page) {\n        target.controlAggregation = page.controlAggregation;\n    } else if (fclAggregations[level]) {\n        target.controlAggregation = fclAggregations[level];\n    } else {\n        target.controlAggregation = FlexibleColumnLayoutAggregations.EndColumnPages;\n    }\n    const pattern = routeOfPage.pattern.replace(V4Constants.OptionalQuery, '');\n    if (pattern) {\n        target.contextPattern = pattern.startsWith('/') ? pattern : `/${pattern}`;\n    } else {\n        target.contextPattern = '';\n    }\n    // Loop further pages\n    if (page.navigation) {\n        level++;\n        for (const pageId in page.navigation) {\n            applyFCLRouting(manifestUI5, app, page.navigation[pageId]['route'], routeOfPage.target, level);\n        }\n    }\n};\n\n/**\n * Method enables FCL support by updating Manifest.\n * @param {SapUi5} manifestUI5 - SAPUI5 manifest data.\n * @param {Application} app - Project application.\n */\nconst enableFcl = (manifestUI5: v4.SapUi5V4, app: ApplicationV4): void => {\n    // Apply config with router class\n    manifestUI5.routing.config.routerClass = v4.FIORI_FCL_ROUTER_CLASS;\n    // Make changes in\n    applyFCLRouting(manifestUI5, app, app.home);\n    // Update 'rootView'\n    const rootView: SapUi5RootView = {\n        viewName: FIORI_FCL_ROOT_VIEW_NAME,\n        type: ViewTypes.XML,\n        async: true,\n        id: FIORI_FCL_ROOT_ID\n    };\n    manifestUI5.rootView = manifestUI5.rootView ? { ...manifestUI5.rootView, ...rootView } : rootView;\n    // Added in scope of #523. Starting from SAPUI5 1.83+ - we need make sure that dependency to `sap.f` library is added to manifest.\n    updateDependencyLib(manifestUI5, v4.SAPUI5_DEPENDENCY_LIB_SAP_F);\n};\n\n/**\n * Method disables FCL support by updating Manifest.\n * @param {SapUi5} manifestUI5 - SAPUI5 manifest data.\n */\nconst disableFcl = (sapui5: v4.SapUi5V4): void => {\n    if (sapui5.rootView && sapui5.rootView.viewName === FIORI_FCL_ROOT_VIEW_NAME) {\n        // FCL is disabled and rootview name is equal to FCL ROOT VIEW, then remove rootview\n        delete sapui5.rootView;\n    }\n    if (sapui5.routing) {\n        if (sapui5.routing.config && sapui5.routing.config.routerClass === v4.FIORI_FCL_ROUTER_CLASS) {\n            // Remove routing class\n            delete sapui5.routing.config.routerClass;\n        }\n        const routes = sapui5.routing.routes || [];\n        for (const route of routes) {\n            if (route.target && Array.isArray(route.target)) {\n                // In 'applyFCLRouting' we set property 'target' as Array\n                // When FCL is disabled, property 'target' should not be an array anymore - resetting back.\n                route.target = route.name;\n            }\n        }\n    }\n};\n\n/**\n * Method updates Manifest depending on is FCL ON or OFF.\n * @param {SapUi5} manifestUI5 - SAPUI5 manifest data.\n * @param {Application} app - Project application.\n */\nexport const updateFcl = (manifestUI5: v4.SapUi5V4, app: ApplicationV4): void => {\n    if (app.settings && app.settings.flexibleColumnLayout) {\n        enableFcl(manifestUI5, app);\n    } else {\n        disableFcl(manifestUI5);\n    }\n};\n", "import type { ObjectPage } from './pages';\nimport type { ObjectPageCustomSectionFragment } from './controls';\nimport { createNewCustomColumn } from './exportCustomColumn';\nimport type { NextDefinition } from '../../common';\nimport {\n    getReflectMetadata,\n    getChildId,\n    getPageLayoutInformation,\n    getManifestSectionByPathV4,\n    fillFlexChangeContent,\n    DEFINITION_LINK_PREFIX\n} from '../../common';\nimport { ApplicationV4, AppSettings, getSettingsPathForPage } from '../application';\nimport { transformRoutingV4 } from './manifest';\nimport { updateFcl } from './flexibleColumnLayout';\nimport {\n    DefinitionName,\n    FacetTitlePrefix,\n    PropertyName,\n    SchemaTag,\n    PageType,\n    PageTypeV4,\n    SchemaType,\n    ManifestSection,\n    TemplateType\n} from '@sap/ux-specification-types';\nimport type {\n    FioriElementsVersion,\n    Manifest,\n    v4,\n    SapUi5RoutingTarget,\n    SyncRule,\n    ExportAnalyticalListPageV4Parameters,\n    ExportListReportV4Parameters,\n    ExportObjectPageV4Parameters,\n    ExportParametersV4,\n    ExportHandlerFunction,\n    ExportResults,\n    UI5Version\n} from '@sap/ux-specification-types';\nimport { deleteEmptyStructure, getNextTargetDefinition } from '../../common/utils';\nimport { MetadataInstanceFactoryV4 as Factory } from './factory';\nimport type { MetadataInstanceInterface } from '../../common/decoration/factory';\nimport type { TransferParameterTypeV4 } from './types';\nimport type { Definition, DefinitionOrBoolean } from 'typescript-json-schema';\nimport { extractLastIdPart } from './utils';\n\n/**\n * Return the skeleton of a new routing target for the manifest, pre-filled with some values\n * @param name - name of the template, e.g. \"sap.suite.ui.generic.template.ObjectPage\"\n * @param entitySet - the main entity set\n * @param navigationProperty - navigation property\n */\nconst getNewRoutingTarget = (name: string, entitySet: string): SapUi5RoutingTarget => {\n    return {\n        type: 'Component',\n        id: '',\n        name: name,\n        options: {\n            settings: {\n                entitySet: entitySet,\n                navigation: {},\n                controlConfiguration: {}\n            }\n        }\n    };\n};\n\nconst defaultExportResult: ExportResults = {\n    flexChanges: [],\n    manifest: {\n        'sap.ui5': {\n            flexEnabled: true,\n            routing: {\n                targets: {}\n            }\n        },\n        'sap.app': {}\n    },\n    fragments: []\n};\n\n/**\n * Applies the sync rule for a flex change during export\n * @param syncRule - export rule from the object classes decorator\n * @param transferParameters - list of parameters passed from API\n * @param ids - list of parent & child ids\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param configObject - current (sub)object of the configuration file\n * @param key - key of the given property\n */\nfunction exportFlexChange(\n    syncRule: SyncRule,\n    transferParameters: TransferParameterTypeV4,\n    ids: string[],\n    breadcrumbs: string[],\n    configObject: { [key: string]: any },\n    key: string\n) {\n    const controlId = syncRule.flex.controlId(\n        transferParameters.baseId,\n        ids,\n        breadcrumbs,\n        syncRule.flex.controlType,\n        transferParameters.title\n    );\n    const flexChange = fillFlexChangeContent(configObject, syncRule, transferParameters.ui5Version, key, controlId);\n    transferParameters.exportResults.flexChanges.push(\n        syncRule.flex.createFlexChange(flexChange, transferParameters.exportResults.manifest)\n    );\n}\n\nfunction determineTargetAnnotationOfTable(\n    ids: string[],\n    transferParameters: TransferParameterTypeV4,\n    configObject: { [key: string]: any }\n) {\n    let targetAnnotationEncoded = '@com.sap.vocabularies.UI.v1.LineItem';\n    let targetAnnotation = '@com.sap.vocabularies.UI.v1.LineItem';\n    const annotationPath =\n        transferParameters.appSchema.definitions[DefinitionName.TableSPV]?.[SchemaTag.annotationPath];\n    if (ids.length > 1 && transferParameters.config['table'].annotationPath) {\n        const annoPath = transferParameters.appSchema.definitions[DefinitionName.ALPTable]?.[SchemaTag.annotationPath];\n        targetAnnotationEncoded = targetAnnotation = annoPath && annoPath.substr(annoPath.lastIndexOf('@'));\n    } else if (configObject.table?.annotationPath) {\n        //view definition\n        targetAnnotationEncoded = targetAnnotation = `@${configObject.table.annotationPath}`;\n    } else if (ids[0] === PropertyName.table && annotationPath) {\n        const annotationPathArray = annotationPath.split('/');\n        targetAnnotationEncoded = targetAnnotation = annotationPathArray[annotationPathArray.length - 1];\n    }\n    return { targetAnnotationEncoded, targetAnnotation };\n}\n\nfunction determineTargetAnnotationOfChart(\n    ids: string[],\n    transferParameters: TransferParameterTypeV4,\n    targetAnnotationEncoded: string,\n    targetAnnotation: string,\n    configObject: { [key: string]: any }\n) {\n    if (ids.length > 1) {\n        const annoPath = transferParameters.appSchema.definitions[DefinitionName.ALPChart]?.[SchemaTag.annotationPath];\n        targetAnnotationEncoded = targetAnnotation = annoPath && annoPath.substr(annoPath.lastIndexOf('@'));\n    } else {\n        //chart level\n        targetAnnotationEncoded = targetAnnotation = `@${configObject.chart?.annotationPath}`;\n    }\n    return { targetAnnotationEncoded, targetAnnotation };\n}\n\nfunction determineTargetAnnotationOfViews(\n    transferParameters: TransferParameterTypeV4,\n    ids: string[],\n    targetAnnotation: string,\n    targetAnnotationEncoded: string\n) {\n    const parentDefinition = (transferParameters.appSchema.definitions['MultiTableModeV4'] as Definition)?.properties[\n        ids[2]\n    ];\n    if (parentDefinition) {\n        if (ids.length === 3) {\n            //the parent definition comprises the annotation of the visualization of the (Selection)PresentationVariant.\n            targetAnnotation = targetAnnotationEncoded =\n                parentDefinition[SchemaTag.annotationPath] &&\n                parentDefinition[SchemaTag.annotationPath].substr(\n                    parentDefinition[SchemaTag.annotationPath].lastIndexOf('@')\n                );\n        } else if (ids.length > 3) {\n            //the own definition comprises the lineItem or chart annotation from the visualization\n            const ownDefinitionName = (parentDefinition as Definition).$ref?.split(DEFINITION_LINK_PREFIX)[1];\n            const ownDefinition = ownDefinitionName && transferParameters.appSchema.definitions[ownDefinitionName];\n            const annotation =\n                ownDefinition?.[SchemaTag.annotationPath] &&\n                ownDefinition[SchemaTag.annotationPath].substr(\n                    ownDefinition[SchemaTag.annotationPath].lastIndexOf('@')\n                );\n            targetAnnotation = targetAnnotationEncoded = ownDefinition['navigationProperty']\n                ? `${ownDefinition['navigationProperty']}/${annotation}`\n                : annotation;\n        }\n    }\n    return { targetAnnotation, targetAnnotationEncoded };\n}\n\nfunction determineTargetAnnotationOfSections(\n    ids: string[],\n    custom: boolean,\n    targetAnnotationEncoded: string,\n    targetAnnotation: string\n) {\n    if (ids[1] === 'custom' && ids[2] !== ids[ids.length - 1]) {\n        custom = true;\n        targetAnnotationEncoded = ids[2];\n        targetAnnotation = targetAnnotationEncoded && targetAnnotationEncoded.replace(/::/g, '/');\n    } else {\n        const sectionId = extractLastIdPart(ids[1]);\n        targetAnnotationEncoded = sectionId && sectionId.replace(/\\//g, '::');\n        targetAnnotation = targetAnnotationEncoded && targetAnnotationEncoded.replace(/::/g, '/');\n    }\n    return { custom, targetAnnotationEncoded, targetAnnotation };\n}\n\n/**\n * Determines the target annotation that is relevant for the sync rule\n * @param {string[]} ids - list of ids of parent elements\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param { [key: string]: any } configObject - the given config.json, to be exported\n * @returns { targetAnnotationEncoded, targetAnnotation, custom }\n */\nfunction determineTargetAnnotation(\n    ids: string[],\n    transferParameters: TransferParameterTypeV4,\n    configObject: { [key: string]: any }\n): { targetAnnotationEncoded: string; targetAnnotation: string; custom: boolean } {\n    let targetAnnotation,\n        targetAnnotationEncoded,\n        custom = false;\n    if (ids[0] === PropertyName.table && ids[1] !== PropertyName.views) {\n        ({ targetAnnotationEncoded, targetAnnotation } = determineTargetAnnotationOfTable(\n            ids,\n            transferParameters,\n            configObject\n        ));\n    } else if (ids[0] === PropertyName.chart && transferParameters.templateType === TemplateType.AnalyticalListPageV4) {\n        ({ targetAnnotationEncoded, targetAnnotation } = determineTargetAnnotationOfChart(\n            ids,\n            transferParameters,\n            targetAnnotationEncoded,\n            targetAnnotation,\n            configObject\n        ));\n    } else if (ids[0] === PropertyName.sections) {\n        ({ custom, targetAnnotationEncoded, targetAnnotation } = determineTargetAnnotationOfSections(\n            ids,\n            custom,\n            targetAnnotationEncoded,\n            targetAnnotation\n        ));\n    } else if (ids[1] === PropertyName.sections) {\n        //header sections\n        if (transferParameters.title && transferParameters.title.indexOf(FacetTitlePrefix) > -1) {\n            targetAnnotation = targetAnnotationEncoded = transferParameters.title.split(FacetTitlePrefix)[1];\n        } else if (ids[2]) {\n            targetAnnotation = targetAnnotationEncoded = ids[2].split('@')[1];\n        } else if (targetAnnotationEncoded) {\n            targetAnnotation = targetAnnotationEncoded = targetAnnotationEncoded.replace(/::/g, '/');\n        }\n    } else if (ids[1] === PropertyName.views) {\n        ({ targetAnnotation, targetAnnotationEncoded } = determineTargetAnnotationOfViews(\n            transferParameters,\n            ids,\n            targetAnnotation,\n            targetAnnotationEncoded\n        ));\n    }\n    return { targetAnnotationEncoded, targetAnnotation, custom };\n}\n\n/**\n * Calculates an additional key for the sync rule from the given ID's\n * @param {string[]} ids - list of ids of parent elements\n * @returns the key for the sync rule\n */\nfunction determineKeyForSyncRule(ids: string[]): string | undefined {\n    let idIndex = 0;\n    for (let index = ids.length - 1; index > -1; index--) {\n        const element = ids[index];\n        if (element === 'columns' || element === PropertyName.actions || element === 'views') {\n            idIndex = index + 1;\n            break;\n        }\n    }\n    return idIndex > 0 ? ids[idIndex].replace(/\\//gi, '??') : undefined;\n}\n\ntype ExportToManifestParams = {\n    exportHandler: boolean | ExportHandlerFunction;\n    manifestSection: object;\n    configObject: { [key: string]: any };\n    configPropertyKey: string;\n    manifestKey: string;\n    syncRuleKey: string;\n};\n\n/**\n * Creates a new object in manifest\n * @param {ExportToManifestParams} params - list of parameters\n */\nfunction createNewObjectInManifest(params: ExportToManifestParams) {\n    if (params.exportHandler && typeof params.exportHandler === 'function') {\n        params.exportHandler(\n            params.manifestSection,\n            params.configObject,\n            params.configPropertyKey,\n            params.manifestKey,\n            params.syncRuleKey\n        );\n    } else if (!params.manifestSection[params.manifestKey]) {\n        params.manifestSection[params.manifestKey] = {};\n    }\n}\n\n/**\n * Transfers a property value from config to manifest\n * @param {ExportToManifestParams} params - list of parameters\n * @param propertyDefinition - schema definition of a particular property\n * @param nextDefinition - schema definition referred by $ref\n */\nfunction transferPropertyToManifest(\n    params: ExportToManifestParams,\n    propertyDefinition: object,\n    nextDefinition: object\n) {\n    if (\n        !(\n            propertyDefinition['type'] !== 'array' &&\n            nextDefinition?.['targetDefinition']?.type === 'object' &&\n            nextDefinition?.['targetDefinition']?.properties\n        )\n    ) {\n        if (params.exportHandler !== false) {\n            if (params.exportHandler && typeof params.exportHandler === 'function') {\n                params.exportHandler(\n                    params.manifestSection,\n                    params.configObject,\n                    params.configPropertyKey,\n                    params.manifestKey,\n                    params.syncRuleKey\n                );\n            } else if (\n                Array.isArray(params.configObject[params.configPropertyKey]) &&\n                !params.configObject[params.configPropertyKey].length\n            ) {\n                delete params.manifestSection[params.manifestKey];\n            } else {\n                params.manifestSection[params.manifestKey] = params.configObject[params.configPropertyKey];\n            }\n        }\n    } else if (propertyDefinition['type'] !== 'array' && params.manifestSection[params.manifestKey] === undefined) {\n        createNewObjectInManifest(params);\n    }\n}\n\n/**\n * Transfers a change in config.json to manifest\n * @param ids - list of parent & child ids\n * @param {SyncRule} syncRule - syncRule (metadata)\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param {string} configPropertyKey - key of property in the config\n * @param { [key: string]: any } configObject - the given config.json, to be exported\n * @param propertyDefinition - schema definition of a particular property\n * @param nextDefinition - schema definition referred by $ref\n */\nfunction exportManifestChange(\n    ids: string[],\n    syncRule: SyncRule,\n    transferParameters: TransferParameterTypeV4,\n    configPropertyKey: string,\n    configObject: { [key: string]: any },\n    propertyDefinition: object,\n    nextDefinition: object\n) {\n    //eliminate subsections' hierarchy\n    let index = ids.indexOf('subsections');\n    while (index > -1) {\n        ids.splice(index - 1, 2);\n        index = ids.indexOf('subsections');\n    }\n    const { targetAnnotationEncoded, targetAnnotation, custom } = determineTargetAnnotation(\n        ids,\n        transferParameters,\n        configObject\n    );\n\n    const syncRuleKey = determineKeyForSyncRule(ids);\n    const path = syncRule.manifest.path(\n        transferParameters.pageNameArray,\n        transferParameters.exportResults.manifest,\n        targetAnnotationEncoded,\n        syncRuleKey,\n        targetAnnotation,\n        configObject\n    );\n    const manifestSection = getManifestSectionByPathV4(\n        transferParameters.exportResults.manifest,\n        path,\n        targetAnnotation,\n        custom ? undefined : targetAnnotationEncoded\n    );\n    if (manifestSection) {\n        const manifestKey = syncRule.manifest.key || configPropertyKey;\n        if (configObject[configPropertyKey] !== undefined) {\n            // In case of arrays we take over complete array\n            const exportParams: ExportToManifestParams = {\n                exportHandler: syncRule.manifest.export,\n                manifestSection,\n                configObject,\n                configPropertyKey,\n                manifestKey,\n                syncRuleKey\n            };\n            transferPropertyToManifest(exportParams, propertyDefinition, nextDefinition);\n        } else if (syncRule.manifest.delete) {\n            const deleteHandler = syncRule.manifest.delete;\n            if (typeof deleteHandler === 'function') {\n                deleteHandler(\n                    manifestSection,\n                    configObject,\n                    configPropertyKey,\n                    manifestKey,\n                    syncRuleKey,\n                    transferParameters.config\n                );\n            }\n        } else if (manifestSection[manifestKey] !== undefined) {\n            delete manifestSection[manifestKey];\n        }\n    }\n    deleteEmptyStructure(transferParameters.exportResults.manifest, path, targetAnnotation, targetAnnotationEncoded);\n}\n\n/**\n * Evaluates an export rule for a property or object, transfers to flex change or manifest setting\n * @param transferParameters - list of parameters passed from API\n * @param breadcrumbs - list of breadcrumbs, i.e. ID parts for building the stable ID\n * @param key - key of the given property\n * @param configObject - current (sub)object of the configuration file\n * @param ids - list of parent & child ids\n * @param title - title from the app schema (comprising for instance the facet ID)\n * @param propertyDefinition - schema definition of a particular property\n * @param nextDefinition - schema definition referred by $ref\n */\nfunction evaluateExportRule(\n    transferParameters: TransferParameterTypeV4,\n    breadcrumbs: string[],\n    key: string,\n    configObject: { [key: string]: any },\n    ids: string[],\n    propertyDefinition: object,\n    nextDefinition: NextDefinition\n): void {\n    const syncRule = getReflectMetadata(configObject, key);\n    if (syncRule) {\n        if (syncRule.flex) {\n            exportFlexChange(syncRule, transferParameters, ids, breadcrumbs, configObject, key);\n        } else if (syncRule.manifest) {\n            exportManifestChange(\n                ids,\n                syncRule,\n                transferParameters,\n                key,\n                configObject,\n                propertyDefinition,\n                nextDefinition\n            );\n        }\n    }\n}\n\n/**\n * Processes an (object-like) sub-object of the app schema and transfer all connected config entries to manifest\n * @param {TransferEntryParameters} parameters - list of parameters\n * @param {NextDefinition} nextDefinition - the next definition in app schema to be processed\n * @param currentConfigObject - current config object\n * @param ids - list of parent & child ID's\n * @param localIdParts - list of ID parts for building the stable ID\n */\nfunction transferSubObject(\n    parameters: TransferEntryParameters,\n    nextDefinition: NextDefinition,\n    currentConfigObject: any,\n    ids: string[],\n    localIdParts: string[]\n) {\n    let objects = [],\n        isArray = false;\n    if (parameters.propertyDefinition.$ref && nextDefinition) {\n        objects.push(nextDefinition.configObject);\n    } else if (parameters.propertyDefinition['anyOf']) {\n        objects.push(currentConfigObject);\n    } else if (parameters.propertyDefinition.type === 'array') {\n        objects = currentConfigObject;\n        isArray = true;\n    } else {\n        objects.push(currentConfigObject);\n    }\n    parameters.index = 0;\n    for (const innerObject of objects) {\n        const additionalIds = [];\n        if (parameters.breadcrumbs[0] === PropertyName.sections && parameters.key === 'custom' && isArray) {\n            // We need add custom section 'id' into breadcrumbs to retrieve correct path to manifest\n            additionalIds.push(innerObject['id']);\n        }\n        parameters.transferParameters.title = nextDefinition.title;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        transferManifestEntriesAndFlexChange(\n            parameters.transferParameters,\n            innerObject,\n            [...ids, ...additionalIds],\n            localIdParts,\n            [...parameters.breadcrumbs, parameters.key],\n            nextDefinition.targetDefinition\n        );\n        parameters.index++;\n    }\n}\n\n/**\n * Creates an ALP 'views' entry in the resulting manifest if not yet existing yet.\n * Adds the secondary = table view if missing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in config.json\n * @returns\n * - a boolean indicating that the views entry got created.\n * - a boolean indicating if the processing of sub-objects shall be stopped\n **/\nfunction createALPTableView(\n    transferParameters: TransferParameterTypeV4,\n    configObject: any,\n    key: string\n): { newElementCreated: boolean; stopProcessing: boolean } {\n    let newElementCreated = false;\n    if (!configObject[key] || Object.keys(configObject[key]).length === 0 || !configObject.chart) {\n        return { newElementCreated, stopProcessing: true };\n    }\n    const path = getSettingsPathForPage(transferParameters.pageNameArray) + `/views`;\n    const views = getManifestSectionByPathV4(transferParameters.exportResults.manifest, path);\n    if (!views['paths'] || Object.keys(views['paths']).length === 0) {\n        views['paths'] = [\n            {\n                secondary: [\n                    {\n                        annotationPath: configObject[key].annotationPath\n                    }\n                ]\n            }\n        ];\n        newElementCreated = true;\n    } else if (!views['paths'][0].secondary) {\n        views['paths'][0].secondary = [\n            {\n                annotationPath: configObject[key].annotationPath\n            }\n        ];\n        newElementCreated = true;\n    }\n    return { newElementCreated, stopProcessing: false };\n}\n\n/**\n * Creates an ALP 'views' entry in the resulting manifest if not yet existing yet\n * Adds the primary = chart view if missing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in config.json\n * @returns\n * - a boolean indicating that the views entry got created.\n * - a boolean indicating if the processing of sub-objects shall be stopped\n */\nfunction createALPChartView(\n    transferParameters: TransferParameterTypeV4,\n    configObject: any,\n    key: string\n): { newElementCreated: boolean; stopProcessing: boolean } {\n    let newElementCreated = false;\n\n    if (!configObject[key] || Object.keys(configObject[key]).length === 0) {\n        return { newElementCreated, stopProcessing: true };\n    }\n    const path = getSettingsPathForPage(transferParameters.pageNameArray) + `/views`;\n    const views = getManifestSectionByPathV4(transferParameters.exportResults.manifest, path);\n    if (!views['paths'] || Object.keys(views['paths']).length === 0) {\n        views['paths'] = [\n            {\n                primary: [\n                    {\n                        annotationPath: configObject[key].annotationPath\n                    }\n                ]\n            }\n        ];\n        newElementCreated = true;\n    } else if (!views['paths'][0].primary) {\n        views['paths'][0].primary = [\n            {\n                annotationPath: configObject[key].annotationPath\n            }\n        ];\n        newElementCreated = true;\n    }\n    if (!views['paths'][0].secondary) {\n        views['paths'][0].secondary = [\n            {\n                annotationPath: configObject?.table?.annotationPath || 'com.sap.vocabularies.UI.v1.LineItem'\n            }\n        ];\n    }\n    return { newElementCreated, stopProcessing: false };\n}\n\n/**\n * Creates an LR 'views' entry in the resulting manifest if not yet existing yet.\n * Adds the current table view if missing.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object in config.json\n * @returns a boolean indicating that the views entry got created.\n */\nfunction createLRTableView(\n    index: number,\n    transferParameters: TransferParameterTypeV4,\n    key: string,\n    configObject: any\n): boolean {\n    if (!configObject || Object.keys(configObject).length === 0) {\n        return false;\n    }\n    let newElementCreated = false;\n    const path = getSettingsPathForPage(transferParameters.pageNameArray) + `/views`;\n    const views = getManifestSectionByPathV4(transferParameters.exportResults.manifest, path);\n    const newEntry = {\n        key: configObject['key'],\n        annotationPath: configObject.annotationPath\n    };\n    if (!views['paths'] || Object.keys(views['paths']).length === 0) {\n        //No views yet\n        views['paths'] = [newEntry];\n        newElementCreated = true;\n    } else {\n        const existingIndex = views['paths'].findIndex((view) => view.key === configObject['key'] || view.key === key);\n        if (existingIndex === -1) {\n            //Given view does not exist yet\n            views['paths'].push(newEntry);\n            newElementCreated = true;\n        } else if (existingIndex !== configObject.index) {\n            //Reordering scenario\n            const savedContent = JSON.parse(JSON.stringify(views['paths'][existingIndex]));\n            views['paths'].splice(existingIndex, 1);\n            views['paths'].splice(index, 0, savedContent);\n            newElementCreated = true;\n        }\n    }\n    return newElementCreated;\n}\n\n/**\n * Special logic to create new elements in manifest\n * @param definitionName - schema definition name of the current object\n * @param key - key of the current object\n * @param configObject - current object in config.json\n * @param breadcrumbs - array of sequence of properties that we are currently processing. Required for instance for table column name\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @returns newElementCreated - boolean value to indicate that a new element was created ==> no further sync rule on this level\n */\nfunction createNewElement(\n    index: number,\n    definitionName: string,\n    key: string,\n    configObject: any,\n    breadcrumbs: string[],\n    transferParameters: TransferParameterTypeV4,\n    preprocessed = false\n): { newElementCreated: boolean; stopProcessing: boolean } {\n    let newElementCreated = false;\n    const stopProcessing = false;\n    if (definitionName && !preprocessed) {\n        if (definitionName.startsWith(DefinitionName.CustomColumn)) {\n            newElementCreated = createNewCustomColumn(\n                key,\n                transferParameters,\n                configObject[key],\n                transferParameters.logger,\n                breadcrumbs\n            );\n        } else if (definitionName === DefinitionName.ALPChartView && key === PropertyName.chart && configObject) {\n            return createALPChartView(transferParameters, configObject, key);\n        } else if (definitionName === DefinitionName.ALPTableView && key === PropertyName.table && configObject) {\n            return createALPTableView(transferParameters, configObject, key);\n        } else if (\n            key &&\n            (definitionName.startsWith(DefinitionName.LRTableView) ||\n                definitionName.startsWith(DefinitionName.LRChartView))\n        ) {\n            newElementCreated = createLRTableView(index, transferParameters, key, configObject[key]);\n        }\n    }\n    return { newElementCreated, stopProcessing };\n}\n\ntype TransferEntryParameters = {\n    transferParameters: TransferParameterTypeV4;\n    breadcrumbs: string[];\n    key: string;\n    index: number;\n    configObject: { [key: string]: any };\n    propertyDefinition: Definition;\n};\n\n/**\n * Transfers one entry of a list (aka one property of the config) to the manifest\n * @param {TransferEntryParameters} parameters - list of parameters\n * @param parentIds - array of collected parent ids\n * @param stableIdParts - list of parts of the stable ID for flex changes\n * @param preprocessed - indicates that the list was already preprocessed by following the config order\n */\nfunction transferSortedListEntry(\n    parameters: TransferEntryParameters,\n    parentIds: string[],\n    stableIdParts: string[],\n    preprocessed = false\n): void {\n    const currentConfigObject = parameters.configObject[parameters.key];\n    const childId = getChildId(parameters.configObject, parameters.key);\n    const nextDefinition = getNextTargetDefinition(\n        parameters.transferParameters.appSchema,\n        parameters.transferParameters.title,\n        currentConfigObject,\n        parameters.propertyDefinition,\n        parameters.key,\n        parameters.transferParameters.factory,\n        parameters.transferParameters.pageType\n    );\n    const { newElementCreated, stopProcessing } = createNewElement(\n        parameters.index,\n        parameters.propertyDefinition.$ref?.split(DEFINITION_LINK_PREFIX)[1],\n        parameters.key,\n        parameters.configObject,\n        parameters.breadcrumbs,\n        parameters.transferParameters,\n        preprocessed\n    );\n    const ids = childId ? [...parentIds, childId] : [...parentIds, parameters.key];\n    if (!newElementCreated) {\n        evaluateExportRule(\n            parameters.transferParameters,\n            parameters.breadcrumbs,\n            parameters.key,\n            parameters.configObject,\n            ids,\n            parameters.propertyDefinition,\n            nextDefinition\n        );\n    }\n\n    if (\n        parameters.propertyDefinition &&\n        ((typeof currentConfigObject === 'object' && Object.keys(currentConfigObject).length !== 0) ||\n            (parameters.propertyDefinition.$ref && nextDefinition.configObject)) &&\n        !stopProcessing\n    ) {\n        const localIdParts = childId ? [...stableIdParts, childId] : stableIdParts;\n        transferSubObject(parameters, nextDefinition, currentConfigObject, ids, localIdParts);\n    }\n}\n\n/**\n * Function for special handling of anyOf definitions during the export\n * @param {TransferEntryParameters} parameters - list of parameters\n * @param anyOfDefinitions - the array of definitions from the anyOf (of additionalProperties)\n * @param schemaDefinition - parent definition, comprising properties as well as additionalProperties\n * @param parentIds - array of collected parent ids\n * @param stableIdParts - list of parts of the stable ID for flex changes\n * @returns\n */\nfunction transferConfigEntriesWithAnyOfDefinitions(\n    transferEntryParameters: TransferEntryParameters,\n    anyOfDefinitions: Definition[],\n    schemaDefinition: Definition,\n    parentIds: string[],\n    stableIdParts: string[]\n): boolean {\n    let preprocessed = false;\n    if (anyOfDefinitions) {\n        const configEntries = Object.entries(transferEntryParameters.configObject);\n        if (!configEntries || configEntries.length < 1) {\n            return preprocessed;\n        }\n        configEntries.sort((a, b) => a[1]['index'] - b[1]['index']);\n        //follow the config order, to support reordering\n        configEntries.forEach((configEntry) => {\n            if (schemaDefinition.properties[configEntry[0]]) {\n                transferEntryParameters.key = configEntry[0];\n                transferEntryParameters.propertyDefinition = schemaDefinition.properties[configEntry[0]] as Definition;\n                //already part of schema\n                transferSortedListEntry(transferEntryParameters, parentIds, stableIdParts);\n                preprocessed = true;\n            } else if (typeof configEntry[1] === 'object') {\n                //match against potential schema definitions\n                anyOfDefinitions.forEach((anyOfDefinition) => {\n                    if (anyOfDefinition.$ref) {\n                        transferEntryParameters.key = configEntry[0];\n                        transferEntryParameters.propertyDefinition = anyOfDefinition;\n                        transferSortedListEntry(transferEntryParameters, parentIds, stableIdParts);\n                        preprocessed = true;\n                    }\n                });\n            }\n            transferEntryParameters.index++;\n        });\n    }\n    return preprocessed;\n}\n\n/**\n * Method updates list of definition entries from schema with entries for insertion based on `additionalProperties` entry.\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API.\n * @param {Definition} additionalProperties - allowed additional properties.\n * @param {[string, DefinitionOrBoolean][]} list - list with entries.\n * @param {{ [key: string]: unknown }} configObject - configuration object.\n */\nfunction mergeEntriesForInsert(\n    transferParameters: TransferParameterTypeV4,\n    additionalProperties: Definition,\n    list: [string, DefinitionOrBoolean][],\n    configObject: { [key: string]: unknown }\n): void {\n    let properties = additionalProperties?.properties;\n    let required = additionalProperties?.required;\n    if (!properties && additionalProperties?.$ref) {\n        const reference = additionalProperties?.$ref;\n        const definition = transferParameters.appSchema.definitions[reference.split(DEFINITION_LINK_PREFIX)[1]];\n        if (typeof definition === 'object') {\n            properties = definition.properties;\n            required = definition.required;\n        }\n    }\n\n    if (!properties) {\n        return;\n    }\n    required = required || [];\n    // Merge new entries for creation into list\n    for (const key in configObject) {\n        const entry = configObject[key];\n        // Check if entry from config does not exist in list - potential insert.\n        // Additionally check if interface of config entry matches additionalProperties - all required properties should exist in entry\n        if (\n            typeof entry === 'object' &&\n            !list.some((item) => item[0] === key) &&\n            required.every((property: string): boolean => entry[property])\n        ) {\n            list.push([key, additionalProperties]);\n        }\n    }\n}\n\n/**\n * Recursive function that traverses the content of the current object. It reads decorators and fills exportResultManifest entries and flex changes\n * @param {TransferParameterTypeV4} transferParameters - list of parameters passed from API\n * @param configObject - current object to traverse\n * @param parentIds - array of collected parent ids\n * @param stableIdParts - list of parts of the stable ID for flex changes\n * @param breadcrumbs - array of sequence of properties that we are currently processing. Required for instance for table column name\n * @param schemaDefinition - the current entry point or definition in the app schema\n * @param title - the title to be used for the given schema definition\n */\nfunction transferManifestEntriesAndFlexChange(\n    transferParameters: TransferParameterTypeV4,\n    configObject: { [key: string]: any },\n    parentIds: string[],\n    stableIdParts: string[],\n    breadcrumbs: string[],\n    schemaDefinition: Definition\n): void {\n    if (!schemaDefinition?.properties) {\n        return;\n    }\n    let index = 0;\n    //In case of additionalProperties = flexible array definition ==> new entries from the config shall be exported too\n    const transferEntryParameters: TransferEntryParameters = {\n        transferParameters,\n        breadcrumbs,\n        key: undefined,\n        index,\n        configObject,\n        propertyDefinition: undefined\n    };\n    const additionalProperties = schemaDefinition.additionalProperties as Definition;\n    const anyOfDefinitions = additionalProperties?.anyOf as Definition[];\n\n    const preprocessed = transferConfigEntriesWithAnyOfDefinitions(\n        transferEntryParameters,\n        anyOfDefinitions,\n        schemaDefinition,\n        parentIds,\n        stableIdParts\n    );\n    //Sort if there is a propertyIndex, so that the exported list ends up in manifest in the right order\n    let sortedList = schemaDefinition.properties && Object.entries(schemaDefinition.properties);\n    if (sortedList) {\n        if (sortedList[0]?.[1][SchemaTag.propertyIndex]) {\n            sortedList = Object.entries(schemaDefinition.properties).sort(\n                (a, b) => a[1][SchemaTag.propertyIndex] - b[1][SchemaTag.propertyIndex]\n            );\n        }\n        if (additionalProperties?.$ref) {\n            // Merge new entries for creation into list\n            mergeEntriesForInsert(transferParameters, additionalProperties, sortedList, configObject);\n        }\n        index = 0;\n        sortedList.forEach((element: object) => {\n            transferEntryParameters.key = element[0];\n            transferEntryParameters.propertyDefinition = element[1];\n            transferEntryParameters.index = index;\n            transferSortedListEntry(transferEntryParameters, parentIds, stableIdParts, preprocessed);\n            if (element[1].$ref) {\n                index++;\n            }\n        });\n    }\n}\n\n/**\n * Instantiates the export classes for a single object page section\n * @param sectionId - Current section ID\n */\nfunction getClassesForSingleSection(\n    objectPageConfig: v4.ObjectPageConfigV4,\n    sectionId: string,\n    factory: MetadataInstanceInterface\n): void {\n    if (sectionId === 'custom' && Array.isArray(objectPageConfig.sections[sectionId])) {\n        // Custom sections\n        const customSections: Array<ObjectPageCustomSectionFragment> = objectPageConfig.sections\n            .custom as Array<ObjectPageCustomSectionFragment>;\n        for (let index = 0; index < customSections.length; index++) {\n            customSections[index] = factory.createInstance(\n                PageType.ObjectPage,\n                'ObjectPageCustomSectionView',\n                customSections[index],\n                customSections[index].className\n            );\n        }\n    }\n}\n\n/**\n * Recursive sub-function for handling subsections\n * @param section - Object page section in config\n */\nfunction getSubsectionClasses(section: object, factory: MetadataInstanceInterface): void {\n    if (section['subsections']) {\n        let subSection: object;\n        for (const subSectionId in section['subsections']) {\n            subSection = section['subsections'][subSectionId];\n            getClassesForSingleSection(subSection, subSectionId, factory);\n            getSubsectionClasses(subSection, factory);\n        }\n    }\n}\n\n/**\n * Instantiates the export classes for the object page section\n * @param objectPageConfig - the given object page configuration\n * @param objectPage - the overall object page export class where the sections shall be included\n */\nfunction getExportClassesForSections(\n    objectPageConfig: v4.ObjectPageConfigV4,\n    objectPage: ObjectPage,\n    factory: MetadataInstanceInterface\n): void {\n    let section: object;\n    for (const sectionId in objectPageConfig.sections) {\n        section = objectPage.sections[sectionId];\n        getClassesForSingleSection(objectPageConfig, sectionId, factory);\n        getSubsectionClasses(section, factory);\n    }\n}\n\n/**\n * Run through the given ObjectPage config and return respective exportResultManifest entry and flex changes\n * @param appId - id of the Fiori elements app, which is usually namespace.appid\n * @param objectPageConfig - content of the src/ObjectPage_<entity_set>.json file\n * @param manifest - manifest of the application\n * @param pageName - routing target defined in manifest\n */\nconst exportObjectPage = (exportParameters: ExportObjectPageV4Parameters, ui5Version: UI5Version): ExportResults => {\n    const exportResults: ExportResults = defaultExportResult;\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest));\n\n    const factory = new Factory();\n    const objectPage = factory.createPageInstance(PageType.ObjectPage, exportParameters.page.config);\n    const pageLayoutInformation = getPageLayoutInformation(objectPage);\n    const pageName = exportParameters.page.name;\n    const baseId = `${exportParameters.appId}::${pageLayoutInformation.id}::${pageName}--`;\n\n    if (exportParameters.page.config?.[PropertyName.sections]) {\n        getExportClassesForSections(exportParameters.page.config, objectPage, factory);\n    }\n    const transferParameters: TransferParameterTypeV4 = {\n        exportResults,\n        appId: exportParameters.appId,\n        appRootPath: exportParameters.appRootPath,\n        baseId,\n        appSchema: exportParameters.jsonSchema,\n        config: objectPage,\n        ui5Version,\n        factory,\n        pageNameArray: [pageName],\n        pageType: PageType.ObjectPage,\n        title: undefined,\n        templateType: TemplateType.ListReportObjectPageV4\n    };\n\n    transferManifestEntriesAndFlexChange(\n        transferParameters,\n        objectPage,\n        [], //no parentIds\n        [], // no stableIds\n        [], // no breadcrumbs\n        exportParameters.jsonSchema //starting point for target definition\n    );\n\n    return exportResults;\n};\n\n/**\n * Run through the given List Page (LR or ALP) config and return respective exportResultManifest entry and flex changes\n * @param {ExportListReportV4Parameters} exportParameters - all API parameters needed for the export\n * @param config - content of the config file\n * @param {PageTypeV4} - pageType - Page type\n * @param ui5Version - SAP UI5 version\n */\nconst exportListPage = (\n    exportParameters: ExportListReportV4Parameters,\n    factory: Factory,\n    config: v4.ListReportConfigV4,\n    pageType: PageTypeV4,\n    ui5Version: UI5Version,\n    templateType: TemplateType\n): ExportResults => {\n    const exportResults: ExportResults = defaultExportResult;\n    exportResults.manifest = JSON.parse(JSON.stringify(exportParameters.manifest)) as Manifest;\n    const appSchema = exportParameters.jsonSchema as Definition;\n\n    const definitionName = config.table?.[PropertyName.annotationPath]\n        ? DefinitionName.ALPTableView\n        : DefinitionName.Table;\n    const tableDefinition = (config.table = factory.createInstance(pageType, definitionName, config.table));\n    let tableDefinitionName = DefinitionName.LineItems;\n    if (appSchema.definitions[DefinitionName.TableSPV]) {\n        const tableRef = (appSchema.definitions[DefinitionName.TableSPV] as Definition).properties.columns['$ref'];\n        tableDefinitionName = tableRef.split(DEFINITION_LINK_PREFIX)[1];\n    }\n    const appSchemaActions = appSchema.definitions[`${DefinitionName.Actions}<${tableDefinitionName}>`] as Definition;\n    if (tableDefinition.toolBar?.actions && appSchemaActions) {\n        for (const actionKey in appSchemaActions.properties) {\n            tableDefinition.toolBar.actions[actionKey] = factory.createInstance(\n                pageType,\n                DefinitionName.ToolBarAction,\n                tableDefinition.toolBar.actions[actionKey]\n            );\n        }\n    }\n\n    const pageLayoutInformation = getPageLayoutInformation(config);\n    const pageName = exportParameters.page.name;\n    const baseId = `${exportParameters.appId}::${pageLayoutInformation.id}::${pageName}--`;\n    if (!exportResults.manifest[ManifestSection.ui5].routing.targets[pageName]) {\n        const newTarget = getNewRoutingTarget(pageLayoutInformation.pageId, pageName);\n        exportResults.manifest[ManifestSection.ui5].routing.targets[pageName] = newTarget;\n    }\n\n    const transferParameters: TransferParameterTypeV4 = {\n        exportResults,\n        appId: exportParameters.appId,\n        appRootPath: exportParameters.appRootPath,\n        baseId,\n        appSchema,\n        config,\n        ui5Version,\n        factory,\n        pageNameArray: [pageName],\n        pageType: PageType.ListReport,\n        title: undefined,\n        logger: exportParameters.logger,\n        templateType\n    };\n\n    transferManifestEntriesAndFlexChange(\n        transferParameters,\n        config,\n        [], //no parentIds\n        [], // no stableIds\n        [], // no breadcrumbs\n        appSchema //starting point for target definition\n    );\n\n    return exportResults;\n};\n\n/**\n * Run through the given ListReport config and return respective exportResultManifest entry and flex changes\n * @param {ExportListReportV4Parameters} exportParameters - all API parameters needed for the export\n * @param ui5Version - SAP UI5 version\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nconst exportListReportPage = (\n    exportParameters: ExportListReportV4Parameters,\n    ui5Version: UI5Version,\n    templateType: TemplateType\n): ExportResults => {\n    const factory = new Factory();\n    const listReport = factory.createPageInstance(PageType.ListReport, exportParameters.page.config);\n\n    return exportListPage(exportParameters, factory, listReport, PageTypeV4.ListReport, ui5Version, templateType);\n};\n\n/**\n * Run through the given Analytical List Page config and return respective exportResultManifest entry and flex changes\n * @param {ExportAnalyticalListPageV4Parameters} exportParameters - all API parameters needed for the export\n * @param ui5Version - SAP UI5 version\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n *\n * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.\n */\nconst exportAnalyticalListPage = (\n    exportParameters: ExportAnalyticalListPageV4Parameters,\n    ui5Version: UI5Version\n): ExportResults => {\n    return exportListReportPage(exportParameters, ui5Version, TemplateType.AnalyticalListPageV4);\n};\n\n/**\n * API for the export of a V4 app configuration\n * Export means the transfer of the properties and values of the given config to manifest entries or flex changes\n * @param application - V4 application (app.json config file)\n * @param manifest - Manifest of the given app\n * @param appSchema - App schema\n *\n * @returns ExportResults = object comprising the updated manifest and a list of flex changes\n */\nconst exportApplicationV4 = (application: ApplicationV4, manifest: object, appSchema: Definition): ExportResults => {\n    const exportResults: ExportResults = defaultExportResult;\n    exportResults.manifest = JSON.parse(JSON.stringify(manifest));\n\n    const applicationV4 = Object.assign(new ApplicationV4(), application);\n\n    //transform application settings\n    applicationV4.settings = Object.assign(new AppSettings(), applicationV4.settings);\n    for (const key in (appSchema.definitions.AppSettings as Definition).properties) {\n        const syncRule = getReflectMetadata(applicationV4.settings, key);\n        if (syncRule && syncRule.manifest) {\n            const path = syncRule.manifest.path();\n            const manifestSection = getManifestSectionByPathV4(exportResults.manifest, path);\n            if (syncRule.manifest.export) {\n                const exportParams: ExportToManifestParams = {\n                    exportHandler: syncRule.manifest.export,\n                    manifestSection,\n                    configObject: application,\n                    configPropertyKey: key,\n                    manifestKey: key,\n                    syncRuleKey: key\n                };\n                const propertyDefinition = (appSchema.definitions.AppSettings as Definition).properties[key];\n                transferPropertyToManifest(exportParams, propertyDefinition as Definition, {});\n            } else {\n                if (application.settings?.[key] !== undefined) {\n                    manifestSection[key] = application.settings[key];\n                } else {\n                    delete manifestSection[key];\n                }\n            }\n            deleteEmptyStructure(exportResults.manifest, path);\n        }\n    }\n    //transform routing\n    exportResults.manifest[ManifestSection.ui5].routing = transformRoutingV4(\n        application['home'],\n        application['pages'],\n        exportResults.manifest\n    );\n\n    // Update FCL data\n    updateFcl(exportResults.manifest[ManifestSection.ui5] as v4.SapUi5V4, application);\n\n    return exportResults;\n};\n\n/**\n * General API for the export of a V4 config page\n * Export means the transfer of the properties and values of the given config to manifest entries or flex changes\n * @param appId - Application ID\n * @param page - Current page (config)\n * @param manifest - Manifest of the given app\n * @param jsonSchema - App schema\n *\n * @returns ExportResults = object comprising the updated manifest and a list of flex changes\n */\nexport const exportPageV4 = (\n    exportParametersV4: ExportParametersV4[FioriElementsVersion.v4],\n    ui5Version: UI5Version\n): ExportResults | undefined => {\n    if (exportParametersV4[SchemaType.ListReport]) {\n        return exportListReportPage(\n            exportParametersV4[SchemaType.ListReport],\n            ui5Version,\n            TemplateType.ListReportObjectPageV4\n        );\n    } else if (exportParametersV4[SchemaType.ObjectPage]) {\n        return exportObjectPage(exportParametersV4[SchemaType.ObjectPage], ui5Version);\n    } else if (exportParametersV4[SchemaType.Application]) {\n        const { application, manifest, jsonSchema } = exportParametersV4[SchemaType.Application];\n        return exportApplicationV4(application, manifest, jsonSchema);\n    } else if (exportParametersV4[SchemaType.AnalyticalListPage]) {\n        return exportAnalyticalListPage(exportParametersV4[SchemaType.AnalyticalListPage], ui5Version);\n    }\n};\n", "import { basename, join } from 'path';\nimport { readFile as readFileFs, readdir, stat, exists } from 'fs';\nimport type { Manifest, FileData } from '@sap/ux-specification-types';\n\nexport interface Project {\n    root: string;\n    name: string;\n    manifest: Manifest;\n    annotations: FileData[];\n    changes: string[];\n    fragments: FileData[];\n}\n\nconst readFile = async (path: string): Promise<string> => {\n    return new Promise((resolve, reject): void => {\n        readFileFs(path, { encoding: 'utf8' }, (err, data): void => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n};\n\nconst readJSON = async <T>(path: string): Promise<T> => {\n    return JSON.parse(await readFile(path)) as T;\n};\n\nexport const readDirectory = async (path: string): Promise<string[]> => {\n    return new Promise((resolve, reject): void => {\n        readdir(path, { encoding: 'utf8' }, (err, data): void => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(data);\n            }\n        });\n    });\n};\n\nexport const isDirectory = async (path: string): Promise<boolean> => {\n    return new Promise((resolve): void => {\n        stat(path, (err, stats): void => {\n            if (err) {\n                resolve(false);\n            } else {\n                resolve(stats.isDirectory());\n            }\n        });\n    });\n};\n\nconst resourceExists = async (path: string): Promise<boolean> => {\n    return new Promise((resolve) => {\n        exists(path, (doesExist) => {\n            resolve(doesExist);\n        });\n    });\n};\n\nconst getManifest = async (path: string): Promise<Manifest> => {\n    return readJSON<Manifest>(join(path, 'manifest.json'));\n};\n\nexport const getChanges = async (webapp: string): Promise<string[]> => {\n    const changes: string[] = [];\n    const changesDirectory = join(webapp, 'changes');\n    if (!(await resourceExists(changesDirectory))) {\n        return changes;\n    }\n    const extensions = [\n        '.change',\n        '.variant',\n        '.ctrl_variant',\n        '.ctrl_variant_change',\n        '.ctrl_variant_management_change'\n    ];\n    const files = await readDirectory(changesDirectory);\n    for (const file of files) {\n        if (extensions.some((ext) => file.endsWith(ext))) {\n            changes.push(await readFile(join(changesDirectory, file)));\n        }\n    }\n    return changes;\n};\n\nconst getFragments = async (webAppPath: string): Promise<FileData[]> => {\n    const fragments: FileData[] = [];\n\n    const directoryPath = join(webAppPath, 'ext', 'fragments');\n    if (!(await resourceExists(directoryPath))) {\n        return fragments;\n    }\n    const files = await readDirectory(directoryPath);\n    for (const file of files) {\n        const filePath = join(directoryPath, file);\n        const data = await readFile(filePath);\n        fragments.push({\n            dataSourceUri: filePath,\n            fileContent: data\n        });\n    }\n    return fragments;\n};\n\nconst getAnnotations = async (manifest: Manifest, webAppPath: string): Promise<FileData[]> => {\n    const annotationData: FileData[] = [];\n    const serviceDataSources = manifest?.['sap.app']?.dataSources;\n    if (serviceDataSources?.mainService?.settings?.localUri) {\n        const metadataPath = join(webAppPath, serviceDataSources.mainService.settings.localUri);\n        annotationData.push({\n            dataSourceUri: metadataPath,\n            fileContent: await readFile(metadataPath)\n        });\n    }\n    if (serviceDataSources?.mainService?.settings?.annotations) {\n        for (const annotationRef of serviceDataSources.mainService.settings.annotations) {\n            if (serviceDataSources[annotationRef]?.settings?.localUri) {\n                const annotationFilePath = join(webAppPath, serviceDataSources[annotationRef].settings.localUri);\n                annotationData.push({\n                    dataSourceUri: annotationFilePath,\n                    fileContent: await readFile(annotationFilePath)\n                });\n            }\n        }\n    }\n    //Consider CAP/multiple services\n    if (annotationData.length === 0) {\n        for (const key in serviceDataSources) {\n            const dataSource = serviceDataSources[key];\n            if (dataSource?.type === 'ODataAnnotation' && dataSource?.settings?.localUri) {\n                const annotationFilePath = join(webAppPath, dataSource.settings.localUri);\n                annotationData.push({\n                    dataSourceUri: annotationFilePath,\n                    fileContent: await readFile(annotationFilePath)\n                });\n            }\n        }\n    }\n\n    return annotationData;\n};\n\n/**\n * Get the project artefacts, like manifest, service metadata, annotations\n * @param root - project root where package.json is\n */\nexport const getProject = async (root: string): Promise<Project> => {\n    const name = basename(root);\n    const webappPath = join(root, 'webapp');\n    const manifest = await getManifest(webappPath);\n    const annotations = await getAnnotations(manifest, webappPath);\n    const changes = await getChanges(webappPath);\n    const fragments = await getFragments(webappPath);\n    return {\n        root,\n        name,\n        manifest,\n        annotations,\n        changes,\n        fragments\n    };\n};\n"],
  "mappings": "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",
  "names": []
}
